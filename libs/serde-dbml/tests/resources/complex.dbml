Project project_name {
  database_type: 'PostgreSQL'
  Note: 'Description of the project'
}

Table users {
  id integer [primary key]
  name varchar [not null, unique]
}

Table profiles {
  id integer [pk]
  user_id integer [ref: - users.id]
  bio text [null]
  active boolean [default: true]
}

Table projects {
  id integer [pk]
  name varchar
}

// Ref: projects.id <> users.id // many-to-many => fails

Table roles {
  id integer [pk]
  name varchar
  level int [default: 0, note: 'used to order roles']
}

Table user_roles {
  user_id integer [ref: > users.id]
  role_id integer
  created_at timestamp [default: `now()`]

  indexes {
    (user_id, role_id) [pk]
    created_at [name: 'created_at_index', note: 'Date']
  }
}
Ref: user_roles.role_id > roles.id

Table blog.posts as P [headercolor: #ccc] {
  id "bigint unsigned" [primary key, increment]
  status post_status [default: 'draft']
  title varchar [note: 'Title of the post']
  author integer

  Note: 'Stores all posts'
}

Ref: blog.posts.author > users.id // many-to-one

enum blog.post_status {
    draft [note: 'Waiting to be processed']
    published
    archived
}

TableGroup blog.publication {
  users
  blog.posts
}
