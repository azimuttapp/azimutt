-- drop everything
DROP ROLE C##INVENTORY_ROLE;
DROP USER C##INVENTORY CASCADE;

-- create the database (needs admin rights)
CREATE USER C##INVENTORY IDENTIFIED BY inventory;
GRANT UNLIMITED TABLESPACE TO C##INVENTORY;
CREATE ROLE C##INVENTORY_ROLE;
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE TYPE, CREATE TRIGGER to C##inventory_role;
GRANT C##INVENTORY_ROLE TO C##INVENTORY;


CREATE TABLE C##INVENTORY.EMPLOYEES
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(255),
    LAST_NAME  VARCHAR2(255),
    EMAIL      VARCHAR2(255),
    PHONE      VARCHAR2(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_EMPLOYEES_NAME ON C##INVENTORY.EMPLOYEES (FIRST_NAME, LAST_NAME);
CREATE INDEX IDX_EMPLOYEES_EMAIL ON C##INVENTORY.EMPLOYEES (EMAIL);
CREATE INDEX IDX_EMPLOYEES_DELETED_AT ON C##INVENTORY.EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSES
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME       VARCHAR2(255) UNIQUE,
    ADDRESS    CLOB,
    MANAGER    NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_WAREHOUSES_DELETED_AT ON C##INVENTORY.WAREHOUSES (DELETED_AT);

CREATE TABLE C##INVENTORY.HALLS
(
    ID           NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    NAME         VARCHAR2(255),
    MANAGER      NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    DELETED_AT   TIMESTAMP,
    DELETED_BY   NUMBER
);

CREATE INDEX IDX_HALLS_DELETED_AT ON C##INVENTORY.HALLS (DELETED_AT);

CREATE TABLE C##INVENTORY.AISLES
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    HALL_ID    NUMBER REFERENCES C##INVENTORY.HALLS (ID),
    NAME       VARCHAR2(255),
    MANAGER    NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_AISLES_DELETED_AT ON C##INVENTORY.AISLES (DELETED_AT);

CREATE TABLE C##INVENTORY.RACKS
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    AISLE_ID   NUMBER REFERENCES C##INVENTORY.AISLES (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_RACKS_DELETED_AT ON C##INVENTORY.RACKS (DELETED_AT);

CREATE TABLE C##INVENTORY.SHELVES
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RACK_ID    NUMBER REFERENCES C##INVENTORY.RACKS (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_SHELVES_DELETED_AT ON C##INVENTORY.SHELVES (DELETED_AT);

CREATE TABLE C##INVENTORY.SHELF_POSITIONS
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SHELF_ID   NUMBER REFERENCES C##INVENTORY.SHELVES (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);

CREATE INDEX IDX_SHELF_POSITIONS_DELETED_AT ON C##INVENTORY.SHELF_POSITIONS (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSE_EMPLOYEES
(
    WAREHOUSE_ID NUMBER,
    EMPLOYEE_ID  NUMBER,
    ROLE         VARCHAR2(255),
    "START"      TIMESTAMP,
    END          TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    DELETED_AT   TIMESTAMP,
    DELETED_BY   NUMBER,
    PRIMARY KEY (WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (WAREHOUSE_ID) REFERENCES C##INVENTORY.WAREHOUSES (ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES C##INVENTORY.EMPLOYEES (ID)
);

CREATE INDEX IDX_WAREHOUSE_EMPLOYEES_DELETED_AT ON C##INVENTORY.WAREHOUSE_EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS
(
    WAREHOUSE_ID NUMBER,
    EMPLOYEES_ID NUMBER,
    KIND         VARCHAR2(255),
    VALUE        VARCHAR2(255),
    EXPIRE       TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    PRIMARY KEY (WAREHOUSE_ID, EMPLOYEES_ID, KIND),
    FOREIGN KEY (WAREHOUSE_ID) REFERENCES C##INVENTORY.WAREHOUSES (ID),
    FOREIGN KEY (EMPLOYEES_ID) REFERENCES C##INVENTORY.EMPLOYEES (ID)
);

CREATE TABLE C##INVENTORY.BRANDS
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SLUG       VARCHAR2(255) UNIQUE,
    NAME       VARCHAR2(255) UNIQUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE INDEX IDX_BRANDS_DELETED_AT ON C##INVENTORY.BRANDS (DELETED_AT);

CREATE TABLE C##INVENTORY.PRODUCTS
(
    ID          NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SLUG        VARCHAR2(255) UNIQUE,
    NAME        VARCHAR2(255) UNIQUE,
    BRAND       NUMBER REFERENCES C##INVENTORY.BRANDS (ID),
    CATEGORY    VARCHAR2(255),
    SUBCATEGORY VARCHAR2(255),
    WIDTH       FLOAT,
    LENGTH      FLOAT,
    HEIGHT      FLOAT,
    WEIGHT      FLOAT,
    REMARKS     CLOB,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT  TIMESTAMP
);

CREATE INDEX IDX_PRODUCTS_DELETED_AT ON C##INVENTORY.PRODUCTS (DELETED_AT);

CREATE TABLE C##INVENTORY.PRODUCT_VERSIONS
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PRODUCTS (ID),
    SKU        VARCHAR2(12) UNIQUE,
    EAN        VARCHAR2(13) UNIQUE,
    NAME       VARCHAR2(255) UNIQUE,
    SPECS      JSON,
    WIDTH      FLOAT,
    LENGTH     FLOAT,
    HEIGHT     FLOAT,
    WEIGHT     FLOAT,
    REMARKS    CLOB,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE INDEX IDX_PRODUCT_VERSIONS_DELETED_AT ON C##INVENTORY.PRODUCT_VERSIONS (DELETED_AT);

CREATE TABLE C##INVENTORY.PHYSICAL_PRODUCTS
(
    ID                 NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PRODUCT_VERSION_ID NUMBER REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID),
    SNID               VARCHAR2(12) UNIQUE,
    EXPIRATION         TIMESTAMP,
    REMARKS            CLOB,
    STORED             NUMBER REFERENCES C##INVENTORY.SHELF_POSITIONS (ID),
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT         TIMESTAMP
);

CREATE INDEX IDX_PHYSICAL_PRODUCTS_DELETED_AT ON C##INVENTORY.PHYSICAL_PRODUCTS (DELETED_AT);

CREATE TABLE C##INVENTORY.SUPPLIERS
(
    ID         NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME       VARCHAR2(255),
    "LEVEL"    NUMBER,
    CURRENCY   VARCHAR2(3),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE INDEX IDX_SUPPLIERS_NAME ON C##INVENTORY.SUPPLIERS (NAME);
CREATE INDEX IDX_SUPPLIERS_DELETED_AT ON C##INVENTORY.SUPPLIERS (DELETED_AT);

CREATE TABLE C##INVENTORY.SUPPLIER_PRICES
(
    SUPPLIER_ID        NUMBER,
    PRODUCT_VERSION_ID NUMBER,
    PRICE              FLOAT,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT         TIMESTAMP,
    PRIMARY KEY (SUPPLIER_ID, PRODUCT_VERSION_ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES C##INVENTORY.SUPPLIERS (ID),
    FOREIGN KEY (PRODUCT_VERSION_ID) REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID)
);

CREATE INDEX IDX_SUPPLIER_PRICES_DELETED_AT ON C##INVENTORY.SUPPLIER_PRICES (DELETED_AT);

CREATE TABLE C##INVENTORY.SUPPLIER_EMPLOYEES
(
    SUPPLIER_ID NUMBER,
    EMPLOYEE_ID NUMBER,
    ROLE        VARCHAR2(255),
    "START"     TIMESTAMP,
    END         TIMESTAMP,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY  NUMBER,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY  NUMBER,
    DELETED_AT  TIMESTAMP,
    DELETED_BY  NUMBER,
    PRIMARY KEY (SUPPLIER_ID, EMPLOYEE_ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES C##INVENTORY.SUPPLIERS (ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES C##INVENTORY.EMPLOYEES (ID)
);

CREATE INDEX IDX_SUPPLIER_EMPLOYEES_DELETED_AT ON C##INVENTORY.SUPPLIER_EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.PURCHASE_ORDERS
(
    ID           NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SUPPLIER_ID  NUMBER REFERENCES C##INVENTORY.SUPPLIERS (ID),
    PRICE        FLOAT,
    CURRENCY     VARCHAR2(3),
    DETAILS      CLOB,
    NOTES        CLOB,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    SENT_AT      TIMESTAMP,
    SENT_BY      NUMBER,
    PAID_AT      TIMESTAMP,
    DELIVERED_AT TIMESTAMP,
    VALIDATED_AT TIMESTAMP,
    VALIDATED_BY NUMBER
);

CREATE TABLE C##INVENTORY.PURCHASE_ORDER_ITEMS
(
    PURCHASE_ORDER_ID  NUMBER,
    PRODUCT_VERSION_ID NUMBER,
    QUANTITY           NUMBER,
    PRICE              FLOAT,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY         NUMBER,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY         NUMBER,
    PRIMARY KEY (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID),
    FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES C##INVENTORY.PURCHASE_ORDERS (ID),
    FOREIGN KEY (PRODUCT_VERSION_ID) REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID)
);

CREATE TABLE C##INVENTORY.DELIVERIES
(
    ID                    NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    REASON                VARCHAR2(255),
    ACCEPTED              CHAR(1) CHECK (ACCEPTED IN ('Y', 'N')),
    PURCHASE_ORDER_ID     NUMBER REFERENCES C##INVENTORY.PURCHASE_ORDERS (ID),
    WAREHOUSE_ID          NUMBER,
    WAREHOUSE_EMPLOYEE_ID NUMBER,
    SUPPLIER_ID           NUMBER,
    SUPPLIER_EMPLOYEE_ID  NUMBER,
    DELIVERED_AT          TIMESTAMP,
    FOREIGN KEY (WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID) REFERENCES C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.DELIVERY_ITEMS
(
    DELIVERY_ID         NUMBER,
    PHYSICAL_PRODUCT_ID NUMBER,
    PRIMARY KEY (DELIVERY_ID, PHYSICAL_PRODUCT_ID),
    FOREIGN KEY (DELIVERY_ID) REFERENCES C##INVENTORY.DELIVERIES (ID),
    FOREIGN KEY (PHYSICAL_PRODUCT_ID) REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID)
);

CREATE TABLE C##INVENTORY.PICKUPS
(
    ID                    NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    REASON                VARCHAR2(255),
    ACCEPTED              CHAR(1) CHECK (ACCEPTED IN ('Y', 'N')),
    WAREHOUSE_ID          NUMBER,
    WAREHOUSE_EMPLOYEE_ID NUMBER,
    SUPPLIER_ID           NUMBER,
    SUPPLIER_EMPLOYEE_ID  NUMBER,
    DELIVERED_AT          TIMESTAMP,
    FOREIGN KEY (WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID) REFERENCES C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.PICKUP_ITEMS
(
    PICKUP_ID           NUMBER,
    PHYSICAL_PRODUCT_ID NUMBER,
    PRIMARY KEY (PICKUP_ID, PHYSICAL_PRODUCT_ID),
    FOREIGN KEY (PICKUP_ID) REFERENCES C##INVENTORY.PICKUPS (ID),
    FOREIGN KEY (PHYSICAL_PRODUCT_ID) REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID)
);

CREATE TABLE C##INVENTORY.INVENTORIES
(
    ID           NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR2(255),
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    HALL_ID      NUMBER REFERENCES C##INVENTORY.HALLS (ID),
    AISLE_ID     NUMBER REFERENCES C##INVENTORY.AISLES (ID),
    PLANNED      TIMESTAMP,
    FINISHED     TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER
);

CREATE TABLE C##INVENTORY.INVENTORY_MEMBERS
(
    INVENTORY_ID NUMBER,
    WAREHOUSE_ID NUMBER,
    EMPLOYEE_ID  NUMBER,
    PRIMARY KEY (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (INVENTORY_ID) REFERENCES C##INVENTORY.INVENTORIES (ID),
    FOREIGN KEY (WAREHOUSE_ID, EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.INVENTORY_OBSERVATIONS
(
    ID                  NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    INVENTORY_ID        NUMBER REFERENCES C##INVENTORY.INVENTORIES (ID),
    PHYSICAL_PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID),
    STATUS              VARCHAR2(255),
    MESSAGE             CLOB,
    CREATED_AT          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY          NUMBER,
    UPDATED_AT          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY          NUMBER,
    DELETED_AT          TIMESTAMP,
    DELETED_BY          NUMBER
);

CREATE INDEX IDX_INVENTORY_OBSERVATIONS_DELETED_AT ON C##INVENTORY.INVENTORY_OBSERVATIONS (DELETED_AT);


-- insert some data
INSERT INTO C##INVENTORY.EMPLOYEES (FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES ('John', 'Doe', 'john.doe@example.com', '1234567890', 1, 1);
INSERT INTO C##INVENTORY.EMPLOYEES (FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES ('Jane', 'Smith', 'jane.smith@example.com', '0987654321', 1, 1);

INSERT INTO C##INVENTORY.WAREHOUSES (NAME, ADDRESS, MANAGER, CREATED_BY, UPDATED_BY) VALUES ('Main Warehouse', '1234 Warehouse St.', 1, 1, 1);
INSERT INTO C##INVENTORY.WAREHOUSES (NAME, ADDRESS, MANAGER, CREATED_BY, UPDATED_BY) VALUES ('Secondary Warehouse', '5678 Warehouse Ave.', 2, 1, 1);

INSERT INTO C##INVENTORY.HALLS (WAREHOUSE_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Hall A', 1, 1, 1);
INSERT INTO C##INVENTORY.HALLS (WAREHOUSE_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (2, 'Hall B', 2, 1, 1);

INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Aisle 1', 1, 1, 1);
INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (2, 'Aisle 2', 2, 1, 1);

INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (1, 'Rack 1', 1, 1);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (2, 'Rack 2', 1, 1);

INSERT INTO C##INVENTORY.SHELVES (RACK_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (1, 'Shelf 1', 1, 1);
INSERT INTO C##INVENTORY.SHELVES (RACK_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (2, 'Shelf 2', 1, 1);

INSERT INTO C##INVENTORY.SHELF_POSITIONS (SHELF_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (1, 'Position 1', 1, 1);
INSERT INTO C##INVENTORY.SHELF_POSITIONS (SHELF_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (2, 'Position 2', 1, 1);

INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 'manager', 1, 1);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 2, 'stocker', 1, 1);

INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEES_ID, KIND, VALUE, CREATED_BY) VALUES (1, 1, 'badge', '123456', 1);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEES_ID, KIND, VALUE, CREATED_BY) VALUES (2, 2, 'cni', '987654', 1);

INSERT INTO C##INVENTORY.BRANDS (SLUG, NAME) VALUES ('google', 'Google');
INSERT INTO C##INVENTORY.BRANDS (SLUG, NAME) VALUES ('apple', 'Apple');

INSERT INTO C##INVENTORY.PRODUCTS (SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES ('pixel-8-pro', 'Pixel 8 Pro', 1, 'Phones', 'Smartphones', 2.8, 5.8, 0.3, 0.5);
INSERT INTO C##INVENTORY.PRODUCTS (SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES ('iphone-14', 'iPhone 14', 2, 'Phones', 'Smartphones', 2.7, 5.7, 0.3, 0.4);

INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (1, 'P8P128', '1234567890123', 'Pixel 8 Pro Menthe 128 Go', '{"color": "Menthe", "storage": 128}', 2.8, 5.8, 0.3, 0.5);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (2, 'I14128', '1234567890124', 'iPhone 14 Bleu 128 Go', '{"color": "Bleu", "storage": 128}', 2.7, 5.7, 0.3, 0.4);

INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (PRODUCT_VERSION_ID, SNID, EXPIRATION) VALUES (1, 'SN1234567890', TO_TIMESTAMP('2025-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (PRODUCT_VERSION_ID, SNID) VALUES (1, 'SN1234567891');

INSERT INTO C##INVENTORY.SUPPLIERS (NAME, "LEVEL", CURRENCY) VALUES ('Supplier A', 1, 'USD');
INSERT INTO C##INVENTORY.SUPPLIERS (NAME, "LEVEL", CURRENCY) VALUES ('Supplier B', 2, 'EUR');

INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 1, 70.00);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 2, 80.00);

INSERT INTO C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 'delivery', 1, 1);
INSERT INTO C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 2, 'sale', 1, 1);

INSERT INTO C##INVENTORY.PURCHASE_ORDERS (SUPPLIER_ID, PRICE, CURRENCY, DETAILS, NOTES, CREATED_BY, UPDATED_BY) VALUES (1, 700.00, 'USD', 'Order details for Supplier A', 'Internal notes', 1, 1);
INSERT INTO C##INVENTORY.PURCHASE_ORDERS (SUPPLIER_ID, PRICE, CURRENCY, DETAILS, NOTES, CREATED_BY, UPDATED_BY) VALUES (2, 800.00, 'EUR', 'Order details for Supplier B', 'Internal notes', 1, 1);

INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 10, 70.00, 1, 1);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 2, 5, 160.00, 1, 1);

INSERT INTO C##INVENTORY.DELIVERIES (REASON, ACCEPTED, PURCHASE_ORDER_ID, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('supplier_delivery', 'Y', 1, 1, 1, 1, 1, CURRENT_TIMESTAMP);
INSERT INTO C##INVENTORY.DELIVERIES (REASON, ACCEPTED, PURCHASE_ORDER_ID, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('customer_return', 'N', 2, 2, 2, 2, 2, CURRENT_TIMESTAMP);

INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 1);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 2);

INSERT INTO C##INVENTORY.PICKUPS (REASON, ACCEPTED, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('customer_delivery', 'Y', 1, 1, 1, 1, CURRENT_TIMESTAMP);
INSERT INTO C##INVENTORY.PICKUPS (REASON, ACCEPTED, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('supplier_return', 'N', 2, 2, 2, 2, CURRENT_TIMESTAMP);

INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 1);
INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 2);

INSERT INTO C##INVENTORY.INVENTORIES (NAME, WAREHOUSE_ID, PLANNED, CREATED_BY, UPDATED_BY) VALUES ('Inventory 1', 1, TO_TIMESTAMP('2022-01-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);
INSERT INTO C##INVENTORY.INVENTORIES (NAME, WAREHOUSE_ID, PLANNED, CREATED_BY, UPDATED_BY) VALUES ('Inventory 2', 2, TO_TIMESTAMP('2022-01-02 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);

INSERT INTO C##INVENTORY.INVENTORY_MEMBERS (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID) VALUES (1, 1, 1);
INSERT INTO C##INVENTORY.INVENTORY_MEMBERS (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID) VALUES (2, 2, 2);

INSERT INTO C##INVENTORY.INVENTORY_OBSERVATIONS (INVENTORY_ID, PHYSICAL_PRODUCT_ID, STATUS, MESSAGE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 'missing', 'Item not found', 1, 1);
INSERT INTO C##INVENTORY.INVENTORY_OBSERVATIONS (INVENTORY_ID, PHYSICAL_PRODUCT_ID, STATUS, MESSAGE, CREATED_BY, UPDATED_BY) VALUES (2, 2, 'broken', 'Item damaged', 1, 1);
