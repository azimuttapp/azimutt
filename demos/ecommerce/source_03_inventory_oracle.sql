-- drop then create the database (needs admin rights)
DROP ROLE C##INVENTORY_ROLE;
DROP USER C##INVENTORY CASCADE;
CREATE USER C##INVENTORY IDENTIFIED BY inventory;
GRANT UNLIMITED TABLESPACE TO C##INVENTORY;
CREATE ROLE C##INVENTORY_ROLE;
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE TYPE, CREATE TRIGGER to C##inventory_role;
GRANT C##INVENTORY_ROLE TO C##INVENTORY;
ALTER SESSION SET current_schema = C##INVENTORY;


-- database schema
CREATE TABLE C##INVENTORY.EMPLOYEES (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(255) NOT NULL,
    LAST_NAME  VARCHAR2(255) NOT NULL,
    EMAIL      VARCHAR2(255),
    PHONE      VARCHAR2(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CREATED_BY NUMBER NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_BY NUMBER NOT NULL,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_EMPLOYEES_NAME ON C##INVENTORY.EMPLOYEES (FIRST_NAME, LAST_NAME);
CREATE INDEX IDX_EMPLOYEES_EMAIL ON C##INVENTORY.EMPLOYEES (EMAIL);
CREATE INDEX IDX_EMPLOYEES_DELETED_AT ON C##INVENTORY.EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSES (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME       VARCHAR2(255) UNIQUE,
    ADDRESS    CLOB,
    MANAGER    NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_WAREHOUSES_DELETED_AT ON C##INVENTORY.WAREHOUSES (DELETED_AT);

CREATE TABLE C##INVENTORY.HALLS (
    ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    NAME         VARCHAR2(255),
    MANAGER      NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    DELETED_AT   TIMESTAMP,
    DELETED_BY   NUMBER
);
CREATE INDEX IDX_HALLS_DELETED_AT ON C##INVENTORY.HALLS (DELETED_AT);

CREATE TABLE C##INVENTORY.AISLES (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    HALL_ID    NUMBER REFERENCES C##INVENTORY.HALLS (ID),
    NAME       VARCHAR2(255),
    MANAGER    NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_AISLES_DELETED_AT ON C##INVENTORY.AISLES (DELETED_AT);

CREATE TABLE C##INVENTORY.RACKS (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    AISLE_ID   NUMBER REFERENCES C##INVENTORY.AISLES (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_RACKS_DELETED_AT ON C##INVENTORY.RACKS (DELETED_AT);

CREATE TABLE C##INVENTORY.SHELVES (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RACK_ID    NUMBER REFERENCES C##INVENTORY.RACKS (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_SHELVES_DELETED_AT ON C##INVENTORY.SHELVES (DELETED_AT);

CREATE TABLE C##INVENTORY.SHELF_POSITIONS (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SHELF_ID   NUMBER REFERENCES C##INVENTORY.SHELVES (ID),
    NAME       VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY NUMBER,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY NUMBER,
    DELETED_AT TIMESTAMP,
    DELETED_BY NUMBER
);
CREATE INDEX IDX_SHELF_POSITIONS_DELETED_AT ON C##INVENTORY.SHELF_POSITIONS (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSE_EMPLOYEES (
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    EMPLOYEE_ID  NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    ROLE         VARCHAR2(255),
    "START"      TIMESTAMP,
    END          TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    DELETED_AT   TIMESTAMP,
    DELETED_BY   NUMBER,
    PRIMARY KEY (WAREHOUSE_ID, EMPLOYEE_ID)
);
CREATE INDEX IDX_WAREHOUSE_EMPLOYEES_DELETED_AT ON C##INVENTORY.WAREHOUSE_EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    EMPLOYEE_ID  NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    KIND         VARCHAR2(255),
    VALUE        VARCHAR2(255),
    EXPIRE       TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    PRIMARY KEY (WAREHOUSE_ID, EMPLOYEE_ID, KIND)
);
COMMENT ON TABLE C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS IS 'how to check the employee is identified, can be several';

CREATE TABLE C##INVENTORY.BRANDS (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SLUG       VARCHAR2(255) UNIQUE,
    NAME       VARCHAR2(255) UNIQUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);
CREATE INDEX IDX_BRANDS_DELETED_AT ON C##INVENTORY.BRANDS (DELETED_AT);
COMMENT ON COLUMN C##INVENTORY.BRANDS.SLUG IS 'ex: "google"';
COMMENT ON COLUMN C##INVENTORY.BRANDS.NAME IS 'ex: "Google"';

CREATE TABLE C##INVENTORY.PRODUCTS (
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SLUG        VARCHAR2(255) UNIQUE,
    NAME        VARCHAR2(255) UNIQUE,
    BRAND       NUMBER REFERENCES C##INVENTORY.BRANDS (ID),
    CATEGORY    VARCHAR2(255),
    SUBCATEGORY VARCHAR2(255),
    WIDTH       FLOAT,
    LENGTH      FLOAT,
    HEIGHT      FLOAT,
    WEIGHT      FLOAT,
    REMARKS     CLOB,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT  TIMESTAMP
);
CREATE INDEX IDX_PRODUCTS_DELETED_AT ON C##INVENTORY.PRODUCTS (DELETED_AT);
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.SLUG IS 'ex: "pixel-8-pro"';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.NAME IS 'ex: "Pixel 8 Pro"';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.CATEGORY IS 'ex: "Phones"';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.SUBCATEGORY IS 'ex: "Smartphones"';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.WIDTH IS 'typical width of the product in millis, see PRODUCT_VERSIONS for the real one';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.LENGTH IS 'typical length of the product in millis, see PRODUCT_VERSIONS for the real one';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.HEIGHT IS 'typical height of the product in millis, see PRODUCT_VERSIONS for the real one';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.WEIGHT IS 'typical weight of the product in grams, see PRODUCT_VERSIONS for the real one';
COMMENT ON COLUMN C##INVENTORY.PRODUCTS.REMARKS IS 'ex: fragile';

CREATE TABLE C##INVENTORY.PRODUCT_VERSIONS (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PRODUCTS (ID),
    SKU        VARCHAR2(12) UNIQUE,
    EAN        VARCHAR2(13) UNIQUE,
    NAME       VARCHAR2(255) UNIQUE,
    SPECS      JSON,
    WIDTH      FLOAT,
    LENGTH     FLOAT,
    HEIGHT     FLOAT,
    WEIGHT     FLOAT,
    REMARKS    CLOB,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);
CREATE INDEX IDX_PRODUCT_VERSIONS_DELETED_AT ON C##INVENTORY.PRODUCT_VERSIONS (DELETED_AT);
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.SKU IS 'internal id';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.EAN IS 'european id';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.NAME IS 'ex: "Pixel 8 Pro Menthe 128 Go"';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.SPECS IS 'specificities of this version, ex: `{color: "Menthe", storage: 128}`';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.WIDTH IS 'in millis';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.LENGTH IS 'in millis';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.HEIGHT IS 'in millis';
COMMENT ON COLUMN C##INVENTORY.PRODUCT_VERSIONS.WEIGHT IS 'in grams';

CREATE TABLE C##INVENTORY.PHYSICAL_PRODUCTS (
    ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PRODUCT_VERSION_ID NUMBER REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID),
    SNID               VARCHAR2(12) UNIQUE,
    EXPIRATION         TIMESTAMP,
    REMARKS            CLOB,
    STORED             NUMBER REFERENCES C##INVENTORY.SHELF_POSITIONS (ID),
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT         TIMESTAMP
);
CREATE INDEX IDX_PHYSICAL_PRODUCTS_DELETED_AT ON C##INVENTORY.PHYSICAL_PRODUCTS (DELETED_AT);
COMMENT ON COLUMN C##INVENTORY.PHYSICAL_PRODUCTS.SNID IS 'serial number of this product';
COMMENT ON COLUMN C##INVENTORY.PHYSICAL_PRODUCTS.EXPIRATION IS 'when Product has an expiration date, null otherwise';

CREATE TABLE C##INVENTORY.SUPPLIERS (
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME       VARCHAR2(255),
    "LEVEL"    NUMBER,
    CURRENCY   VARCHAR2(3) CHECK (CURRENCY IN ('USD', 'EUR')),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);
CREATE INDEX IDX_SUPPLIERS_NAME ON C##INVENTORY.SUPPLIERS (NAME);
CREATE INDEX IDX_SUPPLIERS_DELETED_AT ON C##INVENTORY.SUPPLIERS (DELETED_AT);
COMMENT ON COLUMN C##INVENTORY.SUPPLIERS."LEVEL" IS 'the lower, the more priority is given to this supplier';

CREATE TABLE C##INVENTORY.SUPPLIER_PRICES (
    SUPPLIER_ID        NUMBER REFERENCES C##INVENTORY.SUPPLIERS (ID),
    PRODUCT_VERSION_ID NUMBER REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID),
    PRICE              FLOAT,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT         TIMESTAMP,
    PRIMARY KEY (SUPPLIER_ID, PRODUCT_VERSION_ID)
);
CREATE INDEX IDX_SUPPLIER_PRICES_DELETED_AT ON C##INVENTORY.SUPPLIER_PRICES (DELETED_AT);

CREATE TABLE C##INVENTORY.SUPPLIER_EMPLOYEES (
    SUPPLIER_ID NUMBER REFERENCES C##INVENTORY.SUPPLIERS (ID),
    EMPLOYEE_ID NUMBER REFERENCES C##INVENTORY.EMPLOYEES (ID),
    ROLE        VARCHAR2(255),
    "START"     TIMESTAMP,
    END         TIMESTAMP,
    CREATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY  NUMBER,
    UPDATED_AT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY  NUMBER,
    DELETED_AT  TIMESTAMP,
    DELETED_BY  NUMBER,
    PRIMARY KEY (SUPPLIER_ID, EMPLOYEE_ID)
);
CREATE INDEX IDX_SUPPLIER_EMPLOYEES_DELETED_AT ON C##INVENTORY.SUPPLIER_EMPLOYEES (DELETED_AT);

CREATE TABLE C##INVENTORY.PURCHASE_ORDERS (
    ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SUPPLIER_ID  NUMBER REFERENCES C##INVENTORY.SUPPLIERS (ID),
    PRICE        FLOAT,
    CURRENCY     VARCHAR2(3) CHECK (CURRENCY IN ('USD', 'EUR')),
    DETAILS      CLOB,
    NOTES        CLOB,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER,
    SENT_AT      TIMESTAMP,
    SENT_BY      NUMBER,
    PAID_AT      TIMESTAMP,
    DELIVERED_AT TIMESTAMP,
    VALIDATED_AT TIMESTAMP,
    VALIDATED_BY NUMBER
);
COMMENT ON COLUMN C##INVENTORY.PURCHASE_ORDERS.PRICE IS 'total price, computed from items price x quantity';
COMMENT ON COLUMN C##INVENTORY.PURCHASE_ORDERS.DETAILS IS 'additional text for the supplier';
COMMENT ON COLUMN C##INVENTORY.PURCHASE_ORDERS.NOTES IS 'internal text for employees';
COMMENT ON COLUMN C##INVENTORY.PURCHASE_ORDERS.SENT_AT IS 'can''t be updated once sent';

CREATE TABLE C##INVENTORY.PURCHASE_ORDER_ITEMS (
    PURCHASE_ORDER_ID  NUMBER REFERENCES C##INVENTORY.PURCHASE_ORDERS (ID),
    PRODUCT_VERSION_ID NUMBER REFERENCES C##INVENTORY.PRODUCT_VERSIONS (ID),
    QUANTITY           NUMBER,
    PRICE              FLOAT,
    CREATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY         NUMBER,
    UPDATED_AT         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY         NUMBER,
    PRIMARY KEY (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID)
);

CREATE TABLE C##INVENTORY.DELIVERIES (
    ID                    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REASON                VARCHAR2(255) NOT NULL,
    ACCEPTED              CHAR(1) NOT NULL CHECK (ACCEPTED IN ('Y', 'N')),
    PURCHASE_ORDER_ID     NUMBER REFERENCES C##INVENTORY.PURCHASE_ORDERS (ID),
    WAREHOUSE_ID          NUMBER NOT NULL,
    WAREHOUSE_EMPLOYEE_ID NUMBER NOT NULL,
    SUPPLIER_ID           NUMBER,
    SUPPLIER_EMPLOYEE_ID  NUMBER,
    DELIVERED_AT          TIMESTAMP,
    FOREIGN KEY (WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID) REFERENCES C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.DELIVERY_ITEMS (
    DELIVERY_ID         NUMBER REFERENCES C##INVENTORY.DELIVERIES (ID),
    PHYSICAL_PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID),
    PRIMARY KEY (DELIVERY_ID, PHYSICAL_PRODUCT_ID)
);

CREATE TABLE C##INVENTORY.PICKUPS (
    ID                    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REASON                VARCHAR2(255),
    ACCEPTED              CHAR(1) CHECK (ACCEPTED IN ('Y', 'N')),
    WAREHOUSE_ID          NUMBER,
    WAREHOUSE_EMPLOYEE_ID NUMBER,
    SUPPLIER_ID           NUMBER,
    SUPPLIER_EMPLOYEE_ID  NUMBER,
    DELIVERED_AT          TIMESTAMP,
    FOREIGN KEY (WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID) REFERENCES C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.PICKUP_ITEMS (
    PICKUP_ID           NUMBER REFERENCES C##INVENTORY.PICKUPS (ID),
    PHYSICAL_PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID),
    PRIMARY KEY (PICKUP_ID, PHYSICAL_PRODUCT_ID)
);

CREATE TABLE C##INVENTORY.INVENTORIES (
    ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR2(255),
    WAREHOUSE_ID NUMBER REFERENCES C##INVENTORY.WAREHOUSES (ID),
    HALL_ID      NUMBER REFERENCES C##INVENTORY.HALLS (ID),
    AISLE_ID     NUMBER REFERENCES C##INVENTORY.AISLES (ID),
    PLANNED      TIMESTAMP,
    FINISHED     TIMESTAMP,
    CREATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY   NUMBER,
    UPDATED_AT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY   NUMBER
);

CREATE TABLE C##INVENTORY.INVENTORY_MEMBERS (
    INVENTORY_ID NUMBER REFERENCES C##INVENTORY.INVENTORIES (ID),
    WAREHOUSE_ID NUMBER,
    EMPLOYEE_ID  NUMBER,
    PRIMARY KEY (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID),
    FOREIGN KEY (WAREHOUSE_ID, EMPLOYEE_ID) REFERENCES C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID)
);

CREATE TABLE C##INVENTORY.INVENTORY_OBSERVATIONS (
    ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVENTORY_ID        NUMBER REFERENCES C##INVENTORY.INVENTORIES (ID),
    PHYSICAL_PRODUCT_ID NUMBER REFERENCES C##INVENTORY.PHYSICAL_PRODUCTS (ID),
    STATUS              VARCHAR2(255),
    MESSAGE             CLOB,
    CREATED_AT          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY          NUMBER,
    UPDATED_AT          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY          NUMBER,
    DELETED_AT          TIMESTAMP,
    DELETED_BY          NUMBER
);
CREATE INDEX IDX_INVENTORY_OBSERVATIONS_DELETED_AT ON C##INVENTORY.INVENTORY_OBSERVATIONS (DELETED_AT);


-- database data
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (1, 'Harry', 'Potter', 'harry.potter@hogwarts.ac.uk', '+1-202-555-0173', 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (2, 'Hermione', 'Granger', 'hermione.granger@hogwarts.ac.uk', '+44-20-7946-0958', 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (3, 'Ron', 'Weasley', 'ron.weasley@hogwarts.ac.uk', '+33-1-45-67-89-01', 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (4, 'Albus', 'Dumbledore', 'albus.dumbledore@hogwarts.ac.uk', '+49-30-1234567', 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (5, 'Severus', 'Snape', 'severus.snape@hogwarts.ac.uk', '+61-2-9374-4000', 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (6, 'Frodo', 'Baggins', 'frodo.baggins@shire.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (7, 'Samwise', 'Gamgee', 'samwise.gamgee@shire.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (8, 'Gandalf', 'the Grey', 'gandalf@middleearth.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (9, 'Aragorn', 'Elessar', 'aragorn@middleearth.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (10, 'Legolas', 'Greenleaf', 'legolas@woodlandrealm.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (11, 'Gimli', 'Son of Glóin', 'gimli@lonelymountain.me', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (12, 'Steve', 'Rogers', 'steve.rogers@avengers.com', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (13, 'Bruce', 'Banner', 'bruce.banner@avengers.com', NULL, 3, 3);
INSERT INTO C##INVENTORY.EMPLOYEES (ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, CREATED_BY, UPDATED_BY) VALUES (14, 'Natasha', 'Romanoff', 'natasha.romanoff@shield.gov', NULL, 3, 3);

INSERT INTO C##INVENTORY.WAREHOUSES (NAME, ADDRESS, MANAGER, CREATED_BY, UPDATED_BY) VALUES ('Hogwarts Central Warehouse', 'Hogwarts School of Witchcraft and Wizardry, Highlands, Scotland', 4, 16, 16);
INSERT INTO C##INVENTORY.WAREHOUSES (NAME, ADDRESS, MANAGER, CREATED_BY, UPDATED_BY) VALUES ('Shire Storage Facility', 'The Shire, Westfarthing, Middle-earth', 8, 20, 20);

INSERT INTO C##INVENTORY.HALLS (WAREHOUSE_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Main Hall', 4, 16, 16);
INSERT INTO C##INVENTORY.HALLS (WAREHOUSE_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Potion Storage', 5, 16, 16);

INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Wand Aisle', 2, 16, 16);
INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (1, 'Book Aisle', 2, 16, 16);
INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (2, 'Ingredients Aisle', 3, 16, 16);
INSERT INTO C##INVENTORY.AISLES (HALL_ID, NAME, MANAGER, CREATED_BY, UPDATED_BY) VALUES (2, 'Cauldron Aisle', 3, 16, 16);

INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (1, 'Phoenix Feather Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (1, 'Dragon Heartstring Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (2, 'Ancient Texts Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (2, 'Modern Spellbooks Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (3, 'Herbs Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (3, 'Potions Ingredients Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (4, 'Small Cauldrons Rack', 16, 16);
INSERT INTO C##INVENTORY.RACKS (AISLE_ID, NAME, CREATED_BY, UPDATED_BY) VALUES (4, 'Large Cauldrons Rack', 16, 16);

BEGIN
    FOR rack IN (SELECT ID FROM C##INVENTORY.RACKS) LOOP
        FOR i IN 1..3 LOOP
            DECLARE
                v_shelf_id NUMBER;
            BEGIN
                INSERT INTO C##INVENTORY.SHELVES (RACK_ID, NAME, CREATED_BY, UPDATED_BY)
                VALUES (rack.ID, CASE WHEN i = 1 THEN 'Top Shelf' WHEN i = 2 THEN 'Middle Shelf' ELSE 'Bottom Shelf' END, 16, 16)
                RETURNING ID INTO v_shelf_id;

                FOR j IN 1..3 LOOP
                    INSERT INTO C##INVENTORY.SHELF_POSITIONS (SHELF_ID, NAME, CREATED_BY, UPDATED_BY)
                    VALUES (v_shelf_id, CASE WHEN j = 1 THEN 'Position A' WHEN j = 2 THEN 'Position B' ELSE 'Position C' END, 16, 16);
                END LOOP;
            END;
        END LOOP;
    END LOOP;
END;

INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 'stocker', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 2, 'stocker', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 3, 'loader', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 4, 'manager', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 5, 'receiver', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 6, 'stocker', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 7, 'stocker', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 8, 'manager', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 9, 'receiver', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 10, 'loader', 3, 3);
INSERT INTO C##INVENTORY.WAREHOUSE_EMPLOYEES (WAREHOUSE_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 11, 'loader', 3, 3);

INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 1, 'name', 'Harry Potter', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 1, 'badge', 'HP1234', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 1, 'cni', '01 23 45 678 901', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 2, 'badge', 'HG5678', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 2, 'cni', '02 34 56 789 012', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 3, 'badge', 'RW9101', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 3, 'cni', '03 45 67 890 123', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 4, 'badge', 'AD1213', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 4, 'cni', '04 56 78 901 234', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 5, 'badge', 'SS1415', NULL, 16);
INSERT INTO C##INVENTORY.WAREHOUSE_IDENTITY_PROOFS (WAREHOUSE_ID, EMPLOYEE_ID, KIND, VALUE, EXPIRE, CREATED_BY) VALUES (1, 5, 'cni', '05 67 89 012 345', NULL, 16);

INSERT INTO C##INVENTORY.BRANDS (SLUG, NAME) VALUES ('google', 'Google');
INSERT INTO C##INVENTORY.BRANDS (SLUG, NAME) VALUES ('apple', 'Apple');

INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (1, 'pixel-8', 'Pixel 8', 1, 'Phones', 'Smartphones', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (1, 1, 'GGLPX8O128', '0840244706692', 'Pixel 8 Obsidian 128 Go', '{"color": "Obsidian", "storage": 128}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (2, 1, 'GGLPX8O256', '0840244706906', 'Pixel 8 Obsidian 256 Go', '{"color": "Obsidian", "storage": 256}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (3, 1, 'GGLPX8H128', '0840244706807', 'Pixel 8 Hazel 128 Go', '{"color": "Hazel", "storage": 128}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (4, 1, 'GGLPX8H256', '0840244707118', 'Pixel 8 Hazel 256 Go', '{"color": "Hazel", "storage": 256}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (5, 1, 'GGLPX8R128', '0840244706982', 'Pixel 8 Rose 128 Go', '{"color": "Rose", "storage": 128}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (6, 1, 'GGLPX8R256', '0840244707231', 'Pixel 8 Rose 256 Go', '{"color": "Rose", "storage": 256}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (7, 1, 'GGLPX8M128', '0840244707071', 'Pixel 8 Mint 128 Go', '{"color": "Mint", "storage": 128}', 150.5, 70.8, 8.9, 187);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (2, 'pixel-8-pro', 'Pixel 8 Pro', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (8, 2, 'GGLPX8PO128', '0840244705046', 'Pixel 8 Pro Obsidian 128 Go', '{"color": "Obsidian", "storage": 128}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (9, 2, 'GGLPX8PO256', '0840244705299', 'Pixel 8 Pro Obsidian 256 Go', '{"color": "Obsidian", "storage": 256}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (10, 2, 'GGLPX8PO512', '0840244705565', 'Pixel 8 Pro Obsidian 512 Go', '{"color": "Obsidian", "storage": 512}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (11, 2, 'GGLPX8PB128', '0840244705206', 'Pixel 8 Pro Bay 128 Go', '{"color": "Bay", "storage": 128}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (12, 2, 'GGLPX8PB256', '0840244705473', 'Pixel 8 Pro Bay 256 Go', '{"color": "Bay", "storage": 256}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (13, 2, 'GGLPX8PP128', '0840244705121', 'Pixel 8 Pro Porcelain 128 Go', '{"color": "Porcelain", "storage": 128}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (14, 2, 'GGLPX8PP256', '0840244705381', 'Pixel 8 Pro Porcelain 256 Go', '{"color": "Porcelain", "storage": 256}', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (3, 'pixel-8a', 'Pixel 8a', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (4, 'pixel-9', 'Pixel 9', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (6, 'pixel-9-pro', 'Pixel 9 Pro', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (5, 'pixel-9-pro-xl', 'Pixel 9 Pro XL', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (7, 'pixel-9-pro-fold', 'Pixel 9 Pro Fold', 1, 'Phones', 'Smartphones', 162.6, 76.5, 8.8, 213);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (8, 'pixel-8-case', 'Pixel 8 Case', 1, 'Phones', 'Accessories', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (15, 8, 'GGLPX8CH', '0840244703806', 'Pixel 8 Case Hazel', '{"color": "Hazel"}', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (16, 8, 'GGLPX8CC', '0840244703807', 'Pixel 8 Case Coral', '{"color": "Coral"}', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (17, 8, 'GGLPX8CM', '0840244703783', 'Pixel 8 Case Mint', '{"color": "Mint"}', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (18, 8, 'GGLPX8CR', '0840244703813', 'Pixel 8 Case Rose', '{"color": "Rose"}', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (19, 8, 'GGLPX8CCH', '0840244703790', 'Pixel 8 Case Charcoal', '{"color": "Charcoal"}', 154.8, 75.1, 13.4, 27.3);
INSERT INTO C##INVENTORY.PRODUCTS (ID, SLUG, NAME, BRAND, CATEGORY, SUBCATEGORY, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (9, 'pixel-8-casemate-signature', 'Pixel 8 Case Signature', 1, 'Phones', 'Accessories', 155.7, 76.5, 13.7, 1.7);
INSERT INTO C##INVENTORY.PRODUCT_VERSIONS (ID, PRODUCT_ID, SKU, EAN, NAME, SPECS, WIDTH, LENGTH, HEIGHT, WEIGHT) VALUES (20, 9, 'GGLPX8CS', '0840244703900', 'Pixel 8 Case Signature Clear', '{}', 155.7, 76.5, 13.7, 1.7);

INSERT INTO C##INVENTORY.SUPPLIERS (NAME, "LEVEL", CURRENCY) VALUES ('Google', 1, 'USD');
INSERT INTO C##INVENTORY.SUPPLIERS (NAME, "LEVEL", CURRENCY) VALUES ('FNAC', 2, 'EUR');

INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 1, 699);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 2, 759);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 3, 699);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 4, 759);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 5, 699);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 6, 759);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 7, 699);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 8, 999);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 9, 1059);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 10, 1179);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 11, 999);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 12, 1059);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 13, 999);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 14, 1059);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 15, 34.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 16, 34.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 17, 34.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 18, 34.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 19, 34.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (1, 20, 29.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 1, 549);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 2, 609);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 3, 549);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 4, 609);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 5, 549);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 6, 609);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 7, 549);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 8, 749);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 9, 809);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 10, 949);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 11, 749);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 12, 809);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 13, 749);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 14, 809);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 15, 39.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 17, 39.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 18, 39.99);
INSERT INTO C##INVENTORY.SUPPLIER_PRICES (SUPPLIER_ID, PRODUCT_VERSION_ID, PRICE) VALUES (2, 19, 39.99);

INSERT INTO C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 12, 'sale', 3, 3);
INSERT INTO C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (1, 13, 'delivery', 3, 3);
INSERT INTO C##INVENTORY.SUPPLIER_EMPLOYEES (SUPPLIER_ID, EMPLOYEE_ID, ROLE, CREATED_BY, UPDATED_BY) VALUES (2, 14, 'delivery', 3, 3);

INSERT INTO C##INVENTORY.PURCHASE_ORDERS (SUPPLIER_ID, PRICE, CURRENCY, DETAILS, NOTES, CREATED_BY, UPDATED_BY) VALUES (1, 9471.92, 'USD', 'Order 1 from Google', 'Make initial stock', 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 1, 3, 699, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 2, 2, 759, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 3, 2, 699, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 5, 2, 699, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 7, 2, 699, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 15, 3, 34.99, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 16, 2, 34.99, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (1, 20, 3, 29.99, 16, 16);

INSERT INTO C##INVENTORY.PURCHASE_ORDERS (SUPPLIER_ID, PRICE, CURRENCY, DETAILS, NOTES, CREATED_BY, UPDATED_BY) VALUES (2, 7121, 'EUR', 'Order 1 from FNAC', 'Make initial stock', 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 8, 3, 749, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 9, 1, 809, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 10, 1, 949, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 11, 1, 749, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 12, 1, 809, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 13, 1, 749, 16, 16);
INSERT INTO C##INVENTORY.PURCHASE_ORDER_ITEMS (PURCHASE_ORDER_ID, PRODUCT_VERSION_ID, QUANTITY, PRICE, CREATED_BY, UPDATED_BY) VALUES (2, 14, 1, 809, 16, 16);

INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (1, 1, 'F2ST123456', NULL, NULL, NULL);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (2, 1, 'F2ST123457', NULL, NULL, 1);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (3, 1, 'F2ST123458', NULL, NULL, 1);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (4, 2, 'F2ST123459', NULL, NULL, NULL);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (5, 2, 'F2ST123460', NULL, NULL, 2);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (6, 3, 'FK3B789012', NULL, NULL, 2);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (7, 3, 'FK3B789013', NULL, NULL, 2);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (8, 5, 'FK3B789014', NULL, NULL, 3);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (9, 5, 'FK3B789015', NULL, NULL, 3);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (10, 7, 'FK3B789016', NULL, NULL, 3);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (11, 7, 'FG8N456789', NULL, NULL, 3);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (12, 15, 'FG8N456790', NULL, NULL, NULL);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (13, 15, 'FG8N456791', NULL, NULL, 28);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (14, 15, 'FG8N456792', NULL, NULL, 28);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (15, 16, 'FG8N456793', NULL, NULL, 29);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (16, 16, 'FL5H345678', NULL, NULL, 29);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (17, 20, 'FL5H345679', NULL, NULL, NULL);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (18, 20, 'FL5H345680', NULL, NULL, 30);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (19, 20, 'FL5H345681', NULL, NULL, 30);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (20, 8, 'FM7J234567', NULL, NULL, 10);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (21, 8, 'FM7J234568', NULL, NULL, 10);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (22, 8, 'FM7J234569', NULL, NULL, 10);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (23, 9, 'FM7J234570', NULL, NULL, 11);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (24, 10, 'FM7J234571', NULL, NULL, 11);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (25, 11, 'FM7J234572', NULL, NULL, 11);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (26, 12, 'FM7J234573', NULL, NULL, 12);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (27, 13, 'FM7J234574', NULL, NULL, 12);
INSERT INTO C##INVENTORY.PHYSICAL_PRODUCTS (ID, PRODUCT_VERSION_ID, SNID, EXPIRATION, REMARKS, STORED) VALUES (28, 14, 'FM7J234575', NULL, NULL, 12);

INSERT INTO C##INVENTORY.DELIVERIES (REASON, ACCEPTED, PURCHASE_ORDER_ID, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('supplier_delivery', 'Y', 1, 1, 4, 1, 13, CURRENT_TIMESTAMP);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 1);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 2);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 3);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 4);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 5);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 6);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 7);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 8);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 9);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 10);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 11);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 12);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 13);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 14);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 15);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 16);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 17);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 18);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 19);

INSERT INTO C##INVENTORY.DELIVERIES (REASON, ACCEPTED, PURCHASE_ORDER_ID, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('supplier_delivery', 'Y', 2, 1, 4, 2, 14, CURRENT_TIMESTAMP);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 20);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 21);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 22);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 23);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 24);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 25);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 26);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 27);
INSERT INTO C##INVENTORY.DELIVERY_ITEMS (DELIVERY_ID, PHYSICAL_PRODUCT_ID) VALUES (2, 28);

INSERT INTO C##INVENTORY.DELIVERIES (REASON, ACCEPTED, PURCHASE_ORDER_ID, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('customer_return', 'N', NULL, 1, 5, NULL, NULL, CURRENT_TIMESTAMP);

INSERT INTO C##INVENTORY.INVENTORIES (NAME, WAREHOUSE_ID, PLANNED, CREATED_BY, UPDATED_BY) VALUES ('Initial inventory', 1, TO_TIMESTAMP('2022-01-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 16, 16);
INSERT INTO C##INVENTORY.INVENTORY_MEMBERS (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID) VALUES (1, 1, 1);
INSERT INTO C##INVENTORY.INVENTORY_MEMBERS (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID) VALUES (1, 1, 2);
INSERT INTO C##INVENTORY.INVENTORY_MEMBERS (INVENTORY_ID, WAREHOUSE_ID, EMPLOYEE_ID) VALUES (1, 1, 3);
INSERT INTO C##INVENTORY.INVENTORY_OBSERVATIONS (INVENTORY_ID, PHYSICAL_PRODUCT_ID, STATUS, MESSAGE, CREATED_BY, UPDATED_BY) VALUES (1, 2, 'missing', 'Item not found', 13, 13);
INSERT INTO C##INVENTORY.INVENTORY_OBSERVATIONS (INVENTORY_ID, PHYSICAL_PRODUCT_ID, STATUS, MESSAGE, CREATED_BY, UPDATED_BY) VALUES (1, 3, 'broken', 'Item damaged', 14, 14);
INSERT INTO C##INVENTORY.INVENTORY_OBSERVATIONS (INVENTORY_ID, PHYSICAL_PRODUCT_ID, STATUS, MESSAGE, CREATED_BY, UPDATED_BY) VALUES (1, 4, 'misplaced', 'Moved at the right place', 14, 14);

INSERT INTO C##INVENTORY.PICKUPS (REASON, ACCEPTED, WAREHOUSE_ID, WAREHOUSE_EMPLOYEE_ID, SUPPLIER_ID, SUPPLIER_EMPLOYEE_ID, DELIVERED_AT) VALUES ('customer_delivery', 'Y', 1, 2, NULL, NULL, CURRENT_TIMESTAMP);
INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 1);
INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 4);
INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 12);
INSERT INTO C##INVENTORY.PICKUP_ITEMS (PICKUP_ID, PHYSICAL_PRODUCT_ID) VALUES (1, 17);
