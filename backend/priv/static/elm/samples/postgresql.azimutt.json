{
  "id": "00000005-3022-4e80-98d3-75635f4ec93d",
  "name": "PostgreSQL",
  "sources": [
    {
      "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
      "name": "information_schema.sql",
      "kind": {
        "kind": "SqlLocalFile",
        "name": "information_schema.sql",
        "size": 128503,
        "modified": 1662104460671
      },
      "content": [
        "--",
        "-- PostgreSQL database dump",
        "--",
        "",
        "-- Dumped from database version 12.12 (Ubuntu 12.12-1.pgdg20.04+1)",
        "-- Dumped by pg_dump version 12.12 (Ubuntu 12.12-1.pgdg20.04+1)",
        "",
        "SET statement_timeout = 0;",
        "SET lock_timeout = 0;",
        "SET idle_in_transaction_session_timeout = 0;",
        "SET client_encoding = 'UTF8';",
        "SET standard_conforming_strings = on;",
        "SELECT pg_catalog.set_config('search_path', '', false);",
        "SET check_function_bodies = false;",
        "SET xmloption = content;",
        "SET client_min_messages = warning;",
        "SET row_security = off;",
        "",
        "--",
        "-- Name: _pg_foreign_data_wrappers; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema._pg_foreign_data_wrappers AS",
        " SELECT w.oid,",
        "    w.fdwowner,",
        "    w.fdwoptions,",
        "    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,",
        "    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,",
        "    (u.rolname)::information_schema.sql_identifier AS authorization_identifier,",
        "    ('c'::character varying)::information_schema.character_data AS foreign_data_wrapper_language",
        "   FROM pg_foreign_data_wrapper w,",
        "    pg_authid u",
        "  WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, 'USAGE'::text) OR has_foreign_data_wrapper_privilege(w.oid, 'USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema._pg_foreign_data_wrappers OWNER TO postgres;",
        "",
        "--",
        "-- Name: _pg_foreign_servers; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema._pg_foreign_servers AS",
        " SELECT s.oid,",
        "    s.srvoptions,",
        "    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,",
        "    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,",
        "    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,",
        "    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,",
        "    (s.srvtype)::information_schema.character_data AS foreign_server_type,",
        "    (s.srvversion)::information_schema.character_data AS foreign_server_version,",
        "    (u.rolname)::information_schema.sql_identifier AS authorization_identifier",
        "   FROM pg_foreign_server s,",
        "    pg_foreign_data_wrapper w,",
        "    pg_authid u",
        "  WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema._pg_foreign_servers OWNER TO postgres;",
        "",
        "--",
        "-- Name: _pg_foreign_table_columns; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema._pg_foreign_table_columns AS",
        " SELECT n.nspname,",
        "    c.relname,",
        "    a.attname,",
        "    a.attfdwoptions",
        "   FROM pg_foreign_table t,",
        "    pg_authid u,",
        "    pg_namespace n,",
        "    pg_class c,",
        "    pg_attribute a",
        "  WHERE ((u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::\"char\") AND (a.attrelid = c.oid) AND (a.attnum > 0));",
        "",
        "",
        "ALTER TABLE information_schema._pg_foreign_table_columns OWNER TO postgres;",
        "",
        "--",
        "-- Name: _pg_foreign_tables; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema._pg_foreign_tables AS",
        " SELECT (current_database())::information_schema.sql_identifier AS foreign_table_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS foreign_table_name,",
        "    t.ftoptions,",
        "    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,",
        "    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,",
        "    (u.rolname)::information_schema.sql_identifier AS authorization_identifier",
        "   FROM pg_foreign_table t,",
        "    pg_foreign_server s,",
        "    pg_foreign_data_wrapper w,",
        "    pg_authid u,",
        "    pg_namespace n,",
        "    pg_class c",
        "  WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::\"char\") AND (s.oid = t.ftserver));",
        "",
        "",
        "ALTER TABLE information_schema._pg_foreign_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: _pg_user_mappings; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema._pg_user_mappings AS",
        " SELECT um.oid,",
        "    um.umoptions,",
        "    um.umuser,",
        "    (COALESCE(u.rolname, 'PUBLIC'::name))::information_schema.sql_identifier AS authorization_identifier,",
        "    s.foreign_server_catalog,",
        "    s.foreign_server_name,",
        "    s.authorization_identifier AS srvowner",
        "   FROM (pg_user_mapping um",
        "     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),",
        "    information_schema._pg_foreign_servers s",
        "  WHERE (s.oid = um.umserver);",
        "",
        "",
        "ALTER TABLE information_schema._pg_user_mappings OWNER TO postgres;",
        "",
        "--",
        "-- Name: applicable_roles; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.applicable_roles AS",
        " SELECT (a.rolname)::information_schema.sql_identifier AS grantee,",
        "    (b.rolname)::information_schema.sql_identifier AS role_name,",
        "    (",
        "        CASE",
        "            WHEN m.admin_option THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ((pg_auth_members m",
        "     JOIN pg_authid a ON ((m.member = a.oid)))",
        "     JOIN pg_authid b ON ((m.roleid = b.oid)))",
        "  WHERE pg_has_role(a.oid, 'USAGE'::text);",
        "",
        "",
        "ALTER TABLE information_schema.applicable_roles OWNER TO postgres;",
        "",
        "--",
        "-- Name: administrable_role_authorizations; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.administrable_role_authorizations AS",
        " SELECT applicable_roles.grantee,",
        "    applicable_roles.role_name,",
        "    applicable_roles.is_grantable",
        "   FROM information_schema.applicable_roles",
        "  WHERE ((applicable_roles.is_grantable)::text = 'YES'::text);",
        "",
        "",
        "ALTER TABLE information_schema.administrable_role_authorizations OWNER TO postgres;",
        "",
        "--",
        "-- Name: attributes; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.attributes AS",
        " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (c.relname)::information_schema.sql_identifier AS udt_name,",
        "    (a.attname)::information_schema.sql_identifier AS attribute_name,",
        "    (a.attnum)::information_schema.cardinal_number AS ordinal_position,",
        "    (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,",
        "    (",
        "        CASE",
        "            WHEN (a.attnotnull OR ((t.typtype = 'd'::\"char\") AND t.typnotnull)) THEN 'NO'::text",
        "            ELSE 'YES'::text",
        "        END)::information_schema.yes_or_no AS is_nullable,",
        "    (",
        "        CASE",
        "            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)",
        "            ELSE 'USER-DEFINED'::text",
        "        END)::information_schema.character_data AS data_type,",
        "    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,",
        "    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (",
        "        CASE",
        "            WHEN (nco.nspname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS collation_catalog,",
        "    (nco.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (co.collname)::information_schema.sql_identifier AS collation_name,",
        "    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,",
        "    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,",
        "    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,",
        "    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS attribute_udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute",
        "   FROM ((((pg_attribute a",
        "     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))",
        "     JOIN (pg_class c",
        "     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))",
        "     JOIN (pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))",
        "     LEFT JOIN (pg_collation co",
        "     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))",
        "  WHERE ((a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = 'c'::\"char\") AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_type_privilege(c.reltype, 'USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.attributes OWNER TO postgres;",
        "",
        "--",
        "-- Name: character_sets; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.character_sets AS",
        " SELECT (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,",
        "    (",
        "        CASE",
        "            WHEN (getdatabaseencoding() = 'UTF8'::name) THEN 'UCS'::name",
        "            ELSE getdatabaseencoding()",
        "        END)::information_schema.sql_identifier AS character_repertoire,",
        "    (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,",
        "    (current_database())::information_schema.sql_identifier AS default_collate_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,",
        "    (c.collname)::information_schema.sql_identifier AS default_collate_name",
        "   FROM (pg_database d",
        "     LEFT JOIN (pg_collation c",
        "     JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))",
        "  WHERE (d.datname = current_database())",
        "  ORDER BY (char_length((c.collname)::text)) DESC, c.collname",
        " LIMIT 1;",
        "",
        "",
        "ALTER TABLE information_schema.character_sets OWNER TO postgres;",
        "",
        "--",
        "-- Name: check_constraint_routine_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.check_constraint_routine_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (c.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (np.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name",
        "   FROM pg_namespace nc,",
        "    pg_constraint c,",
        "    pg_depend d,",
        "    pg_proc p,",
        "    pg_namespace np",
        "  WHERE ((nc.oid = c.connamespace) AND (c.contype = 'c'::\"char\") AND (c.oid = d.objid) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = ('pg_proc'::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.check_constraint_routine_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: check_constraints; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.check_constraints AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (con.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (\"substring\"(pg_get_constraintdef(con.oid), 7))::information_schema.character_data AS check_clause",
        "   FROM (((pg_constraint con",
        "     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))",
        "     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))",
        "     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))",
        "  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), 'USAGE'::text) AND (con.contype = 'c'::\"char\"))",
        "UNION",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (((((((n.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,",
        "    (((a.attname)::text || ' IS NOT NULL'::text))::information_schema.character_data AS check_clause",
        "   FROM pg_namespace n,",
        "    pg_class r,",
        "    pg_attribute a",
        "  WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum > 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND pg_has_role(r.relowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.check_constraints OWNER TO postgres;",
        "",
        "--",
        "-- Name: collation_character_set_applicability; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.collation_character_set_applicability AS",
        " SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (c.collname)::information_schema.sql_identifier AS collation_name,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name",
        "   FROM pg_collation c,",
        "    pg_namespace nc",
        "  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding",
        "           FROM pg_database",
        "          WHERE (pg_database.datname = current_database()))])));",
        "",
        "",
        "ALTER TABLE information_schema.collation_character_set_applicability OWNER TO postgres;",
        "",
        "--",
        "-- Name: collations; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.collations AS",
        " SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (c.collname)::information_schema.sql_identifier AS collation_name,",
        "    ('NO PAD'::character varying)::information_schema.character_data AS pad_attribute",
        "   FROM pg_collation c,",
        "    pg_namespace nc",
        "  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding",
        "           FROM pg_database",
        "          WHERE (pg_database.datname = current_database()))])));",
        "",
        "",
        "ALTER TABLE information_schema.collations OWNER TO postgres;",
        "",
        "--",
        "-- Name: column_column_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.column_column_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (ac.attname)::information_schema.sql_identifier AS column_name,",
        "    (ad.attname)::information_schema.sql_identifier AS dependent_column",
        "   FROM pg_namespace n,",
        "    pg_class c,",
        "    pg_depend d,",
        "    pg_attribute ac,",
        "    pg_attribute ad",
        "  WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (d.classid = ('pg_class'::regclass)::oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.objid = d.refobjid) AND (c.oid = d.objid) AND (d.objsubid = ad.attnum) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated <> ''::\"char\") AND pg_has_role(c.relowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.column_column_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: column_domain_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.column_domain_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS domain_schema,",
        "    (t.typname)::information_schema.sql_identifier AS domain_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (a.attname)::information_schema.sql_identifier AS column_name",
        "   FROM pg_type t,",
        "    pg_namespace nt,",
        "    pg_class c,",
        "    pg_namespace nc,",
        "    pg_attribute a",
        "  WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = 'd'::\"char\") AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND (a.attnum > 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.column_domain_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: column_options; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.column_options AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (c.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (c.attname)::information_schema.sql_identifier AS column_name,",
        "    ((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,",
        "    ((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data AS option_value",
        "   FROM information_schema._pg_foreign_table_columns c;",
        "",
        "",
        "ALTER TABLE information_schema.column_options OWNER TO postgres;",
        "",
        "--",
        "-- Name: column_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.column_privileges AS",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (x.relname)::information_schema.sql_identifier AS table_name,",
        "    (x.attname)::information_schema.sql_identifier AS column_name,",
        "    (x.prtype)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(x.grantee, x.relowner, 'USAGE'::text) OR x.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pr_c.grantor,",
        "            pr_c.grantee,",
        "            a.attname,",
        "            pr_c.relname,",
        "            pr_c.relnamespace,",
        "            pr_c.prtype,",
        "            pr_c.grantable,",
        "            pr_c.relowner",
        "           FROM ( SELECT pg_class.oid,",
        "                    pg_class.relname,",
        "                    pg_class.relnamespace,",
        "                    pg_class.relowner,",
        "                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantor AS grantor,",
        "                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantee AS grantee,",
        "                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).privilege_type AS privilege_type,",
        "                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).is_grantable AS is_grantable",
        "                   FROM pg_class",
        "                  WHERE (pg_class.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),",
        "            pg_attribute a",
        "          WHERE ((a.attrelid = pr_c.oid) AND (a.attnum > 0) AND (NOT a.attisdropped))",
        "        UNION",
        "         SELECT pr_a.grantor,",
        "            pr_a.grantee,",
        "            pr_a.attname,",
        "            c.relname,",
        "            c.relnamespace,",
        "            pr_a.prtype,",
        "            pr_a.grantable,",
        "            c.relowner",
        "           FROM ( SELECT a.attrelid,",
        "                    a.attname,",
        "                    (aclexplode(COALESCE(a.attacl, acldefault('c'::\"char\", cc.relowner)))).grantor AS grantor,",
        "                    (aclexplode(COALESCE(a.attacl, acldefault('c'::\"char\", cc.relowner)))).grantee AS grantee,",
        "                    (aclexplode(COALESCE(a.attacl, acldefault('c'::\"char\", cc.relowner)))).privilege_type AS privilege_type,",
        "                    (aclexplode(COALESCE(a.attacl, acldefault('c'::\"char\", cc.relowner)))).is_grantable AS is_grantable",
        "                   FROM (pg_attribute a",
        "                     JOIN pg_class cc ON ((a.attrelid = cc.oid)))",
        "                  WHERE ((a.attnum > 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),",
        "            pg_class c",
        "          WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])))) x,",
        "    pg_namespace nc,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'REFERENCES'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)));",
        "",
        "",
        "ALTER TABLE information_schema.column_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: column_udt_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.column_udt_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,",
        "    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (a.attname)::information_schema.sql_identifier AS column_name",
        "   FROM pg_attribute a,",
        "    pg_class c,",
        "    pg_namespace nc,",
        "    ((pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))",
        "     LEFT JOIN (pg_type bt",
        "     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::\"char\") AND (t.typbasetype = bt.oid))))",
        "  WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.column_udt_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: columns; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.columns AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (a.attname)::information_schema.sql_identifier AS column_name,",
        "    (a.attnum)::information_schema.cardinal_number AS ordinal_position,",
        "    (",
        "        CASE",
        "            WHEN (a.attgenerated = ''::\"char\") THEN pg_get_expr(ad.adbin, ad.adrelid)",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS column_default,",
        "    (",
        "        CASE",
        "            WHEN (a.attnotnull OR ((t.typtype = 'd'::\"char\") AND t.typnotnull)) THEN 'NO'::text",
        "            ELSE 'YES'::text",
        "        END)::information_schema.yes_or_no AS is_nullable,",
        "    (",
        "        CASE",
        "            WHEN (t.typtype = 'd'::\"char\") THEN",
        "            CASE",
        "                WHEN ((bt.typelem <> (0)::oid) AND (bt.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "                WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)",
        "                ELSE 'USER-DEFINED'::text",
        "            END",
        "            ELSE",
        "            CASE",
        "                WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "                WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)",
        "                ELSE 'USER-DEFINED'::text",
        "            END",
        "        END)::information_schema.character_data AS data_type,",
        "    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,",
        "    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,",
        "    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,",
        "    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,",
        "    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,",
        "    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (",
        "        CASE",
        "            WHEN (nco.nspname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS collation_catalog,",
        "    (nco.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (co.collname)::information_schema.sql_identifier AS collation_name,",
        "    (",
        "        CASE",
        "            WHEN (t.typtype = 'd'::\"char\") THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS domain_catalog,",
        "    (",
        "        CASE",
        "            WHEN (t.typtype = 'd'::\"char\") THEN nt.nspname",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS domain_schema,",
        "    (",
        "        CASE",
        "            WHEN (t.typtype = 'd'::\"char\") THEN t.typname",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS domain_name,",
        "    (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,",
        "    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_self_referencing,",
        "    (",
        "        CASE",
        "            WHEN (a.attidentity = ANY (ARRAY['a'::\"char\", 'd'::\"char\"])) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_identity,",
        "    (",
        "        CASE a.attidentity",
        "            WHEN 'a'::\"char\" THEN 'ALWAYS'::text",
        "            WHEN 'd'::\"char\" THEN 'BY DEFAULT'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS identity_generation,",
        "    (seq.seqstart)::information_schema.character_data AS identity_start,",
        "    (seq.seqincrement)::information_schema.character_data AS identity_increment,",
        "    (seq.seqmax)::information_schema.character_data AS identity_maximum,",
        "    (seq.seqmin)::information_schema.character_data AS identity_minimum,",
        "    (",
        "        CASE",
        "            WHEN seq.seqcycle THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS identity_cycle,",
        "    (",
        "        CASE",
        "            WHEN (a.attgenerated <> ''::\"char\") THEN 'ALWAYS'::text",
        "            ELSE 'NEVER'::text",
        "        END)::information_schema.character_data AS is_generated,",
        "    (",
        "        CASE",
        "            WHEN (a.attgenerated <> ''::\"char\") THEN pg_get_expr(ad.adbin, ad.adrelid)",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS generation_expression,",
        "    (",
        "        CASE",
        "            WHEN ((c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) OR ((c.relkind = ANY (ARRAY['v'::\"char\", 'f'::\"char\"])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_updatable",
        "   FROM ((((((pg_attribute a",
        "     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))",
        "     JOIN (pg_class c",
        "     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))",
        "     JOIN (pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))",
        "     LEFT JOIN (pg_type bt",
        "     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::\"char\") AND (t.typbasetype = bt.oid))))",
        "     LEFT JOIN (pg_collation co",
        "     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))",
        "     LEFT JOIN (pg_depend dep",
        "     JOIN pg_sequence seq ON (((dep.classid = ('pg_class'::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = 'i'::\"char\")))) ON (((dep.refclassid = ('pg_class'::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))",
        "  WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.columns OWNER TO postgres;",
        "",
        "--",
        "-- Name: constraint_column_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.constraint_column_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (x.tblschema)::information_schema.sql_identifier AS table_schema,",
        "    (x.tblname)::information_schema.sql_identifier AS table_name,",
        "    (x.colname)::information_schema.sql_identifier AS column_name,",
        "    (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (x.cstrschema)::information_schema.sql_identifier AS constraint_schema,",
        "    (x.cstrname)::information_schema.sql_identifier AS constraint_name",
        "   FROM ( SELECT DISTINCT nr.nspname,",
        "            r.relname,",
        "            r.relowner,",
        "            a.attname,",
        "            nc.nspname,",
        "            c.conname",
        "           FROM pg_namespace nr,",
        "            pg_class r,",
        "            pg_attribute a,",
        "            pg_depend d,",
        "            pg_namespace nc,",
        "            pg_constraint c",
        "          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = 'c'::\"char\") AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND (NOT a.attisdropped))",
        "        UNION ALL",
        "         SELECT nr.nspname,",
        "            r.relname,",
        "            r.relowner,",
        "            a.attname,",
        "            nc.nspname,",
        "            c.conname",
        "           FROM pg_namespace nr,",
        "            pg_class r,",
        "            pg_attribute a,",
        "            pg_namespace nc,",
        "            pg_constraint c",
        "          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =",
        "                CASE c.contype",
        "                    WHEN 'f'::\"char\" THEN c.confrelid",
        "                    ELSE c.conrelid",
        "                END) AND (a.attnum = ANY (",
        "                CASE c.contype",
        "                    WHEN 'f'::\"char\" THEN c.confkey",
        "                    ELSE c.conkey",
        "                END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY['p'::\"char\", 'u'::\"char\", 'f'::\"char\"])) AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)",
        "  WHERE pg_has_role(x.tblowner, 'USAGE'::text);",
        "",
        "",
        "ALTER TABLE information_schema.constraint_column_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: constraint_table_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.constraint_table_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nr.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (r.relname)::information_schema.sql_identifier AS table_name,",
        "    (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (c.conname)::information_schema.sql_identifier AS constraint_name",
        "   FROM pg_constraint c,",
        "    pg_namespace nc,",
        "    pg_class r,",
        "    pg_namespace nr",
        "  WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = 'f'::\"char\") AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY['p'::\"char\", 'u'::\"char\"])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND pg_has_role(r.relowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.constraint_table_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: domains; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.domains AS",
        " SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS domain_schema,",
        "    (t.typname)::information_schema.sql_identifier AS domain_name,",
        "    (",
        "        CASE",
        "            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "            WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)",
        "            ELSE 'USER-DEFINED'::text",
        "        END)::information_schema.character_data AS data_type,",
        "    (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,",
        "    (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (",
        "        CASE",
        "            WHEN (nco.nspname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS collation_catalog,",
        "    (nco.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (co.collname)::information_schema.sql_identifier AS collation_name,",
        "    (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,",
        "    (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,",
        "    (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,",
        "    (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (t.typdefault)::information_schema.character_data AS domain_default,",
        "    (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (bt.typname)::information_schema.sql_identifier AS udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    (1)::information_schema.sql_identifier AS dtd_identifier",
        "   FROM (((pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))",
        "     JOIN (pg_type bt",
        "     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = 'd'::\"char\"))))",
        "     LEFT JOIN (pg_collation co",
        "     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))",
        "  WHERE (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.domains OWNER TO postgres;",
        "",
        "--",
        "-- Name: parameters; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.parameters AS",
        " SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,",
        "    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,",
        "    (",
        "        CASE",
        "            WHEN (ss.proargmodes IS NULL) THEN 'IN'::text",
        "            WHEN (ss.proargmodes[(ss.x).n] = 'i'::\"char\") THEN 'IN'::text",
        "            WHEN (ss.proargmodes[(ss.x).n] = 'o'::\"char\") THEN 'OUT'::text",
        "            WHEN (ss.proargmodes[(ss.x).n] = 'b'::\"char\") THEN 'INOUT'::text",
        "            WHEN (ss.proargmodes[(ss.x).n] = 'v'::\"char\") THEN 'IN'::text",
        "            WHEN (ss.proargmodes[(ss.x).n] = 't'::\"char\") THEN 'OUT'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS parameter_mode,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_result,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS as_locator,",
        "    (NULLIF(ss.proargnames[(ss.x).n], ''::text))::information_schema.sql_identifier AS parameter_name,",
        "    (",
        "        CASE",
        "            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)",
        "            ELSE 'USER-DEFINED'::text",
        "        END)::information_schema.character_data AS data_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,",
        "    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,",
        "    (NULL::character varying)::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,",
        "    (",
        "        CASE",
        "            WHEN pg_has_role(ss.proowner, 'USAGE'::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS parameter_default",
        "   FROM pg_type t,",
        "    pg_namespace nt,",
        "    ( SELECT n.nspname AS n_nspname,",
        "            p.proname,",
        "            p.oid AS p_oid,",
        "            p.proowner,",
        "            p.proargnames,",
        "            p.proargmodes,",
        "            information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x",
        "           FROM pg_namespace n,",
        "            pg_proc p",
        "          WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text)))) ss",
        "  WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid));",
        "",
        "",
        "ALTER TABLE information_schema.parameters OWNER TO postgres;",
        "",
        "--",
        "-- Name: routines; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.routines AS",
        " SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,",
        "    (current_database())::information_schema.sql_identifier AS routine_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS routine_schema,",
        "    (p.proname)::information_schema.sql_identifier AS routine_name,",
        "    (",
        "        CASE p.prokind",
        "            WHEN 'f'::\"char\" THEN 'FUNCTION'::text",
        "            WHEN 'p'::\"char\" THEN 'PROCEDURE'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS routine_type,",
        "    (NULL::name)::information_schema.sql_identifier AS module_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS module_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS module_name,",
        "    (NULL::name)::information_schema.sql_identifier AS udt_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS udt_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS udt_name,",
        "    (",
        "        CASE",
        "            WHEN (p.prokind = 'p'::\"char\") THEN NULL::text",
        "            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text",
        "            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)",
        "            ELSE 'USER-DEFINED'::text",
        "        END)::information_schema.character_data AS data_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,",
        "    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,",
        "    (NULL::character varying)::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (",
        "        CASE",
        "            WHEN (nt.nspname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS type_udt_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS type_udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    (",
        "        CASE",
        "            WHEN (p.prokind <> 'p'::\"char\") THEN 0",
        "            ELSE NULL::integer",
        "        END)::information_schema.sql_identifier AS dtd_identifier,",
        "    (",
        "        CASE",
        "            WHEN (l.lanname = 'sql'::name) THEN 'SQL'::text",
        "            ELSE 'EXTERNAL'::text",
        "        END)::information_schema.character_data AS routine_body,",
        "    (",
        "        CASE",
        "            WHEN pg_has_role(p.proowner, 'USAGE'::text) THEN p.prosrc",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS routine_definition,",
        "    (",
        "        CASE",
        "            WHEN (l.lanname = 'c'::name) THEN p.prosrc",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS external_name,",
        "    (upper((l.lanname)::text))::information_schema.character_data AS external_language,",
        "    ('GENERAL'::character varying)::information_schema.character_data AS parameter_style,",
        "    (",
        "        CASE",
        "            WHEN (p.provolatile = 'i'::\"char\") THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_deterministic,",
        "    ('MODIFIES'::character varying)::information_schema.character_data AS sql_data_access,",
        "    (",
        "        CASE",
        "            WHEN (p.prokind <> 'p'::\"char\") THEN",
        "            CASE",
        "                WHEN p.proisstrict THEN 'YES'::text",
        "                ELSE 'NO'::text",
        "            END",
        "            ELSE NULL::text",
        "        END)::information_schema.yes_or_no AS is_null_call,",
        "    (NULL::character varying)::information_schema.character_data AS sql_path,",
        "    ('YES'::character varying)::information_schema.yes_or_no AS schema_level_routine,",
        "    (0)::information_schema.cardinal_number AS max_dynamic_result_sets,",
        "    (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,",
        "    (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,",
        "    (",
        "        CASE",
        "            WHEN p.prosecdef THEN 'DEFINER'::text",
        "            ELSE 'INVOKER'::text",
        "        END)::information_schema.character_data AS security_type,",
        "    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS as_locator,",
        "    (NULL::timestamp with time zone)::information_schema.time_stamp AS created,",
        "    (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,",
        "    (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_udt_dependent,",
        "    (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,",
        "    (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,",
        "    (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,",
        "    (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier",
        "   FROM (((pg_namespace n",
        "     JOIN pg_proc p ON ((n.oid = p.pronamespace)))",
        "     JOIN pg_language l ON ((p.prolang = l.oid)))",
        "     LEFT JOIN (pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind <> 'p'::\"char\"))))",
        "  WHERE (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.routines OWNER TO postgres;",
        "",
        "--",
        "-- Name: data_type_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.data_type_privileges AS",
        " SELECT (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    x.objschema AS object_schema,",
        "    x.objname AS object_name,",
        "    (x.objtype)::information_schema.character_data AS object_type,",
        "    x.objdtdid AS dtd_identifier",
        "   FROM ( SELECT attributes.udt_schema,",
        "            attributes.udt_name,",
        "            'USER-DEFINED TYPE'::text AS text,",
        "            attributes.dtd_identifier",
        "           FROM information_schema.attributes",
        "        UNION ALL",
        "         SELECT columns.table_schema,",
        "            columns.table_name,",
        "            'TABLE'::text AS text,",
        "            columns.dtd_identifier",
        "           FROM information_schema.columns",
        "        UNION ALL",
        "         SELECT domains.domain_schema,",
        "            domains.domain_name,",
        "            'DOMAIN'::text AS text,",
        "            domains.dtd_identifier",
        "           FROM information_schema.domains",
        "        UNION ALL",
        "         SELECT parameters.specific_schema,",
        "            parameters.specific_name,",
        "            'ROUTINE'::text AS text,",
        "            parameters.dtd_identifier",
        "           FROM information_schema.parameters",
        "        UNION ALL",
        "         SELECT routines.specific_schema,",
        "            routines.specific_name,",
        "            'ROUTINE'::text AS text,",
        "            routines.dtd_identifier",
        "           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid);",
        "",
        "",
        "ALTER TABLE information_schema.data_type_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: domain_constraints; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.domain_constraints AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (con.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (current_database())::information_schema.sql_identifier AS domain_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS domain_schema,",
        "    (t.typname)::information_schema.sql_identifier AS domain_name,",
        "    (",
        "        CASE",
        "            WHEN con.condeferrable THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_deferrable,",
        "    (",
        "        CASE",
        "            WHEN con.condeferred THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS initially_deferred",
        "   FROM pg_namespace rs,",
        "    pg_namespace n,",
        "    pg_constraint con,",
        "    pg_type t",
        "  WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.domain_constraints OWNER TO postgres;",
        "",
        "--",
        "-- Name: domain_udt_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.domain_udt_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (bt.typname)::information_schema.sql_identifier AS udt_name,",
        "    (current_database())::information_schema.sql_identifier AS domain_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS domain_schema,",
        "    (t.typname)::information_schema.sql_identifier AS domain_name",
        "   FROM pg_type t,",
        "    pg_namespace nt,",
        "    pg_type bt,",
        "    pg_namespace nbt",
        "  WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = 'd'::\"char\") AND pg_has_role(bt.typowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.domain_udt_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: element_types; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.element_types AS",
        " SELECT (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS object_schema,",
        "    x.objname AS object_name,",
        "    (x.objtype)::information_schema.character_data AS object_type,",
        "    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,",
        "    (",
        "        CASE",
        "            WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(bt.oid, NULL::integer)",
        "            ELSE 'USER-DEFINED'::text",
        "        END)::information_schema.character_data AS data_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (",
        "        CASE",
        "            WHEN (nco.nspname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS collation_catalog,",
        "    (nco.nspname)::information_schema.sql_identifier AS collation_schema,",
        "    (co.collname)::information_schema.sql_identifier AS collation_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,",
        "    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,",
        "    (NULL::character varying)::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (NULL::character varying)::information_schema.character_data AS domain_default,",
        "    (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (bt.typname)::information_schema.sql_identifier AS udt_name,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS scope_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,",
        "    (('a'::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier",
        "   FROM pg_namespace n,",
        "    pg_type at,",
        "    pg_namespace nbt,",
        "    pg_type bt,",
        "    (( SELECT c.relnamespace,",
        "            (c.relname)::information_schema.sql_identifier AS relname,",
        "                CASE",
        "                    WHEN (c.relkind = 'c'::\"char\") THEN 'USER-DEFINED TYPE'::text",
        "                    ELSE 'TABLE'::text",
        "                END AS \"case\",",
        "            a.attnum,",
        "            a.atttypid,",
        "            a.attcollation",
        "           FROM pg_class c,",
        "            pg_attribute a",
        "          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'c'::\"char\", 'p'::\"char\"])) AND (a.attnum > 0) AND (NOT a.attisdropped))",
        "        UNION ALL",
        "         SELECT t.typnamespace,",
        "            (t.typname)::information_schema.sql_identifier AS typname,",
        "            'DOMAIN'::text AS text,",
        "            1,",
        "            t.typbasetype,",
        "            t.typcollation",
        "           FROM pg_type t",
        "          WHERE (t.typtype = 'd'::\"char\")",
        "        UNION ALL",
        "         SELECT ss.pronamespace,",
        "            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,",
        "            'ROUTINE'::text AS text,",
        "            (ss.x).n AS n,",
        "            (ss.x).x AS x,",
        "            0",
        "           FROM ( SELECT p.pronamespace,",
        "                    p.proname,",
        "                    p.oid,",
        "                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x",
        "                   FROM pg_proc p) ss",
        "        UNION ALL",
        "         SELECT p.pronamespace,",
        "            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,",
        "            'ROUTINE'::text AS text,",
        "            0,",
        "            p.prorettype,",
        "            0",
        "           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)",
        "     LEFT JOIN (pg_collation co",
        "     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))",
        "  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem <> (0)::oid) AND (at.typlen = '-1'::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,",
        "            data_type_privileges.object_name,",
        "            data_type_privileges.object_type,",
        "            data_type_privileges.dtd_identifier",
        "           FROM information_schema.data_type_privileges)));",
        "",
        "",
        "ALTER TABLE information_schema.element_types OWNER TO postgres;",
        "",
        "--",
        "-- Name: enabled_roles; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.enabled_roles AS",
        " SELECT (a.rolname)::information_schema.sql_identifier AS role_name",
        "   FROM pg_authid a",
        "  WHERE pg_has_role(a.oid, 'USAGE'::text);",
        "",
        "",
        "ALTER TABLE information_schema.enabled_roles OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_data_wrapper_options; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_data_wrapper_options AS",
        " SELECT w.foreign_data_wrapper_catalog,",
        "    w.foreign_data_wrapper_name,",
        "    ((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,",
        "    ((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data AS option_value",
        "   FROM information_schema._pg_foreign_data_wrappers w;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_data_wrapper_options OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_data_wrappers; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_data_wrappers AS",
        " SELECT w.foreign_data_wrapper_catalog,",
        "    w.foreign_data_wrapper_name,",
        "    w.authorization_identifier,",
        "    (NULL::character varying)::information_schema.character_data AS library_name,",
        "    w.foreign_data_wrapper_language",
        "   FROM information_schema._pg_foreign_data_wrappers w;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_data_wrappers OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_server_options; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_server_options AS",
        " SELECT s.foreign_server_catalog,",
        "    s.foreign_server_name,",
        "    ((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier AS option_name,",
        "    ((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data AS option_value",
        "   FROM information_schema._pg_foreign_servers s;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_server_options OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_servers; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_servers AS",
        " SELECT _pg_foreign_servers.foreign_server_catalog,",
        "    _pg_foreign_servers.foreign_server_name,",
        "    _pg_foreign_servers.foreign_data_wrapper_catalog,",
        "    _pg_foreign_servers.foreign_data_wrapper_name,",
        "    _pg_foreign_servers.foreign_server_type,",
        "    _pg_foreign_servers.foreign_server_version,",
        "    _pg_foreign_servers.authorization_identifier",
        "   FROM information_schema._pg_foreign_servers;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_servers OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_table_options; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_table_options AS",
        " SELECT t.foreign_table_catalog,",
        "    t.foreign_table_schema,",
        "    t.foreign_table_name,",
        "    ((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier AS option_name,",
        "    ((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data AS option_value",
        "   FROM information_schema._pg_foreign_tables t;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_table_options OWNER TO postgres;",
        "",
        "--",
        "-- Name: foreign_tables; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.foreign_tables AS",
        " SELECT _pg_foreign_tables.foreign_table_catalog,",
        "    _pg_foreign_tables.foreign_table_schema,",
        "    _pg_foreign_tables.foreign_table_name,",
        "    _pg_foreign_tables.foreign_server_catalog,",
        "    _pg_foreign_tables.foreign_server_name",
        "   FROM information_schema._pg_foreign_tables;",
        "",
        "",
        "ALTER TABLE information_schema.foreign_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: information_schema_catalog_name; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.information_schema_catalog_name AS",
        " SELECT (current_database())::information_schema.sql_identifier AS catalog_name;",
        "",
        "",
        "ALTER TABLE information_schema.information_schema_catalog_name OWNER TO postgres;",
        "",
        "--",
        "-- Name: key_column_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.key_column_usage AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (ss.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,",
        "    (ss.relname)::information_schema.sql_identifier AS table_name,",
        "    (a.attname)::information_schema.sql_identifier AS column_name,",
        "    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,",
        "    (",
        "        CASE",
        "            WHEN (ss.contype = 'f'::\"char\") THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])",
        "            ELSE NULL::integer",
        "        END)::information_schema.cardinal_number AS position_in_unique_constraint",
        "   FROM pg_attribute a,",
        "    ( SELECT r.oid AS roid,",
        "            r.relname,",
        "            r.relowner,",
        "            nc.nspname AS nc_nspname,",
        "            nr.nspname AS nr_nspname,",
        "            c.oid AS coid,",
        "            c.conname,",
        "            c.contype,",
        "            c.conindid,",
        "            c.confkey,",
        "            c.confrelid,",
        "            information_schema._pg_expandarray(c.conkey) AS x",
        "           FROM pg_namespace nr,",
        "            pg_class r,",
        "            pg_namespace nc,",
        "            pg_constraint c",
        "          WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY['p'::\"char\", 'u'::\"char\", 'f'::\"char\"])) AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss",
        "  WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, 'USAGE'::text) OR has_column_privilege(ss.roid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.key_column_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: referential_constraints; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.referential_constraints AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (con.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (",
        "        CASE",
        "            WHEN (npkc.nspname IS NULL) THEN NULL::name",
        "            ELSE current_database()",
        "        END)::information_schema.sql_identifier AS unique_constraint_catalog,",
        "    (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,",
        "    (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,",
        "    (",
        "        CASE con.confmatchtype",
        "            WHEN 'f'::\"char\" THEN 'FULL'::text",
        "            WHEN 'p'::\"char\" THEN 'PARTIAL'::text",
        "            WHEN 's'::\"char\" THEN 'NONE'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS match_option,",
        "    (",
        "        CASE con.confupdtype",
        "            WHEN 'c'::\"char\" THEN 'CASCADE'::text",
        "            WHEN 'n'::\"char\" THEN 'SET NULL'::text",
        "            WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text",
        "            WHEN 'r'::\"char\" THEN 'RESTRICT'::text",
        "            WHEN 'a'::\"char\" THEN 'NO ACTION'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS update_rule,",
        "    (",
        "        CASE con.confdeltype",
        "            WHEN 'c'::\"char\" THEN 'CASCADE'::text",
        "            WHEN 'n'::\"char\" THEN 'SET NULL'::text",
        "            WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text",
        "            WHEN 'r'::\"char\" THEN 'RESTRICT'::text",
        "            WHEN 'a'::\"char\" THEN 'NO ACTION'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS delete_rule",
        "   FROM ((((((pg_namespace ncon",
        "     JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))",
        "     JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = 'f'::\"char\"))))",
        "     LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = ('pg_constraint'::regclass)::oid) AND (d1.refclassid = ('pg_class'::regclass)::oid) AND (d1.refobjsubid = 0))))",
        "     LEFT JOIN pg_depend d2 ON (((d2.refclassid = ('pg_constraint'::regclass)::oid) AND (d2.classid = ('pg_class'::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = 'i'::\"char\"))))",
        "     LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY['p'::\"char\", 'u'::\"char\"])) AND (pkc.conrelid = con.confrelid))))",
        "     LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))",
        "  WHERE (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text));",
        "",
        "",
        "ALTER TABLE information_schema.referential_constraints OWNER TO postgres;",
        "",
        "--",
        "-- Name: role_column_grants; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.role_column_grants AS",
        " SELECT column_privileges.grantor,",
        "    column_privileges.grantee,",
        "    column_privileges.table_catalog,",
        "    column_privileges.table_schema,",
        "    column_privileges.table_name,",
        "    column_privileges.column_name,",
        "    column_privileges.privilege_type,",
        "    column_privileges.is_grantable",
        "   FROM information_schema.column_privileges",
        "  WHERE (((column_privileges.grantor)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)) OR ((column_privileges.grantee)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)));",
        "",
        "",
        "ALTER TABLE information_schema.role_column_grants OWNER TO postgres;",
        "",
        "--",
        "-- Name: routine_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.routine_privileges AS",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,",
        "    (current_database())::information_schema.sql_identifier AS routine_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS routine_schema,",
        "    (p.proname)::information_schema.sql_identifier AS routine_name,",
        "    ('EXECUTE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, p.proowner, 'USAGE'::text) OR p.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_proc.oid,",
        "            pg_proc.proname,",
        "            pg_proc.proowner,",
        "            pg_proc.pronamespace,",
        "            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::\"char\", pg_proc.proowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::\"char\", pg_proc.proowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::\"char\", pg_proc.proowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::\"char\", pg_proc.proowner)))).is_grantable AS is_grantable",
        "           FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),",
        "    pg_namespace n,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = 'EXECUTE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)));",
        "",
        "",
        "ALTER TABLE information_schema.routine_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: role_routine_grants; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.role_routine_grants AS",
        " SELECT routine_privileges.grantor,",
        "    routine_privileges.grantee,",
        "    routine_privileges.specific_catalog,",
        "    routine_privileges.specific_schema,",
        "    routine_privileges.specific_name,",
        "    routine_privileges.routine_catalog,",
        "    routine_privileges.routine_schema,",
        "    routine_privileges.routine_name,",
        "    routine_privileges.privilege_type,",
        "    routine_privileges.is_grantable",
        "   FROM information_schema.routine_privileges",
        "  WHERE (((routine_privileges.grantor)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)) OR ((routine_privileges.grantee)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)));",
        "",
        "",
        "ALTER TABLE information_schema.role_routine_grants OWNER TO postgres;",
        "",
        "--",
        "-- Name: table_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.table_privileges AS",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (c.prtype)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable,",
        "    (",
        "        CASE",
        "            WHEN (c.prtype = 'SELECT'::text) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS with_hierarchy",
        "   FROM ( SELECT pg_class.oid,",
        "            pg_class.relname,",
        "            pg_class.relnamespace,",
        "            pg_class.relkind,",
        "            pg_class.relowner,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).is_grantable AS is_grantable",
        "           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),",
        "    pg_namespace nc,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'DELETE'::text, 'TRUNCATE'::text, 'REFERENCES'::text, 'TRIGGER'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)));",
        "",
        "",
        "ALTER TABLE information_schema.table_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: role_table_grants; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.role_table_grants AS",
        " SELECT table_privileges.grantor,",
        "    table_privileges.grantee,",
        "    table_privileges.table_catalog,",
        "    table_privileges.table_schema,",
        "    table_privileges.table_name,",
        "    table_privileges.privilege_type,",
        "    table_privileges.is_grantable,",
        "    table_privileges.with_hierarchy",
        "   FROM information_schema.table_privileges",
        "  WHERE (((table_privileges.grantor)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)) OR ((table_privileges.grantee)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)));",
        "",
        "",
        "ALTER TABLE information_schema.role_table_grants OWNER TO postgres;",
        "",
        "--",
        "-- Name: udt_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.udt_privileges AS",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS udt_name,",
        "    ('TYPE USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_type.oid,",
        "            pg_type.typname,",
        "            pg_type.typnamespace,",
        "            pg_type.typtype,",
        "            pg_type.typowner,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).is_grantable AS is_grantable",
        "           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),",
        "    pg_namespace n,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'c'::\"char\") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)));",
        "",
        "",
        "ALTER TABLE information_schema.udt_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: role_udt_grants; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.role_udt_grants AS",
        " SELECT udt_privileges.grantor,",
        "    udt_privileges.grantee,",
        "    udt_privileges.udt_catalog,",
        "    udt_privileges.udt_schema,",
        "    udt_privileges.udt_name,",
        "    udt_privileges.privilege_type,",
        "    udt_privileges.is_grantable",
        "   FROM information_schema.udt_privileges",
        "  WHERE (((udt_privileges.grantor)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)) OR ((udt_privileges.grantee)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)));",
        "",
        "",
        "ALTER TABLE information_schema.role_udt_grants OWNER TO postgres;",
        "",
        "--",
        "-- Name: usage_privileges; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.usage_privileges AS",
        " SELECT (u.rolname)::information_schema.sql_identifier AS grantor,",
        "    ('PUBLIC'::name)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS object_schema,",
        "    (c.collname)::information_schema.sql_identifier AS object_name,",
        "    ('COLLATION'::character varying)::information_schema.character_data AS object_type,",
        "    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_grantable",
        "   FROM pg_authid u,",
        "    pg_namespace n,",
        "    pg_collation c",
        "  WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding",
        "           FROM pg_database",
        "          WHERE (pg_database.datname = current_database()))])))",
        "UNION ALL",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS object_schema,",
        "    (t.typname)::information_schema.sql_identifier AS object_name,",
        "    ('DOMAIN'::character varying)::information_schema.character_data AS object_type,",
        "    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_type.oid,",
        "            pg_type.typname,",
        "            pg_type.typnamespace,",
        "            pg_type.typtype,",
        "            pg_type.typowner,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::\"char\", pg_type.typowner)))).is_grantable AS is_grantable",
        "           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),",
        "    pg_namespace n,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'd'::\"char\") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))",
        "UNION ALL",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (''::name)::information_schema.sql_identifier AS object_schema,",
        "    (fdw.fdwname)::information_schema.sql_identifier AS object_name,",
        "    ('FOREIGN DATA WRAPPER'::character varying)::information_schema.character_data AS object_type,",
        "    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, fdw.fdwowner, 'USAGE'::text) OR fdw.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_foreign_data_wrapper.fdwname,",
        "            pg_foreign_data_wrapper.fdwowner,",
        "            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::\"char\", pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::\"char\", pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::\"char\", pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::\"char\", pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable",
        "           FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))",
        "UNION ALL",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (''::name)::information_schema.sql_identifier AS object_schema,",
        "    (srv.srvname)::information_schema.sql_identifier AS object_name,",
        "    ('FOREIGN SERVER'::character varying)::information_schema.character_data AS object_type,",
        "    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, srv.srvowner, 'USAGE'::text) OR srv.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_foreign_server.srvname,",
        "            pg_foreign_server.srvowner,",
        "            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::\"char\", pg_foreign_server.srvowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::\"char\", pg_foreign_server.srvowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::\"char\", pg_foreign_server.srvowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::\"char\", pg_foreign_server.srvowner)))).is_grantable AS is_grantable",
        "           FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))",
        "UNION ALL",
        " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,",
        "    (grantee.rolname)::information_schema.sql_identifier AS grantee,",
        "    (current_database())::information_schema.sql_identifier AS object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS object_schema,",
        "    (c.relname)::information_schema.sql_identifier AS object_name,",
        "    ('SEQUENCE'::character varying)::information_schema.character_data AS object_type,",
        "    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,",
        "    (",
        "        CASE",
        "            WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_grantable",
        "   FROM ( SELECT pg_class.oid,",
        "            pg_class.relname,",
        "            pg_class.relnamespace,",
        "            pg_class.relkind,",
        "            pg_class.relowner,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantor AS grantor,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).grantee AS grantee,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).privilege_type AS privilege_type,",
        "            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::\"char\", pg_class.relowner)))).is_grantable AS is_grantable",
        "           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),",
        "    pg_namespace n,",
        "    pg_authid u_grantor,",
        "    ( SELECT pg_authid.oid,",
        "            pg_authid.rolname",
        "           FROM pg_authid",
        "        UNION ALL",
        "         SELECT (0)::oid AS oid,",
        "            'PUBLIC'::name) grantee(oid, rolname)",
        "  WHERE ((c.relnamespace = n.oid) AND (c.relkind = 'S'::\"char\") AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)));",
        "",
        "",
        "ALTER TABLE information_schema.usage_privileges OWNER TO postgres;",
        "",
        "--",
        "-- Name: role_usage_grants; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.role_usage_grants AS",
        " SELECT usage_privileges.grantor,",
        "    usage_privileges.grantee,",
        "    usage_privileges.object_catalog,",
        "    usage_privileges.object_schema,",
        "    usage_privileges.object_name,",
        "    usage_privileges.object_type,",
        "    usage_privileges.privilege_type,",
        "    usage_privileges.is_grantable",
        "   FROM information_schema.usage_privileges",
        "  WHERE (((usage_privileges.grantor)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)) OR ((usage_privileges.grantee)::name IN ( SELECT enabled_roles.role_name",
        "           FROM information_schema.enabled_roles)));",
        "",
        "",
        "ALTER TABLE information_schema.role_usage_grants OWNER TO postgres;",
        "",
        "--",
        "-- Name: schemata; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.schemata AS",
        " SELECT (current_database())::information_schema.sql_identifier AS catalog_name,",
        "    (n.nspname)::information_schema.sql_identifier AS schema_name,",
        "    (u.rolname)::information_schema.sql_identifier AS schema_owner,",
        "    (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS default_character_set_name,",
        "    (NULL::character varying)::information_schema.character_data AS sql_path",
        "   FROM pg_namespace n,",
        "    pg_authid u",
        "  WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, 'USAGE'::text) OR has_schema_privilege(n.oid, 'CREATE, USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.schemata OWNER TO postgres;",
        "",
        "--",
        "-- Name: sequences; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.sequences AS",
        " SELECT (current_database())::information_schema.sql_identifier AS sequence_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS sequence_schema,",
        "    (c.relname)::information_schema.sql_identifier AS sequence_name,",
        "    (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,",
        "    (information_schema._pg_numeric_precision(s.seqtypid, '-1'::integer))::information_schema.cardinal_number AS numeric_precision,",
        "    (2)::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (0)::information_schema.cardinal_number AS numeric_scale,",
        "    (s.seqstart)::information_schema.character_data AS start_value,",
        "    (s.seqmin)::information_schema.character_data AS minimum_value,",
        "    (s.seqmax)::information_schema.character_data AS maximum_value,",
        "    (s.seqincrement)::information_schema.character_data AS increment,",
        "    (",
        "        CASE",
        "            WHEN s.seqcycle THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS cycle_option",
        "   FROM pg_namespace nc,",
        "    pg_class c,",
        "    pg_sequence s",
        "  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'S'::\"char\") AND (NOT (EXISTS ( SELECT 1",
        "           FROM pg_depend",
        "          WHERE ((pg_depend.classid = ('pg_class'::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = 'i'::\"char\"))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_sequence_privilege(c.oid, 'SELECT, UPDATE, USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.sequences OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "SET default_table_access_method = heap;",
        "",
        "--",
        "-- Name: sql_features; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_features (",
        "    feature_id information_schema.character_data,",
        "    feature_name information_schema.character_data,",
        "    sub_feature_id information_schema.character_data,",
        "    sub_feature_name information_schema.character_data,",
        "    is_supported information_schema.yes_or_no,",
        "    is_verified_by information_schema.character_data,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_features OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_implementation_info; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_implementation_info (",
        "    implementation_info_id information_schema.character_data,",
        "    implementation_info_name information_schema.character_data,",
        "    integer_value information_schema.cardinal_number,",
        "    character_value information_schema.character_data,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_implementation_info OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_languages; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_languages (",
        "    sql_language_source information_schema.character_data,",
        "    sql_language_year information_schema.character_data,",
        "    sql_language_conformance information_schema.character_data,",
        "    sql_language_integrity information_schema.character_data,",
        "    sql_language_implementation information_schema.character_data,",
        "    sql_language_binding_style information_schema.character_data,",
        "    sql_language_programming_language information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_languages OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_packages; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_packages (",
        "    feature_id information_schema.character_data,",
        "    feature_name information_schema.character_data,",
        "    is_supported information_schema.yes_or_no,",
        "    is_verified_by information_schema.character_data,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_packages OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_parts; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_parts (",
        "    feature_id information_schema.character_data,",
        "    feature_name information_schema.character_data,",
        "    is_supported information_schema.yes_or_no,",
        "    is_verified_by information_schema.character_data,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_parts OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_sizing; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_sizing (",
        "    sizing_id information_schema.cardinal_number,",
        "    sizing_name information_schema.character_data,",
        "    supported_value information_schema.cardinal_number,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_sizing OWNER TO postgres;",
        "",
        "--",
        "-- Name: sql_sizing_profiles; Type: TABLE; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE TABLE information_schema.sql_sizing_profiles (",
        "    sizing_id information_schema.cardinal_number,",
        "    sizing_name information_schema.character_data,",
        "    profile_id information_schema.character_data,",
        "    required_value information_schema.cardinal_number,",
        "    comments information_schema.character_data",
        ");",
        "",
        "",
        "ALTER TABLE information_schema.sql_sizing_profiles OWNER TO postgres;",
        "",
        "--",
        "-- Name: table_constraints; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.table_constraints AS",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (c.conname)::information_schema.sql_identifier AS constraint_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nr.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (r.relname)::information_schema.sql_identifier AS table_name,",
        "    (",
        "        CASE c.contype",
        "            WHEN 'c'::\"char\" THEN 'CHECK'::text",
        "            WHEN 'f'::\"char\" THEN 'FOREIGN KEY'::text",
        "            WHEN 'p'::\"char\" THEN 'PRIMARY KEY'::text",
        "            WHEN 'u'::\"char\" THEN 'UNIQUE'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS constraint_type,",
        "    (",
        "        CASE",
        "            WHEN c.condeferrable THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_deferrable,",
        "    (",
        "        CASE",
        "            WHEN c.condeferred THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS initially_deferred,",
        "    ('YES'::character varying)::information_schema.yes_or_no AS enforced",
        "   FROM pg_namespace nc,",
        "    pg_namespace nr,",
        "    pg_constraint c,",
        "    pg_class r",
        "  WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype <> ALL (ARRAY['t'::\"char\", 'x'::\"char\"])) AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text)))",
        "UNION ALL",
        " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,",
        "    (nr.nspname)::information_schema.sql_identifier AS constraint_schema,",
        "    (((((((nr.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nr.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (r.relname)::information_schema.sql_identifier AS table_name,",
        "    ('CHECK'::character varying)::information_schema.character_data AS constraint_type,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS is_deferrable,",
        "    ('NO'::character varying)::information_schema.yes_or_no AS initially_deferred,",
        "    ('YES'::character varying)::information_schema.yes_or_no AS enforced",
        "   FROM pg_namespace nr,",
        "    pg_class r,",
        "    pg_attribute a",
        "  WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum > 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.table_constraints OWNER TO postgres;",
        "",
        "--",
        "-- Name: tables; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.tables AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (",
        "        CASE",
        "            WHEN (nc.oid = pg_my_temp_schema()) THEN 'LOCAL TEMPORARY'::text",
        "            WHEN (c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) THEN 'BASE TABLE'::text",
        "            WHEN (c.relkind = 'v'::\"char\") THEN 'VIEW'::text",
        "            WHEN (c.relkind = 'f'::\"char\") THEN 'FOREIGN'::text",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS table_type,",
        "    (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,",
        "    (NULL::character varying)::information_schema.character_data AS reference_generation,",
        "    (",
        "        CASE",
        "            WHEN (t.typname IS NOT NULL) THEN current_database()",
        "            ELSE NULL::name",
        "        END)::information_schema.sql_identifier AS user_defined_type_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,",
        "    (t.typname)::information_schema.sql_identifier AS user_defined_type_name,",
        "    (",
        "        CASE",
        "            WHEN ((c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) OR ((c.relkind = ANY (ARRAY['v'::\"char\", 'f'::\"char\"])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8))) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_insertable_into,",
        "    (",
        "        CASE",
        "            WHEN (t.typname IS NOT NULL) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_typed,",
        "    (NULL::character varying)::information_schema.character_data AS commit_action",
        "   FROM ((pg_namespace nc",
        "     JOIN pg_class c ON ((nc.oid = c.relnamespace)))",
        "     LEFT JOIN (pg_type t",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))",
        "  WHERE ((c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: transforms; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.transforms AS",
        " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS udt_name,",
        "    (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (np.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,",
        "    (l.lanname)::information_schema.sql_identifier AS group_name,",
        "    ('FROM SQL'::character varying)::information_schema.character_data AS transform_type",
        "   FROM (((((pg_type t",
        "     JOIN pg_transform x ON ((t.oid = x.trftype)))",
        "     JOIN pg_language l ON ((x.trflang = l.oid)))",
        "     JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))",
        "     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))",
        "UNION",
        " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS udt_schema,",
        "    (t.typname)::information_schema.sql_identifier AS udt_name,",
        "    (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (np.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,",
        "    (l.lanname)::information_schema.sql_identifier AS group_name,",
        "    ('TO SQL'::character varying)::information_schema.character_data AS transform_type",
        "   FROM (((((pg_type t",
        "     JOIN pg_transform x ON ((t.oid = x.trftype)))",
        "     JOIN pg_language l ON ((x.trflang = l.oid)))",
        "     JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))",
        "     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))",
        "     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))",
        "  ORDER BY 1, 2, 3, 7, 8;",
        "",
        "",
        "ALTER TABLE information_schema.transforms OWNER TO postgres;",
        "",
        "--",
        "-- Name: triggered_update_columns; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.triggered_update_columns AS",
        " SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS trigger_schema,",
        "    (t.tgname)::information_schema.sql_identifier AS trigger_name,",
        "    (current_database())::information_schema.sql_identifier AS event_object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS event_object_schema,",
        "    (c.relname)::information_schema.sql_identifier AS event_object_table,",
        "    (a.attname)::information_schema.sql_identifier AS event_object_column",
        "   FROM pg_namespace n,",
        "    pg_class c,",
        "    pg_trigger t,",
        "    ( SELECT ta0.tgoid,",
        "            (ta0.tgat).x AS tgattnum,",
        "            (ta0.tgat).n AS tgattpos",
        "           FROM ( SELECT pg_trigger.oid AS tgoid,",
        "                    information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat",
        "                   FROM pg_trigger) ta0) ta,",
        "    pg_attribute a",
        "  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.triggered_update_columns OWNER TO postgres;",
        "",
        "--",
        "-- Name: triggers; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.triggers AS",
        " SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS trigger_schema,",
        "    (t.tgname)::information_schema.sql_identifier AS trigger_name,",
        "    (em.text)::information_schema.character_data AS event_manipulation,",
        "    (current_database())::information_schema.sql_identifier AS event_object_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS event_object_schema,",
        "    (c.relname)::information_schema.sql_identifier AS event_object_table,",
        "    (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer & 1), ((t.tgtype)::integer & 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,",
        "    (",
        "        CASE",
        "            WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN (regexp_match(pg_get_triggerdef(t.oid), '.{35,} WHEN \\((.+)\\) EXECUTE FUNCTION'::text))[1]",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS action_condition,",
        "    (\"substring\"(pg_get_triggerdef(t.oid), (\"position\"(\"substring\"(pg_get_triggerdef(t.oid), 48), 'EXECUTE FUNCTION'::text) + 47)))::information_schema.character_data AS action_statement,",
        "    (",
        "        CASE ((t.tgtype)::integer & 1)",
        "            WHEN 1 THEN 'ROW'::text",
        "            ELSE 'STATEMENT'::text",
        "        END)::information_schema.character_data AS action_orientation,",
        "    (",
        "        CASE ((t.tgtype)::integer & 66)",
        "            WHEN 2 THEN 'BEFORE'::text",
        "            WHEN 64 THEN 'INSTEAD OF'::text",
        "            ELSE 'AFTER'::text",
        "        END)::information_schema.character_data AS action_timing,",
        "    (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,",
        "    (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,",
        "    (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,",
        "    (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,",
        "    (NULL::timestamp with time zone)::information_schema.time_stamp AS created",
        "   FROM pg_namespace n,",
        "    pg_class c,",
        "    pg_trigger t,",
        "    ( VALUES (4,'INSERT'::text), (8,'DELETE'::text), (16,'UPDATE'::text)) em(num, text)",
        "  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer & em.num) <> 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.triggers OWNER TO postgres;",
        "",
        "--",
        "-- Name: user_defined_types; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.user_defined_types AS",
        " SELECT (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,",
        "    (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,",
        "    (c.relname)::information_schema.sql_identifier AS user_defined_type_name,",
        "    ('STRUCTURED'::character varying)::information_schema.character_data AS user_defined_type_category,",
        "    ('YES'::character varying)::information_schema.yes_or_no AS is_instantiable,",
        "    (NULL::character varying)::information_schema.yes_or_no AS is_final,",
        "    (NULL::character varying)::information_schema.character_data AS ordering_form,",
        "    (NULL::character varying)::information_schema.character_data AS ordering_category,",
        "    (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,",
        "    (NULL::character varying)::information_schema.character_data AS reference_type,",
        "    (NULL::character varying)::information_schema.character_data AS data_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,",
        "    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS character_set_name,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_catalog,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_schema,",
        "    (NULL::name)::information_schema.sql_identifier AS collation_name,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,",
        "    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,",
        "    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,",
        "    (NULL::character varying)::information_schema.character_data AS interval_type,",
        "    (NULL::integer)::information_schema.cardinal_number AS interval_precision,",
        "    (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,",
        "    (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier",
        "   FROM pg_namespace n,",
        "    pg_class c,",
        "    pg_type t",
        "  WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = 'c'::\"char\") AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.user_defined_types OWNER TO postgres;",
        "",
        "--",
        "-- Name: user_mapping_options; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.user_mapping_options AS",
        " SELECT um.authorization_identifier,",
        "    um.foreign_server_catalog,",
        "    um.foreign_server_name,",
        "    (opts.option_name)::information_schema.sql_identifier AS option_name,",
        "    (",
        "        CASE",
        "            WHEN (((um.umuser <> (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper",
        "               FROM pg_authid",
        "              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS option_value",
        "   FROM information_schema._pg_user_mappings um,",
        "    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value);",
        "",
        "",
        "ALTER TABLE information_schema.user_mapping_options OWNER TO postgres;",
        "",
        "--",
        "-- Name: user_mappings; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.user_mappings AS",
        " SELECT _pg_user_mappings.authorization_identifier,",
        "    _pg_user_mappings.foreign_server_catalog,",
        "    _pg_user_mappings.foreign_server_name",
        "   FROM information_schema._pg_user_mappings;",
        "",
        "",
        "ALTER TABLE information_schema.user_mappings OWNER TO postgres;",
        "",
        "--",
        "-- Name: view_column_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.view_column_usage AS",
        " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,",
        "    (nv.nspname)::information_schema.sql_identifier AS view_schema,",
        "    (v.relname)::information_schema.sql_identifier AS view_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (t.relname)::information_schema.sql_identifier AS table_name,",
        "    (a.attname)::information_schema.sql_identifier AS column_name",
        "   FROM pg_namespace nv,",
        "    pg_class v,",
        "    pg_depend dv,",
        "    pg_depend dt,",
        "    pg_class t,",
        "    pg_namespace nt,",
        "    pg_attribute a",
        "  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::\"char\") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::\"char\") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.view_column_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: view_routine_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.view_routine_usage AS",
        " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nv.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (v.relname)::information_schema.sql_identifier AS table_name,",
        "    (current_database())::information_schema.sql_identifier AS specific_catalog,",
        "    (np.nspname)::information_schema.sql_identifier AS specific_schema,",
        "    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name",
        "   FROM pg_namespace nv,",
        "    pg_class v,",
        "    pg_depend dv,",
        "    pg_depend dp,",
        "    pg_proc p,",
        "    pg_namespace np",
        "  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::\"char\") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::\"char\") AND (dv.objid = dp.objid) AND (dp.classid = ('pg_rewrite'::regclass)::oid) AND (dp.refclassid = ('pg_proc'::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.view_routine_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: view_table_usage; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.view_table_usage AS",
        " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,",
        "    (nv.nspname)::information_schema.sql_identifier AS view_schema,",
        "    (v.relname)::information_schema.sql_identifier AS view_name,",
        "    (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nt.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (t.relname)::information_schema.sql_identifier AS table_name",
        "   FROM pg_namespace nv,",
        "    pg_class v,",
        "    pg_depend dv,",
        "    pg_depend dt,",
        "    pg_class t,",
        "    pg_namespace nt",
        "  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::\"char\") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::\"char\") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND pg_has_role(t.relowner, 'USAGE'::text));",
        "",
        "",
        "ALTER TABLE information_schema.view_table_usage OWNER TO postgres;",
        "",
        "--",
        "-- Name: views; Type: VIEW; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "CREATE VIEW information_schema.views AS",
        " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,",
        "    (nc.nspname)::information_schema.sql_identifier AS table_schema,",
        "    (c.relname)::information_schema.sql_identifier AS table_name,",
        "    (",
        "        CASE",
        "            WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN pg_get_viewdef(c.oid)",
        "            ELSE NULL::text",
        "        END)::information_schema.character_data AS view_definition,",
        "    (",
        "        CASE",
        "            WHEN ('check_option=cascaded'::text = ANY (c.reloptions)) THEN 'CASCADED'::text",
        "            WHEN ('check_option=local'::text = ANY (c.reloptions)) THEN 'LOCAL'::text",
        "            ELSE 'NONE'::text",
        "        END)::information_schema.character_data AS check_option,",
        "    (",
        "        CASE",
        "            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 20) = 20) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_updatable,",
        "    (",
        "        CASE",
        "            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_insertable_into,",
        "    (",
        "        CASE",
        "            WHEN (EXISTS ( SELECT 1",
        "               FROM pg_trigger",
        "              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 81) = 81)))) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_trigger_updatable,",
        "    (",
        "        CASE",
        "            WHEN (EXISTS ( SELECT 1",
        "               FROM pg_trigger",
        "              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 73) = 73)))) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_trigger_deletable,",
        "    (",
        "        CASE",
        "            WHEN (EXISTS ( SELECT 1",
        "               FROM pg_trigger",
        "              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 69) = 69)))) THEN 'YES'::text",
        "            ELSE 'NO'::text",
        "        END)::information_schema.yes_or_no AS is_trigger_insertable_into",
        "   FROM pg_namespace nc,",
        "    pg_class c",
        "  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'v'::\"char\") AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)));",
        "",
        "",
        "ALTER TABLE information_schema.views OWNER TO postgres;",
        "",
        "--",
        "-- Name: TABLE applicable_roles; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.applicable_roles TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE administrable_role_authorizations; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.administrable_role_authorizations TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE attributes; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.attributes TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE character_sets; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.character_sets TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE check_constraint_routine_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.check_constraint_routine_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE check_constraints; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.check_constraints TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE collation_character_set_applicability; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.collation_character_set_applicability TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE collations; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.collations TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE column_column_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.column_column_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE column_domain_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.column_domain_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE column_options; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.column_options TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE column_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.column_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE column_udt_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.column_udt_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE columns; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.columns TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE constraint_column_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.constraint_column_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE constraint_table_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.constraint_table_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE domains; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.domains TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE parameters; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.parameters TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE routines; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.routines TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE data_type_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.data_type_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE domain_constraints; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.domain_constraints TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE domain_udt_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.domain_udt_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE element_types; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.element_types TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE enabled_roles; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.enabled_roles TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_data_wrapper_options; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_data_wrapper_options TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_data_wrappers; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_data_wrappers TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_server_options; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_server_options TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_servers; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_servers TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_table_options; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_table_options TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE foreign_tables; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.foreign_tables TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE information_schema_catalog_name; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.information_schema_catalog_name TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE key_column_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.key_column_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE referential_constraints; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.referential_constraints TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE role_column_grants; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.role_column_grants TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE routine_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.routine_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE role_routine_grants; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.role_routine_grants TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE table_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.table_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE role_table_grants; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.role_table_grants TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE udt_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.udt_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE role_udt_grants; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.role_udt_grants TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE usage_privileges; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.usage_privileges TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE role_usage_grants; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.role_usage_grants TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE schemata; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.schemata TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sequences; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sequences TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_features; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_features TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_implementation_info; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_implementation_info TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_languages; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_languages TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_packages; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_packages TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_sizing; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_sizing TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE sql_sizing_profiles; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.sql_sizing_profiles TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE table_constraints; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.table_constraints TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE tables; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.tables TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE triggered_update_columns; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.triggered_update_columns TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE triggers; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.triggers TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE user_defined_types; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.user_defined_types TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE user_mapping_options; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.user_mapping_options TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE user_mappings; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.user_mappings TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE view_column_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.view_column_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE view_routine_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.view_routine_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE view_table_usage; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.view_table_usage TO PUBLIC;",
        "",
        "",
        "--",
        "-- Name: TABLE views; Type: ACL; Schema: information_schema; Owner: postgres",
        "--",
        "",
        "GRANT SELECT ON TABLE information_schema.views TO PUBLIC;",
        "",
        "",
        "--",
        "-- PostgreSQL database dump complete",
        "--",
        "",
        ""
      ],
      "tables": [
        {
          "schema": "information_schema",
          "table": "_pg_foreign_data_wrappers",
          "view": true,
          "columns": [
            {
              "name": "oid",
              "type": "unknown",
              "default": "w.oid",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "fdwowner",
              "type": "unknown",
              "default": "w.fdwowner",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "fdwoptions",
              "type": "unknown",
              "default": "w.fdwoptions",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "unknown",
              "default": "(w.fdwname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "(u.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_language",
              "type": "unknown",
              "default": "('c'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "_pg_foreign_servers",
          "view": true,
          "columns": [
            {
              "name": "oid",
              "type": "unknown",
              "default": "s.oid",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "srvoptions",
              "type": "unknown",
              "default": "s.srvoptions",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "(s.srvname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "unknown",
              "default": "(w.fdwname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_type",
              "type": "unknown",
              "default": "(s.srvtype)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_version",
              "type": "unknown",
              "default": "(s.srvversion)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "(u.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "_pg_foreign_table_columns",
          "view": true,
          "columns": [
            {
              "name": "nspname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73
                  ]
                }
              ]
            },
            {
              "name": "attname",
              "type": "unknown",
              "default": "a.attname",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73
                  ]
                }
              ]
            },
            {
              "name": "attfdwoptions",
              "type": "unknown",
              "default": "a.attfdwoptions",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "_pg_foreign_tables",
          "view": true,
          "columns": [
            {
              "name": "foreign_table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "ftoptions",
              "type": "unknown",
              "default": "t.ftoptions",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "(s.srvname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "(u.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "_pg_user_mappings",
          "view": true,
          "columns": [
            {
              "name": "oid",
              "type": "unknown",
              "default": "um.oid",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "umoptions",
              "type": "unknown",
              "default": "um.umoptions",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "umuser",
              "type": "unknown",
              "default": "um.umuser",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "(COALESCE(u.rolname, 'PUBLIC'::name))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "s.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "s.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            },
            {
              "name": "srvowner",
              "type": "unknown",
              "default": "s.authorization_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "administrable_role_authorizations",
          "view": true,
          "columns": [
            {
              "name": "grantee",
              "type": "unknown",
              "default": "applicable_roles.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    145,
                    146,
                    147,
                    148,
                    149,
                    150
                  ]
                }
              ]
            },
            {
              "name": "role_name",
              "type": "unknown",
              "default": "applicable_roles.role_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    145,
                    146,
                    147,
                    148,
                    149,
                    150
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "applicable_roles.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    145,
                    146,
                    147,
                    148,
                    149,
                    150
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                145,
                146,
                147,
                148,
                149,
                150
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "applicable_roles",
          "view": true,
          "columns": [
            {
              "name": "grantee",
              "type": "unknown",
              "default": "(a.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136
                  ]
                }
              ]
            },
            {
              "name": "role_name",
              "type": "unknown",
              "default": "(b.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "( CASE WHEN m.admin_option THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "attributes",
          "view": true,
          "columns": [
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "attribute_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "unknown",
              "default": "(a.attnum)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "attribute_default",
              "type": "unknown",
              "default": "(pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "is_nullable",
              "type": "unknown",
              "default": "( CASE WHEN (a.attnotnull OR ((t.typtype = 'd'::\"char\") AND t.typnotnull)) THEN 'NO'::text ELSE 'YES'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer) ELSE 'USER-DEFINED'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (nco.nspname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nco.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(co.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "attribute_udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "attribute_udt_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "attribute_udt_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "(a.attnum)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            },
            {
              "name": "is_derived_reference_attribute",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199,
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    209,
                    210,
                    211,
                    212
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "character_sets",
          "view": true,
          "columns": [
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(getdatabaseencoding())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "character_repertoire",
              "type": "unknown",
              "default": "( CASE WHEN (getdatabaseencoding() = 'UTF8'::name) THEN 'UCS'::name ELSE getdatabaseencoding() END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "form_of_use",
              "type": "unknown",
              "default": "(getdatabaseencoding())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "default_collate_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "default_collate_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            },
            {
              "name": "default_collate_name",
              "type": "unknown",
              "default": "(c.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    221,
                    222,
                    223,
                    224,
                    225,
                    226,
                    227,
                    228,
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235,
                    236,
                    237,
                    238,
                    239
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "check_constraint_routine_usage",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(c.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(np.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    248,
                    249,
                    250,
                    251,
                    252,
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259,
                    260
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                248,
                249,
                250,
                251,
                252,
                253,
                254,
                255,
                256,
                257,
                258,
                259,
                260
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "check_constraints",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(rs.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(con.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287
                  ]
                }
              ]
            },
            {
              "name": "check_clause",
              "type": "unknown",
              "default": "(\"substring\"(pg_get_constraintdef(con.oid), 7))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "collation_character_set_applicability",
          "view": true,
          "columns": [
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(c.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(getdatabaseencoding())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                296,
                297,
                298,
                299,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "collations",
          "view": true,
          "columns": [
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(c.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325
                  ]
                }
              ]
            },
            {
              "name": "pad_attribute",
              "type": "unknown",
              "default": "('NO PAD'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    316,
                    317,
                    318,
                    319,
                    320,
                    321,
                    322,
                    323,
                    324,
                    325
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                316,
                317,
                318,
                319,
                320,
                321,
                322,
                323,
                324,
                325
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_column_usage",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(ac.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345
                  ]
                }
              ]
            },
            {
              "name": "dependent_column",
              "type": "unknown",
              "default": "(ad.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    334,
                    335,
                    336,
                    337,
                    338,
                    339,
                    340,
                    341,
                    342,
                    343,
                    344,
                    345
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                334,
                335,
                336,
                337,
                338,
                339,
                340,
                341,
                342,
                343,
                344,
                345
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_domain_usage",
          "view": true,
          "columns": [
            {
              "name": "domain_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                354,
                355,
                356,
                357,
                358,
                359,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_options",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(c.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(c.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            },
            {
              "name": "option_name",
              "type": "unknown",
              "default": "((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            },
            {
              "name": "option_value",
              "type": "unknown",
              "default": "((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    376,
                    377,
                    378,
                    379,
                    380,
                    381,
                    382,
                    383
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                376,
                377,
                378,
                379,
                380,
                381,
                382,
                383
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_privileges",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "(u_grantor.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "(grantee.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(x.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(x.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "(x.prtype)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "( CASE WHEN (pg_has_role(x.grantee, x.relowner, 'USAGE'::text) OR x.grantable) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    392,
                    393,
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    415,
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    437,
                    438,
                    439,
                    440,
                    441,
                    442,
                    443,
                    444,
                    445,
                    446,
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                392,
                393,
                394,
                395,
                396,
                397,
                398,
                399,
                400,
                401,
                402,
                403,
                404,
                405,
                406,
                407,
                408,
                409,
                410,
                411,
                412,
                413,
                414,
                415,
                416,
                417,
                418,
                419,
                420,
                421,
                422,
                423,
                424,
                425,
                426,
                427,
                428,
                429,
                430,
                431,
                432,
                433,
                434,
                435,
                436,
                437,
                438,
                439,
                440,
                441,
                442,
                443,
                444,
                445,
                446,
                447,
                448,
                449,
                450,
                451,
                452,
                453
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_udt_usage",
          "view": true,
          "columns": [
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(COALESCE(bt.typname, t.typname))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468,
                    469,
                    470,
                    471,
                    472,
                    473,
                    474,
                    475,
                    476,
                    477
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                462,
                463,
                464,
                465,
                466,
                467,
                468,
                469,
                470,
                471,
                472,
                473,
                474,
                475,
                476,
                477
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "columns",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "unknown",
              "default": "(a.attnum)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "column_default",
              "type": "unknown",
              "default": "( CASE WHEN (a.attgenerated = ''::\"char\") THEN pg_get_expr(ad.adbin, ad.adrelid) ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "is_nullable",
              "type": "unknown",
              "default": "( CASE WHEN (a.attnotnull OR ((t.typtype = 'd'::\"char\") AND t.typnotnull)) THEN 'NO'::text ELSE 'YES'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN (t.typtype = 'd'::\"char\") THEN CASE WHEN ((bt.typelem <> (0)::oid) AND (bt.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer) ELSE 'USER-DEFINED'::text END ELSE CASE WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer) ELSE 'USER-DEFINED'::text END END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (nco.nspname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nco.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(co.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (t.typtype = 'd'::\"char\") THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "unknown",
              "default": "( CASE WHEN (t.typtype = 'd'::\"char\") THEN nt.nspname ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "unknown",
              "default": "( CASE WHEN (t.typtype = 'd'::\"char\") THEN t.typname ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(COALESCE(bt.typname, t.typname))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "(a.attnum)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "is_self_referencing",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "is_identity",
              "type": "unknown",
              "default": "( CASE WHEN (a.attidentity = ANY (ARRAY['a'::\"char\", 'd'::\"char\"])) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_generation",
              "type": "unknown",
              "default": "( CASE a.attidentity WHEN 'a'::\"char\" THEN 'ALWAYS'::text WHEN 'd'::\"char\" THEN 'BY DEFAULT'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_start",
              "type": "unknown",
              "default": "(seq.seqstart)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_increment",
              "type": "unknown",
              "default": "(seq.seqincrement)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_maximum",
              "type": "unknown",
              "default": "(seq.seqmax)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_minimum",
              "type": "unknown",
              "default": "(seq.seqmin)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "identity_cycle",
              "type": "unknown",
              "default": "( CASE WHEN seq.seqcycle THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "is_generated",
              "type": "unknown",
              "default": "( CASE WHEN (a.attgenerated <> ''::\"char\") THEN 'ALWAYS'::text ELSE 'NEVER'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "generation_expression",
              "type": "unknown",
              "default": "( CASE WHEN (a.attgenerated <> ''::\"char\") THEN pg_get_expr(ad.adbin, ad.adrelid) ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            },
            {
              "name": "is_updatable",
              "type": "unknown",
              "default": "( CASE WHEN ((c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) OR ((c.relkind = ANY (ARRAY['v'::\"char\", 'f'::\"char\"])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    486,
                    487,
                    488,
                    489,
                    490,
                    491,
                    492,
                    493,
                    494,
                    495,
                    496,
                    497,
                    498,
                    499,
                    500,
                    501,
                    502,
                    503,
                    504,
                    505,
                    506,
                    507,
                    508,
                    509,
                    510,
                    511,
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    518,
                    519,
                    520,
                    521,
                    522,
                    523,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537,
                    538,
                    539,
                    540,
                    541,
                    542,
                    543,
                    544,
                    545,
                    546,
                    547,
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557,
                    558,
                    559,
                    560,
                    561,
                    562,
                    563,
                    564,
                    565,
                    566,
                    567,
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576,
                    577,
                    578,
                    579,
                    580,
                    581,
                    582,
                    583,
                    584,
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593,
                    594,
                    595,
                    596,
                    597,
                    598,
                    599,
                    600,
                    601,
                    602,
                    603,
                    604,
                    605,
                    606
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                486,
                487,
                488,
                489,
                490,
                491,
                492,
                493,
                494,
                495,
                496,
                497,
                498,
                499,
                500,
                501,
                502,
                503,
                504,
                505,
                506,
                507,
                508,
                509,
                510,
                511,
                512,
                513,
                514,
                515,
                516,
                517,
                518,
                519,
                520,
                521,
                522,
                523,
                524,
                525,
                526,
                527,
                528,
                529,
                530,
                531,
                532,
                533,
                534,
                535,
                536,
                537,
                538,
                539,
                540,
                541,
                542,
                543,
                544,
                545,
                546,
                547,
                548,
                549,
                550,
                551,
                552,
                553,
                554,
                555,
                556,
                557,
                558,
                559,
                560,
                561,
                562,
                563,
                564,
                565,
                566,
                567,
                568,
                569,
                570,
                571,
                572,
                573,
                574,
                575,
                576,
                577,
                578,
                579,
                580,
                581,
                582,
                583,
                584,
                585,
                586,
                587,
                588,
                589,
                590,
                591,
                592,
                593,
                594,
                595,
                596,
                597,
                598,
                599,
                600,
                601,
                602,
                603,
                604,
                605,
                606
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "constraint_column_usage",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(x.tblschema)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(x.tblname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(x.colname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(x.cstrschema)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(x.cstrname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635,
                    636,
                    637,
                    638,
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646,
                    647,
                    648,
                    649,
                    650,
                    651,
                    652,
                    653,
                    654,
                    655,
                    656,
                    657
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                615,
                616,
                617,
                618,
                619,
                620,
                621,
                622,
                623,
                624,
                625,
                626,
                627,
                628,
                629,
                630,
                631,
                632,
                633,
                634,
                635,
                636,
                637,
                638,
                639,
                640,
                641,
                642,
                643,
                644,
                645,
                646,
                647,
                648,
                649,
                650,
                651,
                652,
                653,
                654,
                655,
                656,
                657
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "constraint_table_usage",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nr.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(r.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            },
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(c.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    666,
                    667,
                    668,
                    669,
                    670,
                    671,
                    672,
                    673,
                    674,
                    675,
                    676,
                    677
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                666,
                667,
                668,
                669,
                670,
                671,
                672,
                673,
                674,
                675,
                676,
                677
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "data_type_privileges",
          "view": true,
          "columns": [
            {
              "name": "object_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988
                  ]
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "unknown",
              "default": "x.objschema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988
                  ]
                }
              ]
            },
            {
              "name": "object_name",
              "type": "unknown",
              "default": "x.objname",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988
                  ]
                }
              ]
            },
            {
              "name": "object_type",
              "type": "unknown",
              "default": "(x.objtype)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "x.objdtdid",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    954,
                    955,
                    956,
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966,
                    967,
                    968,
                    969,
                    970,
                    971,
                    972,
                    973,
                    974,
                    975,
                    976,
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                954,
                955,
                956,
                957,
                958,
                959,
                960,
                961,
                962,
                963,
                964,
                965,
                966,
                967,
                968,
                969,
                970,
                971,
                972,
                973,
                974,
                975,
                976,
                977,
                978,
                979,
                980,
                981,
                982,
                983,
                984,
                985,
                986,
                987,
                988
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domain_constraints",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(rs.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(con.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "is_deferrable",
              "type": "unknown",
              "default": "( CASE WHEN con.condeferrable THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            },
            {
              "name": "initially_deferred",
              "type": "unknown",
              "default": "( CASE WHEN con.condeferred THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                997,
                998,
                999,
                1000,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008,
                1009,
                1010,
                1011,
                1012,
                1013,
                1014,
                1015,
                1016,
                1017,
                1018
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domain_udt_usage",
          "view": true,
          "columns": [
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nbt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(bt.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1027,
                    1028,
                    1029,
                    1030,
                    1031,
                    1032,
                    1033,
                    1034,
                    1035,
                    1036,
                    1037,
                    1038
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1027,
                1028,
                1029,
                1030,
                1031,
                1032,
                1033,
                1034,
                1035,
                1036,
                1037,
                1038
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domains",
          "view": true,
          "columns": [
            {
              "name": "domain_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer) ELSE 'USER-DEFINED'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (nco.nspname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nco.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(co.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "domain_default",
              "type": "unknown",
              "default": "(t.typdefault)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nbt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(bt.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "(1)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695,
                    696,
                    697,
                    698,
                    699,
                    700,
                    701,
                    702,
                    703,
                    704,
                    705,
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717,
                    718,
                    719,
                    720,
                    721,
                    722,
                    723,
                    724,
                    725,
                    726,
                    727,
                    728,
                    729
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                686,
                687,
                688,
                689,
                690,
                691,
                692,
                693,
                694,
                695,
                696,
                697,
                698,
                699,
                700,
                701,
                702,
                703,
                704,
                705,
                706,
                707,
                708,
                709,
                710,
                711,
                712,
                713,
                714,
                715,
                716,
                717,
                718,
                719,
                720,
                721,
                722,
                723,
                724,
                725,
                726,
                727,
                728,
                729
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "element_types",
          "view": true,
          "columns": [
            {
              "name": "object_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "object_name",
              "type": "unknown",
              "default": "x.objname",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "object_type",
              "type": "unknown",
              "default": "(x.objtype)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "collection_type_identifier",
              "type": "unknown",
              "default": "(x.objdtdid)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(bt.oid, NULL::integer) ELSE 'USER-DEFINED'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (nco.nspname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(nco.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(co.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "domain_default",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nbt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(bt.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "(('a'::text || (x.objdtdid)::text))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058,
                    1059,
                    1060,
                    1061,
                    1062,
                    1063,
                    1064,
                    1065,
                    1066,
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097,
                    1098,
                    1099,
                    1100,
                    1101,
                    1102,
                    1103,
                    1104,
                    1105,
                    1106,
                    1107,
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117,
                    1118,
                    1119,
                    1120,
                    1121,
                    1122,
                    1123,
                    1124,
                    1125,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1132,
                    1133,
                    1134,
                    1135,
                    1136
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1047,
                1048,
                1049,
                1050,
                1051,
                1052,
                1053,
                1054,
                1055,
                1056,
                1057,
                1058,
                1059,
                1060,
                1061,
                1062,
                1063,
                1064,
                1065,
                1066,
                1067,
                1068,
                1069,
                1070,
                1071,
                1072,
                1073,
                1074,
                1075,
                1076,
                1077,
                1078,
                1079,
                1080,
                1081,
                1082,
                1083,
                1084,
                1085,
                1086,
                1087,
                1088,
                1089,
                1090,
                1091,
                1092,
                1093,
                1094,
                1095,
                1096,
                1097,
                1098,
                1099,
                1100,
                1101,
                1102,
                1103,
                1104,
                1105,
                1106,
                1107,
                1108,
                1109,
                1110,
                1111,
                1112,
                1113,
                1114,
                1115,
                1116,
                1117,
                1118,
                1119,
                1120,
                1121,
                1122,
                1123,
                1124,
                1125,
                1126,
                1127,
                1128,
                1129,
                1130,
                1131,
                1132,
                1133,
                1134,
                1135,
                1136
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "enabled_roles",
          "view": true,
          "columns": [
            {
              "name": "role_name",
              "type": "unknown",
              "default": "(a.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1145,
                    1146,
                    1147,
                    1148
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1145,
                1146,
                1147,
                1148
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_data_wrapper_options",
          "view": true,
          "columns": [
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "unknown",
              "default": "w.foreign_data_wrapper_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1157,
                    1158,
                    1159,
                    1160,
                    1161,
                    1162
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "unknown",
              "default": "w.foreign_data_wrapper_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1157,
                    1158,
                    1159,
                    1160,
                    1161,
                    1162
                  ]
                }
              ]
            },
            {
              "name": "option_name",
              "type": "unknown",
              "default": "((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1157,
                    1158,
                    1159,
                    1160,
                    1161,
                    1162
                  ]
                }
              ]
            },
            {
              "name": "option_value",
              "type": "unknown",
              "default": "((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1157,
                    1158,
                    1159,
                    1160,
                    1161,
                    1162
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1157,
                1158,
                1159,
                1160,
                1161,
                1162
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_data_wrappers",
          "view": true,
          "columns": [
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "unknown",
              "default": "w.foreign_data_wrapper_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1171,
                    1172,
                    1173,
                    1174,
                    1175,
                    1176,
                    1177
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "unknown",
              "default": "w.foreign_data_wrapper_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1171,
                    1172,
                    1173,
                    1174,
                    1175,
                    1176,
                    1177
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "w.authorization_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1171,
                    1172,
                    1173,
                    1174,
                    1175,
                    1176,
                    1177
                  ]
                }
              ]
            },
            {
              "name": "library_name",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1171,
                    1172,
                    1173,
                    1174,
                    1175,
                    1176,
                    1177
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_language",
              "type": "unknown",
              "default": "w.foreign_data_wrapper_language",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1171,
                    1172,
                    1173,
                    1174,
                    1175,
                    1176,
                    1177
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1171,
                1172,
                1173,
                1174,
                1175,
                1176,
                1177
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_server_options",
          "view": true,
          "columns": [
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "s.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1186,
                    1187,
                    1188,
                    1189,
                    1190,
                    1191
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "s.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1186,
                    1187,
                    1188,
                    1189,
                    1190,
                    1191
                  ]
                }
              ]
            },
            {
              "name": "option_name",
              "type": "unknown",
              "default": "((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1186,
                    1187,
                    1188,
                    1189,
                    1190,
                    1191
                  ]
                }
              ]
            },
            {
              "name": "option_value",
              "type": "unknown",
              "default": "((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1186,
                    1187,
                    1188,
                    1189,
                    1190,
                    1191
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1186,
                1187,
                1188,
                1189,
                1190,
                1191
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_servers",
          "view": true,
          "columns": [
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_data_wrapper_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_data_wrapper_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_type",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_server_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_version",
              "type": "unknown",
              "default": "_pg_foreign_servers.foreign_server_version",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "_pg_foreign_servers.authorization_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1200,
                    1201,
                    1202,
                    1203,
                    1204,
                    1205,
                    1206,
                    1207,
                    1208
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1200,
                1201,
                1202,
                1203,
                1204,
                1205,
                1206,
                1207,
                1208
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_table_options",
          "view": true,
          "columns": [
            {
              "name": "foreign_table_catalog",
              "type": "unknown",
              "default": "t.foreign_table_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222,
                    1223
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_schema",
              "type": "unknown",
              "default": "t.foreign_table_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222,
                    1223
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_name",
              "type": "unknown",
              "default": "t.foreign_table_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222,
                    1223
                  ]
                }
              ]
            },
            {
              "name": "option_name",
              "type": "unknown",
              "default": "((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222,
                    1223
                  ]
                }
              ]
            },
            {
              "name": "option_value",
              "type": "unknown",
              "default": "((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222,
                    1223
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1217,
                1218,
                1219,
                1220,
                1221,
                1222,
                1223
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_tables",
          "view": true,
          "columns": [
            {
              "name": "foreign_table_catalog",
              "type": "unknown",
              "default": "_pg_foreign_tables.foreign_table_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1232,
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_schema",
              "type": "unknown",
              "default": "_pg_foreign_tables.foreign_table_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1232,
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238
                  ]
                }
              ]
            },
            {
              "name": "foreign_table_name",
              "type": "unknown",
              "default": "_pg_foreign_tables.foreign_table_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1232,
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "_pg_foreign_tables.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1232,
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "_pg_foreign_tables.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1232,
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1232,
                1233,
                1234,
                1235,
                1236,
                1237,
                1238
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "information_schema_catalog_name",
          "view": true,
          "columns": [
            {
              "name": "catalog_name",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1247,
                    1248
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1247,
                1248
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "key_column_usage",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(ss.nc_nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(ss.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(ss.nr_nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(ss.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "unknown",
              "default": "((ss.x).n)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            },
            {
              "name": "position_in_unique_constraint",
              "type": "unknown",
              "default": "( CASE WHEN (ss.contype = 'f'::\"char\") THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n]) ELSE NULL::integer END)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268,
                    1269,
                    1270,
                    1271,
                    1272,
                    1273,
                    1274,
                    1275,
                    1276,
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1289
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1257,
                1258,
                1259,
                1260,
                1261,
                1262,
                1263,
                1264,
                1265,
                1266,
                1267,
                1268,
                1269,
                1270,
                1271,
                1272,
                1273,
                1274,
                1275,
                1276,
                1277,
                1278,
                1279,
                1280,
                1281,
                1282,
                1283,
                1284,
                1285,
                1286,
                1287,
                1288,
                1289
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "parameters",
          "view": true,
          "columns": [
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(ss.n_nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "unknown",
              "default": "((ss.x).n)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "parameter_mode",
              "type": "unknown",
              "default": "( CASE WHEN (ss.proargmodes IS NULL) THEN 'IN'::text WHEN (ss.proargmodes[(ss.x).n] = 'i'::\"char\") THEN 'IN'::text WHEN (ss.proargmodes[(ss.x).n] = 'o'::\"char\") THEN 'OUT'::text WHEN (ss.proargmodes[(ss.x).n] = 'b'::\"char\") THEN 'INOUT'::text WHEN (ss.proargmodes[(ss.x).n] = 'v'::\"char\") THEN 'IN'::text WHEN (ss.proargmodes[(ss.x).n] = 't'::\"char\") THEN 'OUT'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "is_result",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "as_locator",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "parameter_name",
              "type": "unknown",
              "default": "(NULLIF(ss.proargnames[(ss.x).n], ''::text))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer) ELSE 'USER-DEFINED'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "((ss.x).n)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            },
            {
              "name": "parameter_default",
              "type": "unknown",
              "default": "( CASE WHEN pg_has_role(ss.proowner, 'USAGE'::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n) ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    738,
                    739,
                    740,
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747,
                    748,
                    749,
                    750,
                    751,
                    752,
                    753,
                    754,
                    755,
                    756,
                    757,
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768,
                    769,
                    770,
                    771,
                    772,
                    773,
                    774,
                    775,
                    776,
                    777,
                    778,
                    779,
                    780,
                    781,
                    782,
                    783,
                    784,
                    785,
                    786,
                    787,
                    788,
                    789,
                    790,
                    791,
                    792,
                    793,
                    794,
                    795,
                    796,
                    797,
                    798,
                    799,
                    800,
                    801
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                738,
                739,
                740,
                741,
                742,
                743,
                744,
                745,
                746,
                747,
                748,
                749,
                750,
                751,
                752,
                753,
                754,
                755,
                756,
                757,
                758,
                759,
                760,
                761,
                762,
                763,
                764,
                765,
                766,
                767,
                768,
                769,
                770,
                771,
                772,
                773,
                774,
                775,
                776,
                777,
                778,
                779,
                780,
                781,
                782,
                783,
                784,
                785,
                786,
                787,
                788,
                789,
                790,
                791,
                792,
                793,
                794,
                795,
                796,
                797,
                798,
                799,
                800,
                801
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "referential_constraints",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(ncon.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(con.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "unique_constraint_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (npkc.nspname IS NULL) THEN NULL::name ELSE current_database() END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "unique_constraint_schema",
              "type": "unknown",
              "default": "(npkc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "unique_constraint_name",
              "type": "unknown",
              "default": "(pkc.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "match_option",
              "type": "unknown",
              "default": "( CASE con.confmatchtype WHEN 'f'::\"char\" THEN 'FULL'::text WHEN 'p'::\"char\" THEN 'PARTIAL'::text WHEN 's'::\"char\" THEN 'NONE'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "update_rule",
              "type": "unknown",
              "default": "( CASE con.confupdtype WHEN 'c'::\"char\" THEN 'CASCADE'::text WHEN 'n'::\"char\" THEN 'SET NULL'::text WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text WHEN 'r'::\"char\" THEN 'RESTRICT'::text WHEN 'a'::\"char\" THEN 'NO ACTION'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            },
            {
              "name": "delete_rule",
              "type": "unknown",
              "default": "( CASE con.confdeltype WHEN 'c'::\"char\" THEN 'CASCADE'::text WHEN 'n'::\"char\" THEN 'SET NULL'::text WHEN 'd'::\"char\" THEN 'SET DEFAULT'::text WHEN 'r'::\"char\" THEN 'RESTRICT'::text WHEN 'a'::\"char\" THEN 'NO ACTION'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1298,
                    1299,
                    1300,
                    1301,
                    1302,
                    1303,
                    1304,
                    1305,
                    1306,
                    1307,
                    1308,
                    1309,
                    1310,
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1298,
                1299,
                1300,
                1301,
                1302,
                1303,
                1304,
                1305,
                1306,
                1307,
                1308,
                1309,
                1310,
                1311,
                1312,
                1313,
                1314,
                1315,
                1316,
                1317,
                1318,
                1319,
                1320,
                1321,
                1322,
                1323,
                1324,
                1325,
                1326,
                1327,
                1328,
                1329,
                1330,
                1331,
                1332,
                1333,
                1334,
                1335,
                1336,
                1337,
                1338,
                1339,
                1340,
                1341
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_column_grants",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "column_privileges.grantor",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "column_privileges.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "column_privileges.table_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "column_privileges.table_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "column_privileges.table_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "column_privileges.column_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "column_privileges.privilege_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "column_privileges.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1350,
                1351,
                1352,
                1353,
                1354,
                1355,
                1356,
                1357,
                1358,
                1359,
                1360,
                1361,
                1362
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_routine_grants",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "routine_privileges.grantor",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "routine_privileges.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "routine_privileges.specific_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "routine_privileges.specific_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "routine_privileges.specific_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "unknown",
              "default": "routine_privileges.routine_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "unknown",
              "default": "routine_privileges.routine_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "unknown",
              "default": "routine_privileges.routine_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "routine_privileges.privilege_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "routine_privileges.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1412,
                1413,
                1414,
                1415,
                1416,
                1417,
                1418,
                1419,
                1420,
                1421,
                1422,
                1423,
                1424,
                1425,
                1426
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_table_grants",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "table_privileges.grantor",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "table_privileges.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "table_privileges.table_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "table_privileges.table_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "table_privileges.table_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "table_privileges.privilege_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "table_privileges.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            },
            {
              "name": "with_hierarchy",
              "type": "unknown",
              "default": "table_privileges.with_hierarchy",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1479,
                1480,
                1481,
                1482,
                1483,
                1484,
                1485,
                1486,
                1487,
                1488,
                1489,
                1490,
                1491
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_udt_grants",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "udt_privileges.grantor",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "udt_privileges.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "udt_privileges.udt_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "udt_privileges.udt_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "udt_privileges.udt_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "udt_privileges.privilege_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "udt_privileges.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544,
                    1545,
                    1546,
                    1547,
                    1548,
                    1549,
                    1550
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1539,
                1540,
                1541,
                1542,
                1543,
                1544,
                1545,
                1546,
                1547,
                1548,
                1549,
                1550
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_usage_grants",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "usage_privileges.grantor",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "usage_privileges.grantee",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "object_catalog",
              "type": "unknown",
              "default": "usage_privileges.object_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "unknown",
              "default": "usage_privileges.object_schema",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "object_name",
              "type": "unknown",
              "default": "usage_privileges.object_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "object_type",
              "type": "unknown",
              "default": "usage_privileges.object_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "usage_privileges.privilege_type",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "usage_privileges.is_grantable",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1702,
                    1703,
                    1704,
                    1705,
                    1706,
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1702,
                1703,
                1704,
                1705,
                1706,
                1707,
                1708,
                1709,
                1710,
                1711,
                1712,
                1713,
                1714
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_privileges",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "(u_grantor.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "(grantee.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "unknown",
              "default": "(p.proname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "('EXECUTE'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "( CASE WHEN (pg_has_role(grantee.oid, p.proowner, 'USAGE'::text) OR p.grantable) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1371,
                1372,
                1373,
                1374,
                1375,
                1376,
                1377,
                1378,
                1379,
                1380,
                1381,
                1382,
                1383,
                1384,
                1385,
                1386,
                1387,
                1388,
                1389,
                1390,
                1391,
                1392,
                1393,
                1394,
                1395,
                1396,
                1397,
                1398,
                1399,
                1400,
                1401,
                1402,
                1403
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routines",
          "view": true,
          "columns": [
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "unknown",
              "default": "(p.proname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_type",
              "type": "unknown",
              "default": "( CASE p.prokind WHEN 'f'::\"char\" THEN 'FUNCTION'::text WHEN 'p'::\"char\" THEN 'PROCEDURE'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "module_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "module_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "module_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "( CASE WHEN (p.prokind = 'p'::\"char\") THEN NULL::text WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer) ELSE 'USER-DEFINED'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "type_udt_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (nt.nspname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "type_udt_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "type_udt_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "unknown",
              "default": "( CASE WHEN (p.prokind <> 'p'::\"char\") THEN 0 ELSE NULL::integer END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_body",
              "type": "unknown",
              "default": "( CASE WHEN (l.lanname = 'sql'::name) THEN 'SQL'::text ELSE 'EXTERNAL'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "routine_definition",
              "type": "unknown",
              "default": "( CASE WHEN pg_has_role(p.proowner, 'USAGE'::text) THEN p.prosrc ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "external_name",
              "type": "unknown",
              "default": "( CASE WHEN (l.lanname = 'c'::name) THEN p.prosrc ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "external_language",
              "type": "unknown",
              "default": "(upper((l.lanname)::text))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "parameter_style",
              "type": "unknown",
              "default": "('GENERAL'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "is_deterministic",
              "type": "unknown",
              "default": "( CASE WHEN (p.provolatile = 'i'::\"char\") THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "sql_data_access",
              "type": "unknown",
              "default": "('MODIFIES'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "is_null_call",
              "type": "unknown",
              "default": "( CASE WHEN (p.prokind <> 'p'::\"char\") THEN CASE WHEN p.proisstrict THEN 'YES'::text ELSE 'NO'::text END ELSE NULL::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "sql_path",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "schema_level_routine",
              "type": "unknown",
              "default": "('YES'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "max_dynamic_result_sets",
              "type": "unknown",
              "default": "(0)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "is_user_defined_cast",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "is_implicitly_invocable",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "security_type",
              "type": "unknown",
              "default": "( CASE WHEN p.prosecdef THEN 'DEFINER'::text ELSE 'INVOKER'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "to_sql_specific_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "to_sql_specific_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "to_sql_specific_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "as_locator",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "created",
              "type": "unknown",
              "default": "(NULL::timestamp with time zone)::information_schema.time_stamp",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "last_altered",
              "type": "unknown",
              "default": "(NULL::timestamp with time zone)::information_schema.time_stamp",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "new_savepoint_level",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "is_udt_dependent",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_from_data_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_as_locator",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_char_max_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_char_octet_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_char_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_char_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_char_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_collation_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_collation_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_collation_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_numeric_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_numeric_precision_radix",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_numeric_scale",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_datetime_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_interval_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_type_udt_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_type_udt_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_type_udt_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_scope_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_scope_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_scope_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_maximum_cardinality",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            },
            {
              "name": "result_cast_dtd_identifier",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825,
                    826,
                    827,
                    828,
                    829,
                    830,
                    831,
                    832,
                    833,
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    862,
                    863,
                    864,
                    865,
                    866,
                    867,
                    868,
                    869,
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880,
                    881,
                    882,
                    883,
                    884,
                    885,
                    886,
                    887,
                    888,
                    889,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907,
                    908,
                    909,
                    910,
                    911,
                    912,
                    913,
                    914,
                    915,
                    916,
                    917,
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924,
                    925,
                    926,
                    927,
                    928,
                    929,
                    930,
                    931,
                    932,
                    933,
                    934,
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944,
                    945
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                810,
                811,
                812,
                813,
                814,
                815,
                816,
                817,
                818,
                819,
                820,
                821,
                822,
                823,
                824,
                825,
                826,
                827,
                828,
                829,
                830,
                831,
                832,
                833,
                834,
                835,
                836,
                837,
                838,
                839,
                840,
                841,
                842,
                843,
                844,
                845,
                846,
                847,
                848,
                849,
                850,
                851,
                852,
                853,
                854,
                855,
                856,
                857,
                858,
                859,
                860,
                861,
                862,
                863,
                864,
                865,
                866,
                867,
                868,
                869,
                870,
                871,
                872,
                873,
                874,
                875,
                876,
                877,
                878,
                879,
                880,
                881,
                882,
                883,
                884,
                885,
                886,
                887,
                888,
                889,
                890,
                891,
                892,
                893,
                894,
                895,
                896,
                897,
                898,
                899,
                900,
                901,
                902,
                903,
                904,
                905,
                906,
                907,
                908,
                909,
                910,
                911,
                912,
                913,
                914,
                915,
                916,
                917,
                918,
                919,
                920,
                921,
                922,
                923,
                924,
                925,
                926,
                927,
                928,
                929,
                930,
                931,
                932,
                933,
                934,
                935,
                936,
                937,
                938,
                939,
                940,
                941,
                942,
                943,
                944,
                945
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "schemata",
          "view": true,
          "columns": [
            {
              "name": "catalog_name",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "schema_name",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "schema_owner",
              "type": "unknown",
              "default": "(u.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "default_character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "default_character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "default_character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            },
            {
              "name": "sql_path",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1723,
                1724,
                1725,
                1726,
                1727,
                1728,
                1729,
                1730,
                1731,
                1732,
                1733
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sequences",
          "view": true,
          "columns": [
            {
              "name": "sequence_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "sequence_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "sequence_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "(format_type(s.seqtypid, NULL::integer))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(information_schema._pg_numeric_precision(s.seqtypid, '-1'::integer))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(2)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(0)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "start_value",
              "type": "unknown",
              "default": "(s.seqstart)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "minimum_value",
              "type": "unknown",
              "default": "(s.seqmin)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "maximum_value",
              "type": "unknown",
              "default": "(s.seqmax)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "increment",
              "type": "unknown",
              "default": "(s.seqincrement)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            },
            {
              "name": "cycle_option",
              "type": "unknown",
              "default": "( CASE WHEN s.seqcycle THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751,
                    1752,
                    1753,
                    1754,
                    1755,
                    1756,
                    1757,
                    1758,
                    1759,
                    1760,
                    1761,
                    1762,
                    1763,
                    1764
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1742,
                1743,
                1744,
                1745,
                1746,
                1747,
                1748,
                1749,
                1750,
                1751,
                1752,
                1753,
                1754,
                1755,
                1756,
                1757,
                1758,
                1759,
                1760,
                1761,
                1762,
                1763,
                1764
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_features",
          "columns": [
            {
              "name": "feature_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "feature_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "sub_feature_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "sub_feature_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "is_supported",
              "type": "information_schema.yes_or_no",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "is_verified_by",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1777,
                    1778,
                    1779,
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1777,
                1778,
                1779,
                1780,
                1781,
                1782,
                1783,
                1784,
                1785
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_implementation_info",
          "columns": [
            {
              "name": "implementation_info_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800
                  ]
                }
              ]
            },
            {
              "name": "implementation_info_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800
                  ]
                }
              ]
            },
            {
              "name": "integer_value",
              "type": "information_schema.cardinal_number",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800
                  ]
                }
              ]
            },
            {
              "name": "character_value",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1794,
                1795,
                1796,
                1797,
                1798,
                1799,
                1800
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_languages",
          "columns": [
            {
              "name": "sql_language_source",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_year",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_conformance",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_integrity",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_implementation",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_binding_style",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            },
            {
              "name": "sql_language_programming_language",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1809,
                    1810,
                    1811,
                    1812,
                    1813,
                    1814,
                    1815,
                    1816,
                    1817
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1809,
                1810,
                1811,
                1812,
                1813,
                1814,
                1815,
                1816,
                1817
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_packages",
          "columns": [
            {
              "name": "feature_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1826,
                    1827,
                    1828,
                    1829,
                    1830,
                    1831,
                    1832
                  ]
                }
              ]
            },
            {
              "name": "feature_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1826,
                    1827,
                    1828,
                    1829,
                    1830,
                    1831,
                    1832
                  ]
                }
              ]
            },
            {
              "name": "is_supported",
              "type": "information_schema.yes_or_no",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1826,
                    1827,
                    1828,
                    1829,
                    1830,
                    1831,
                    1832
                  ]
                }
              ]
            },
            {
              "name": "is_verified_by",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1826,
                    1827,
                    1828,
                    1829,
                    1830,
                    1831,
                    1832
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1826,
                    1827,
                    1828,
                    1829,
                    1830,
                    1831,
                    1832
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1826,
                1827,
                1828,
                1829,
                1830,
                1831,
                1832
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_parts",
          "columns": [
            {
              "name": "feature_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1841,
                    1842,
                    1843,
                    1844,
                    1845,
                    1846,
                    1847
                  ]
                }
              ]
            },
            {
              "name": "feature_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1841,
                    1842,
                    1843,
                    1844,
                    1845,
                    1846,
                    1847
                  ]
                }
              ]
            },
            {
              "name": "is_supported",
              "type": "information_schema.yes_or_no",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1841,
                    1842,
                    1843,
                    1844,
                    1845,
                    1846,
                    1847
                  ]
                }
              ]
            },
            {
              "name": "is_verified_by",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1841,
                    1842,
                    1843,
                    1844,
                    1845,
                    1846,
                    1847
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1841,
                    1842,
                    1843,
                    1844,
                    1845,
                    1846,
                    1847
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1841,
                1842,
                1843,
                1844,
                1845,
                1846,
                1847
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_sizing",
          "columns": [
            {
              "name": "sizing_id",
              "type": "information_schema.cardinal_number",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861
                  ]
                }
              ]
            },
            {
              "name": "sizing_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861
                  ]
                }
              ]
            },
            {
              "name": "supported_value",
              "type": "information_schema.cardinal_number",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1856,
                1857,
                1858,
                1859,
                1860,
                1861
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_sizing_profiles",
          "columns": [
            {
              "name": "sizing_id",
              "type": "information_schema.cardinal_number",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876
                  ]
                }
              ]
            },
            {
              "name": "sizing_name",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876
                  ]
                }
              ]
            },
            {
              "name": "profile_id",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876
                  ]
                }
              ]
            },
            {
              "name": "required_value",
              "type": "information_schema.cardinal_number",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876
                  ]
                }
              ]
            },
            {
              "name": "comments",
              "type": "information_schema.character_data",
              "nullable": true,
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1870,
                1871,
                1872,
                1873,
                1874,
                1875,
                1876
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "table_constraints",
          "view": true,
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "unknown",
              "default": "(c.conname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nr.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(r.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "constraint_type",
              "type": "unknown",
              "default": "( CASE c.contype WHEN 'c'::\"char\" THEN 'CHECK'::text WHEN 'f'::\"char\" THEN 'FOREIGN KEY'::text WHEN 'p'::\"char\" THEN 'PRIMARY KEY'::text WHEN 'u'::\"char\" THEN 'UNIQUE'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "is_deferrable",
              "type": "unknown",
              "default": "( CASE WHEN c.condeferrable THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "initially_deferred",
              "type": "unknown",
              "default": "( CASE WHEN c.condeferred THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            },
            {
              "name": "enforced",
              "type": "unknown",
              "default": "('YES'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1885,
                    1886,
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923,
                    1924,
                    1925,
                    1926,
                    1927,
                    1928,
                    1929,
                    1930
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1885,
                1886,
                1887,
                1888,
                1889,
                1890,
                1891,
                1892,
                1893,
                1894,
                1895,
                1896,
                1897,
                1898,
                1899,
                1900,
                1901,
                1902,
                1903,
                1904,
                1905,
                1906,
                1907,
                1908,
                1909,
                1910,
                1911,
                1912,
                1913,
                1914,
                1915,
                1916,
                1917,
                1918,
                1919,
                1920,
                1921,
                1922,
                1923,
                1924,
                1925,
                1926,
                1927,
                1928,
                1929,
                1930
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "table_privileges",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "(u_grantor.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "(grantee.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "(c.prtype)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "( CASE WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            },
            {
              "name": "with_hierarchy",
              "type": "unknown",
              "default": "( CASE WHEN (c.prtype = 'SELECT'::text) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1435,
                1436,
                1437,
                1438,
                1439,
                1440,
                1441,
                1442,
                1443,
                1444,
                1445,
                1446,
                1447,
                1448,
                1449,
                1450,
                1451,
                1452,
                1453,
                1454,
                1455,
                1456,
                1457,
                1458,
                1459,
                1460,
                1461,
                1462,
                1463,
                1464,
                1465,
                1466,
                1467,
                1468,
                1469,
                1470
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "tables",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "table_type",
              "type": "unknown",
              "default": "( CASE WHEN (nc.oid = pg_my_temp_schema()) THEN 'LOCAL TEMPORARY'::text WHEN (c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) THEN 'BASE TABLE'::text WHEN (c.relkind = 'v'::\"char\") THEN 'VIEW'::text WHEN (c.relkind = 'f'::\"char\") THEN 'FOREIGN'::text ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "self_referencing_column_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "reference_generation",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_catalog",
              "type": "unknown",
              "default": "( CASE WHEN (t.typname IS NOT NULL) THEN current_database() ELSE NULL::name END)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "is_insertable_into",
              "type": "unknown",
              "default": "( CASE WHEN ((c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) OR ((c.relkind = ANY (ARRAY['v'::\"char\", 'f'::\"char\"])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8))) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "is_typed",
              "type": "unknown",
              "default": "( CASE WHEN (t.typname IS NOT NULL) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            },
            {
              "name": "commit_action",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954,
                    1955,
                    1956,
                    1957,
                    1958,
                    1959,
                    1960,
                    1961,
                    1962,
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1939,
                1940,
                1941,
                1942,
                1943,
                1944,
                1945,
                1946,
                1947,
                1948,
                1949,
                1950,
                1951,
                1952,
                1953,
                1954,
                1955,
                1956,
                1957,
                1958,
                1959,
                1960,
                1961,
                1962,
                1963,
                1964,
                1965,
                1966,
                1967,
                1968,
                1969,
                1970,
                1971,
                1972,
                1973,
                1974,
                1975
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "transforms",
          "view": true,
          "columns": [
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(np.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "group_name",
              "type": "unknown",
              "default": "(l.lanname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            },
            {
              "name": "transform_type",
              "type": "unknown",
              "default": "('FROM SQL'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1984,
                1985,
                1986,
                1987,
                1988,
                1989,
                1990,
                1991,
                1992,
                1993,
                1994,
                1995,
                1996,
                1997,
                1998,
                1999,
                2000,
                2001,
                2002,
                2003,
                2004,
                2005,
                2006,
                2007,
                2008,
                2009,
                2010,
                2011,
                2012,
                2013,
                2014
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "triggered_update_columns",
          "view": true,
          "columns": [
            {
              "name": "trigger_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "trigger_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "trigger_name",
              "type": "unknown",
              "default": "(t.tgname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "event_object_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "event_object_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "event_object_table",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            },
            {
              "name": "event_object_column",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2023,
                    2024,
                    2025,
                    2026,
                    2027,
                    2028,
                    2029,
                    2030,
                    2031,
                    2032,
                    2033,
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2023,
                2024,
                2025,
                2026,
                2027,
                2028,
                2029,
                2030,
                2031,
                2032,
                2033,
                2034,
                2035,
                2036,
                2037,
                2038,
                2039,
                2040,
                2041
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "triggers",
          "view": true,
          "columns": [
            {
              "name": "trigger_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "trigger_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "trigger_name",
              "type": "unknown",
              "default": "(t.tgname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "event_manipulation",
              "type": "unknown",
              "default": "(em.text)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "event_object_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "event_object_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "event_object_table",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_order",
              "type": "unknown",
              "default": "(rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer & 1), ((t.tgtype)::integer & 66) ORDER BY t.tgname))::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_condition",
              "type": "unknown",
              "default": "( CASE WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN (regexp_match(pg_get_triggerdef(t.oid), '.{35,} WHEN \\((.+)\\) EXECUTE FUNCTION'::text))[1] ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_statement",
              "type": "unknown",
              "default": "(\"substring\"(pg_get_triggerdef(t.oid), (\"position\"(\"substring\"(pg_get_triggerdef(t.oid), 48), 'EXECUTE FUNCTION'::text) + 47)))::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_orientation",
              "type": "unknown",
              "default": "( CASE ((t.tgtype)::integer & 1) WHEN 1 THEN 'ROW'::text ELSE 'STATEMENT'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_timing",
              "type": "unknown",
              "default": "( CASE ((t.tgtype)::integer & 66) WHEN 2 THEN 'BEFORE'::text WHEN 64 THEN 'INSTEAD OF'::text ELSE 'AFTER'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_reference_old_table",
              "type": "unknown",
              "default": "(t.tgoldtable)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_reference_new_table",
              "type": "unknown",
              "default": "(t.tgnewtable)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_reference_old_row",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "action_reference_new_row",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            },
            {
              "name": "created",
              "type": "unknown",
              "default": "(NULL::timestamp with time zone)::information_schema.time_stamp",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2050,
                    2051,
                    2052,
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077,
                    2078,
                    2079,
                    2080,
                    2081,
                    2082,
                    2083,
                    2084,
                    2085
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2050,
                2051,
                2052,
                2053,
                2054,
                2055,
                2056,
                2057,
                2058,
                2059,
                2060,
                2061,
                2062,
                2063,
                2064,
                2065,
                2066,
                2067,
                2068,
                2069,
                2070,
                2071,
                2072,
                2073,
                2074,
                2075,
                2076,
                2077,
                2078,
                2079,
                2080,
                2081,
                2082,
                2083,
                2084,
                2085
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "udt_privileges",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "(u_grantor.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "(grantee.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "unknown",
              "default": "(t.typname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "('TYPE USAGE'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "( CASE WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1500,
                    1501,
                    1502,
                    1503,
                    1504,
                    1505,
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515,
                    1516,
                    1517,
                    1518,
                    1519,
                    1520,
                    1521,
                    1522,
                    1523,
                    1524,
                    1525,
                    1526,
                    1527,
                    1528,
                    1529,
                    1530
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1500,
                1501,
                1502,
                1503,
                1504,
                1505,
                1506,
                1507,
                1508,
                1509,
                1510,
                1511,
                1512,
                1513,
                1514,
                1515,
                1516,
                1517,
                1518,
                1519,
                1520,
                1521,
                1522,
                1523,
                1524,
                1525,
                1526,
                1527,
                1528,
                1529,
                1530
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "usage_privileges",
          "view": true,
          "columns": [
            {
              "name": "grantor",
              "type": "unknown",
              "default": "(u.rolname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "grantee",
              "type": "unknown",
              "default": "PUBLIC.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "object_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "object_name",
              "type": "unknown",
              "default": "(c.collname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "object_type",
              "type": "unknown",
              "default": "('COLLATION'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "unknown",
              "default": "('USAGE'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "unknown",
              "default": "('NO'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571,
                    1572,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579,
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592,
                    1593,
                    1594,
                    1595,
                    1596,
                    1597,
                    1598,
                    1599,
                    1600,
                    1601,
                    1602,
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611,
                    1612,
                    1613,
                    1614,
                    1615,
                    1616,
                    1617,
                    1618,
                    1619,
                    1620,
                    1621,
                    1622,
                    1623,
                    1624,
                    1625,
                    1626,
                    1627,
                    1628,
                    1629,
                    1630,
                    1631,
                    1632,
                    1633,
                    1634,
                    1635,
                    1636,
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642,
                    1643,
                    1644,
                    1645,
                    1646,
                    1647,
                    1648,
                    1649,
                    1650,
                    1651,
                    1652,
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676,
                    1677,
                    1678,
                    1679,
                    1680,
                    1681,
                    1682,
                    1683,
                    1684,
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                1559,
                1560,
                1561,
                1562,
                1563,
                1564,
                1565,
                1566,
                1567,
                1568,
                1569,
                1570,
                1571,
                1572,
                1573,
                1574,
                1575,
                1576,
                1577,
                1578,
                1579,
                1580,
                1581,
                1582,
                1583,
                1584,
                1585,
                1586,
                1587,
                1588,
                1589,
                1590,
                1591,
                1592,
                1593,
                1594,
                1595,
                1596,
                1597,
                1598,
                1599,
                1600,
                1601,
                1602,
                1603,
                1604,
                1605,
                1606,
                1607,
                1608,
                1609,
                1610,
                1611,
                1612,
                1613,
                1614,
                1615,
                1616,
                1617,
                1618,
                1619,
                1620,
                1621,
                1622,
                1623,
                1624,
                1625,
                1626,
                1627,
                1628,
                1629,
                1630,
                1631,
                1632,
                1633,
                1634,
                1635,
                1636,
                1637,
                1638,
                1639,
                1640,
                1641,
                1642,
                1643,
                1644,
                1645,
                1646,
                1647,
                1648,
                1649,
                1650,
                1651,
                1652,
                1653,
                1654,
                1655,
                1656,
                1657,
                1658,
                1659,
                1660,
                1661,
                1662,
                1663,
                1664,
                1665,
                1666,
                1667,
                1668,
                1669,
                1670,
                1671,
                1672,
                1673,
                1674,
                1675,
                1676,
                1677,
                1678,
                1679,
                1680,
                1681,
                1682,
                1683,
                1684,
                1685,
                1686,
                1687,
                1688,
                1689,
                1690,
                1691,
                1692,
                1693
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_defined_types",
          "view": true,
          "columns": [
            {
              "name": "user_defined_type_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_schema",
              "type": "unknown",
              "default": "(n.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "user_defined_type_category",
              "type": "unknown",
              "default": "('STRUCTURED'::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "is_instantiable",
              "type": "unknown",
              "default": "('YES'::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "is_final",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ordering_form",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ordering_category",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ordering_routine_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ordering_routine_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ordering_routine_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "reference_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "unknown",
              "default": "(NULL::character varying)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "unknown",
              "default": "(NULL::integer)::information_schema.cardinal_number",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "source_dtd_identifier",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            },
            {
              "name": "ref_dtd_identifier",
              "type": "unknown",
              "default": "(NULL::name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2094,
                    2095,
                    2096,
                    2097,
                    2098,
                    2099,
                    2100,
                    2101,
                    2102,
                    2103,
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114,
                    2115,
                    2116,
                    2117,
                    2118,
                    2119,
                    2120,
                    2121,
                    2122,
                    2123,
                    2124,
                    2125,
                    2126,
                    2127
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2094,
                2095,
                2096,
                2097,
                2098,
                2099,
                2100,
                2101,
                2102,
                2103,
                2104,
                2105,
                2106,
                2107,
                2108,
                2109,
                2110,
                2111,
                2112,
                2113,
                2114,
                2115,
                2116,
                2117,
                2118,
                2119,
                2120,
                2121,
                2122,
                2123,
                2124,
                2125,
                2126,
                2127
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_mapping_options",
          "view": true,
          "columns": [
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "um.authorization_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147,
                    2148,
                    2149
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "um.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147,
                    2148,
                    2149
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "um.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147,
                    2148,
                    2149
                  ]
                }
              ]
            },
            {
              "name": "option_name",
              "type": "unknown",
              "default": "(opts.option_name)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147,
                    2148,
                    2149
                  ]
                }
              ]
            },
            {
              "name": "option_value",
              "type": "unknown",
              "default": "( CASE WHEN (((um.umuser <> (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper FROM pg_authid WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147,
                    2148,
                    2149
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2136,
                2137,
                2138,
                2139,
                2140,
                2141,
                2142,
                2143,
                2144,
                2145,
                2146,
                2147,
                2148,
                2149
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_mappings",
          "view": true,
          "columns": [
            {
              "name": "authorization_identifier",
              "type": "unknown",
              "default": "_pg_user_mappings.authorization_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2158,
                    2159,
                    2160,
                    2161,
                    2162
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "unknown",
              "default": "_pg_user_mappings.foreign_server_catalog",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2158,
                    2159,
                    2160,
                    2161,
                    2162
                  ]
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "unknown",
              "default": "_pg_user_mappings.foreign_server_name",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2158,
                    2159,
                    2160,
                    2161,
                    2162
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2158,
                2159,
                2160,
                2161,
                2162
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_column_usage",
          "view": true,
          "columns": [
            {
              "name": "view_catalog",
              "type": "unknown",
              "default": "DISTINCT (current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "view_schema",
              "type": "unknown",
              "default": "(nv.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "view_name",
              "type": "unknown",
              "default": "(v.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(t.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            },
            {
              "name": "column_name",
              "type": "unknown",
              "default": "(a.attname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2171,
                    2172,
                    2173,
                    2174,
                    2175,
                    2176,
                    2177,
                    2178,
                    2179,
                    2180,
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2171,
                2172,
                2173,
                2174,
                2175,
                2176,
                2177,
                2178,
                2179,
                2180,
                2181,
                2182,
                2183,
                2184,
                2185,
                2186
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_routine_usage",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "DISTINCT (current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nv.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(v.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "unknown",
              "default": "(np.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "unknown",
              "default": "(nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2195,
                    2196,
                    2197,
                    2198,
                    2199,
                    2200,
                    2201,
                    2202,
                    2203,
                    2204,
                    2205,
                    2206,
                    2207,
                    2208
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2195,
                2196,
                2197,
                2198,
                2199,
                2200,
                2201,
                2202,
                2203,
                2204,
                2205,
                2206,
                2207,
                2208
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_table_usage",
          "view": true,
          "columns": [
            {
              "name": "view_catalog",
              "type": "unknown",
              "default": "DISTINCT (current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            },
            {
              "name": "view_schema",
              "type": "unknown",
              "default": "(nv.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            },
            {
              "name": "view_name",
              "type": "unknown",
              "default": "(v.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nt.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(t.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2217,
                    2218,
                    2219,
                    2220,
                    2221,
                    2222,
                    2223,
                    2224,
                    2225,
                    2226,
                    2227,
                    2228,
                    2229,
                    2230
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2217,
                2218,
                2219,
                2220,
                2221,
                2222,
                2223,
                2224,
                2225,
                2226,
                2227,
                2228,
                2229,
                2230
              ]
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "views",
          "view": true,
          "columns": [
            {
              "name": "table_catalog",
              "type": "unknown",
              "default": "(current_database())::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "unknown",
              "default": "(nc.nspname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "table_name",
              "type": "unknown",
              "default": "(c.relname)::information_schema.sql_identifier",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "view_definition",
              "type": "unknown",
              "default": "( CASE WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN pg_get_viewdef(c.oid) ELSE NULL::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "check_option",
              "type": "unknown",
              "default": "( CASE WHEN ('check_option=cascaded'::text = ANY (c.reloptions)) THEN 'CASCADED'::text WHEN ('check_option=local'::text = ANY (c.reloptions)) THEN 'LOCAL'::text ELSE 'NONE'::text END)::information_schema.character_data",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "is_updatable",
              "type": "unknown",
              "default": "( CASE WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 20) = 20) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "is_insertable_into",
              "type": "unknown",
              "default": "( CASE WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "is_trigger_updatable",
              "type": "unknown",
              "default": "( CASE WHEN (EXISTS ( SELECT 1 FROM pg_trigger WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 81) = 81)))) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "is_trigger_deletable",
              "type": "unknown",
              "default": "( CASE WHEN (EXISTS ( SELECT 1 FROM pg_trigger WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 73) = 73)))) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            },
            {
              "name": "is_trigger_insertable_into",
              "type": "unknown",
              "default": "( CASE WHEN (EXISTS ( SELECT 1 FROM pg_trigger WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 69) = 69)))) THEN 'YES'::text ELSE 'NO'::text END)::information_schema.yes_or_no",
              "origins": [
                {
                  "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
                  "lines": [
                    2239,
                    2240,
                    2241,
                    2242,
                    2243,
                    2244,
                    2245,
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259,
                    2260,
                    2261,
                    2262,
                    2263,
                    2264,
                    2265,
                    2266,
                    2267,
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280,
                    2281,
                    2282,
                    2283,
                    2284,
                    2285,
                    2286,
                    2287
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "01c77c47-0a2c-4410-8625-7358241a2b50",
              "lines": [
                2239,
                2240,
                2241,
                2242,
                2243,
                2244,
                2245,
                2246,
                2247,
                2248,
                2249,
                2250,
                2251,
                2252,
                2253,
                2254,
                2255,
                2256,
                2257,
                2258,
                2259,
                2260,
                2261,
                2262,
                2263,
                2264,
                2265,
                2266,
                2267,
                2268,
                2269,
                2270,
                2271,
                2272,
                2273,
                2274,
                2275,
                2276,
                2277,
                2278,
                2279,
                2280,
                2281,
                2282,
                2283,
                2284,
                2285,
                2286,
                2287
              ]
            }
          ]
        }
      ],
      "relations": [],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    },
    {
      "id": "22766069-29b0-4de6-a646-a399e92db0cc",
      "name": "information_schema doc",
      "kind": {
        "kind": "AmlEditor"
      },
      "content": [
        "information_schema.information_schema_catalog_name | information_schema_catalog_name is a table that always contains one row and one column containing the name of the current database (current catalog, in SQL terminology).\\nhttps://www.postgresql.org/docs/current/infoschema-information-schema-catalog-name.html",
        "  catalog_name sql_identifier | Name of the database that contains this information schema",
        "",
        "information_schema.administrable_role_authorizations | The view administrable_role_authorizations identifies all roles that the current user has the admin option for.\\nhttps://www.postgresql.org/docs/current/infoschema-administrable-role-authorizations.html",
        "  grantee sql_identifier | Name of the role to which this role membership was granted (can be the current user, or a different role in case of nested role memberships)",
        "  role_name sql_identifier | Name of a role",
        "  is_grantable yes_or_no | Always YES",
        "",
        "information_schema.applicable_roles | The view applicable_roles identifies all roles whose privileges the current user can use. This means there is some chain of role grants from the current user to the role in question. The current user itself is also an applicable role. The set of applicable roles is generally used for permission checking.  \\nhttps://www.postgresql.org/docs/current/infoschema-applicable-roles.html",
        "  grantee sql_identifier | Name of the role to which this role membership was granted (can be the current user, or a different role in case of nested role memberships)",
        "  role_name sql_identifier | Name of a role",
        "  is_grantable yes_or_no | YES if the grantee has the admin option on the role, NO if not",
        "",
        "information_schema.attributes | The view attributes contains information about the attributes of composite data types defined in the database. (Note that the view does not give information about table columns, which are sometimes called attributes in PostgreSQL contexts.) Only those attributes are shown that the current user has access to (by way of being the owner of or having some privilege on the type).\\nhttps://www.postgresql.org/docs/current/infoschema-attributes.html",
        "  udt_catalog sql_identifier | Name of the database containing the data type (always the current database)",
        "  udt_schema sql_identifier | Name of the schema containing the data type",
        "  udt_name sql_identifier | Name of the data type",
        "  attribute_name sql_identifier | Name of the attribute",
        "  ordinal_position cardinal_number | Ordinal position of the attribute within the data type (count starts at 1)",
        "  attribute_default character_data | Default expression of the attribute",
        "  is_nullable yes_or_no | YES if the attribute is possibly nullable, NO if it is known not nullable.",
        "  data_type character_data | Data type of the attribute, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in attribute_udt_name and associated columns).",
        "  character_maximum_length cardinal_number | If data_type identifies a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
        "  character_octet_length cardinal_number | If data_type identifies a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Name of the database containing the collation of the attribute (always the current database), null if default or the data type of the attribute is not collatable",
        "  collation_schema sql_identifier | Name of the schema containing the collation of the attribute, null if default or the data type of the attribute is not collatable",
        "  collation_name sql_identifier | Name of the collation of the attribute, null if default or the data type of the attribute is not collatable",
        "  numeric_precision cardinal_number | If data_type identifies a numeric type, this column contains the (declared or implicit) precision of the type for this attribute. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  numeric_precision_radix cardinal_number | If data_type identifies a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
        "  numeric_scale cardinal_number | If data_type identifies an exact numeric type, this column contains the (declared or implicit) scale of the type for this attribute. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  datetime_precision cardinal_number | If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this attribute, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
        "  interval_type character_data | If data_type identifies an interval type, this column contains the specification which fields the intervals include for this attribute, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
        "  interval_precision cardinal_number | Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type attributes)",
        "  attribute_udt_catalog sql_identifier | Name of the database that the attribute data type is defined in (always the current database)",
        "  attribute_udt_schema sql_identifier | Name of the schema that the attribute data type is defined in",
        "  attribute_udt_name sql_identifier | Name of the attribute data type",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the column, unique among the data type descriptors pertaining to the table. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
        "  is_derived_reference_attribute yes_or_no | Applies to a feature not available in PostgreSQL",
        "",
        "information_schema.character_sets | The view character_sets identifies the character sets available in the current database. Since PostgreSQL does not support multiple character sets within one database, this view only shows one, which is the database encoding.\\nhttps://www.postgresql.org/docs/current/infoschema-character-sets.html",
        "  character_set_catalog sql_identifier | Character sets are currently not implemented as schema objects, so this column is null.",
        "  character_set_schema sql_identifier | Character sets are currently not implemented as schema objects, so this column is null.",
        "  character_set_name sql_identifier | Name of the character set, currently implemented as showing the name of the database encoding",
        "  character_repertoire sql_identifier | Character repertoire, showing UCS if the encoding is UTF8, else just the encoding name",
        "  form_of_use sql_identifier | Character encoding form, same as the database encoding",
        "  default_collate_catalog sql_identifier | Name of the database containing the default collation (always the current database, if any collation is identified)",
        "  default_collate_schema sql_identifier | Name of the schema containing the default collation",
        "  default_collate_name sql_identifier | Name of the default collation. The default collation is identified as the collation that matches the COLLATE and CTYPE settings of the current database. If there is no such collation, then this column and the associated schema and catalog columns are null.",
        "",
        "information_schema.check_constraint_routine_usage | The view check_constraint_routine_usage identifies routines (functions and procedures) that are used by a check constraint. Only those routines are shown that are owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-check-constraint-routine-usage.html",
        "  constraint_catalog sql_identifier | Name of the database containing the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema containing the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "",
        "information_schema.check_constraints | The view check_constraints contains all check constraints, either defined on a table or on a domain, that are owned by a currently enabled role. (The owner of the table or domain is the owner of the constraint.)\\nhttps://www.postgresql.org/docs/current/infoschema-check-constraints.html",
        "  constraint_catalog sql_identifier | Name of the database containing the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema containing the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  check_clause character_data | The check expression of the check constraint",
        "",
        "information_schema.collations | The view collations contains the collations available in the current database.\\nhttps://www.postgresql.org/docs/current/infoschema-collations.html",
        "  collation_catalog sql_identifier | Name of the database containing the collation (always the current database)",
        "  collation_schema sql_identifier | Name of the schema containing the collation",
        "  collation_name sql_identifier | Name of the default collation",
        "  pad_attribute character_data | Always NO PAD (The alternative PAD SPACE is not supported by PostgreSQL.)",
        "",
        "information_schema.collation_character_set_applicability | The view collation_character_set_applicability identifies which character set the available collations are applicable to. In PostgreSQL, there is only one character set per database (see explanation in Section 37.7), so this view does not provide much useful information.\\nhttps://www.postgresql.org/docs/current/infoschema-collation-character-set-applicab.html",
        "  collation_catalog sql_identifier | Name of the database containing the collation (always the current database)",
        "  collation_schema sql_identifier | Name of the schema containing the collation",
        "  collation_name sql_identifier | Name of the default collation",
        "  character_set_catalog sql_identifier | Character sets are currently not implemented as schema objects, so this column is null",
        "  character_set_schema sql_identifier | Character sets are currently not implemented as schema objects, so this column is null",
        "  character_set_name sql_identifier | Name of the character set",
        "",
        "information_schema.column_column_usage | The view column_column_usage identifies all generated columns that depend on another base column in the same table. Only tables owned by a currently enabled role are included.\\nhttps://www.postgresql.org/docs/current/infoschema-column-column-usage.html",
        "  table_catalog sql_identifier | Name of the database containing the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema containing the table",
        "  table_name sql_identifier | Name of the table",
        "  column_name sql_identifier | Name of the base column that a generated column depends on",
        "  dependent_column sql_identifier | Name of the generated column",
        "",
        "information_schema.column_domain_usage | The view column_domain_usage identifies all columns (of a table or a view) that make use of some domain defined in the current database and owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-column-domain-usage.html",
        "  domain_catalog sql_identifier | Name of the database containing the domain (always the current database)",
        "  domain_schema sql_identifier | Name of the schema containing the domain",
        "  domain_name sql_identifier | Name of the domain",
        "  table_catalog sql_identifier | Name of the database containing the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema containing the table",
        "  table_name sql_identifier | Name of the table",
        "  column_name sql_identifier | Name of the column",
        "",
        "information_schema.column_options | The view column_options contains all the options defined for foreign table columns in the current database. Only those foreign table columns are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-column-options.html",
        "  table_catalog sql_identifier | Name of the database that contains the foreign table (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the foreign table",
        "  table_name sql_identifier | Name of the foreign table",
        "  column_name sql_identifier | Name of the column",
        "  option_name sql_identifier | Name of an option",
        "  option_value character_data | Value of the option",
        "",
        "information_schema.column_privileges | The view column_privileges identifies all privileges granted on columns to a currently enabled role or by a currently enabled role. There is one row for each combination of column, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-column-privileges.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  table_catalog sql_identifier | Name of the database that contains the table that contains the column (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that contains the column",
        "  table_name sql_identifier | Name of the table that contains the column",
        "  column_name sql_identifier | Name of the column",
        "  privilege_type character_data | Type of the privilege: SELECT, INSERT, UPDATE, or REFERENCES",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.column_udt_usage | The view column_udt_usage identifies all columns that use data types owned by a currently enabled role. Note that in PostgreSQL, built-in data types behave like user-defined types, so they are included here as well. See also Section 37.17 for details.\\nhttps://www.postgresql.org/docs/current/infoschema-column-udt-usage.html",
        "  udt_catalog sql_identifier | Name of the database that the column data type (the underlying type of the domain, if applicable) is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the column data type (the underlying type of the domain, if applicable) is defined in",
        "  udt_name sql_identifier | Name of the column data type (the underlying type of the domain, if applicable)",
        "  table_catalog sql_identifier | Name of the database containing the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema containing the table",
        "  table_name sql_identifier | Name of the table",
        "  column_name sql_identifier | Name of the column",
        "",
        "information_schema.columns | The view columns contains information about all table columns (or view columns) in the database. System columns (ctid, etc.) are not included. Only those columns are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-columns.html",
        "  table_catalog sql_identifier | Name of the database containing the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema containing the table",
        "  table_name sql_identifier | Name of the table",
        "  column_name sql_identifier | Name of the column",
        "  ordinal_position cardinal_number | Ordinal position of the column within the table (count starts at 1)",
        "  column_default character_data | Default expression of the column",
        "  is_nullable yes_or_no | YES if the column is possibly nullable, NO if it is known not nullable. A not-null constraint is one way a column can be known not nullable, but there can be others.",
        "  data_type character_data | Data type of the column, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns). If the column is based on a domain, this column refers to the type underlying the domain (and the domain is identified in domain_name and associated columns).",
        "  character_maximum_length cardinal_number | If data_type identifies a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
        "  character_octet_length cardinal_number | If data_type identifies a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
        "  numeric_precision cardinal_number | If data_type identifies a numeric type, this column contains the (declared or implicit) precision of the type for this column. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  numeric_precision_radix cardinal_number | If data_type identifies a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
        "  numeric_scale cardinal_number | If data_type identifies an exact numeric type, this column contains the (declared or implicit) scale of the type for this column. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  datetime_precision cardinal_number | If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this column, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
        "  interval_type character_data | If data_type identifies an interval type, this column contains the specification which fields the intervals include for this column, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
        "  interval_precision cardinal_number | Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type columns)",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Name of the database containing the collation of the column (always the current database), null if default or the data type of the column is not collatable",
        "  collation_schema sql_identifier | Name of the schema containing the collation of the column, null if default or the data type of the column is not collatable",
        "  collation_name sql_identifier | Name of the collation of the column, null if default or the data type of the column is not collatable",
        "  domain_catalog sql_identifier | If the column has a domain type, the name of the database that the domain is defined in (always the current database), else null.",
        "  domain_schema sql_identifier | If the column has a domain type, the name of the schema that the domain is defined in, else null.",
        "  domain_name sql_identifier | If the column has a domain type, the name of the domain, else null.",
        "  udt_catalog sql_identifier | Name of the database that the column data type (the underlying type of the domain, if applicable) is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the column data type (the underlying type of the domain, if applicable) is defined in",
        "  udt_name sql_identifier | Name of the column data type (the underlying type of the domain, if applicable)",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the column, unique among the data type descriptors pertaining to the table. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
        "  is_self_referencing yes_or_no | Applies to a feature not available in PostgreSQL",
        "  is_identity yes_or_no | If the column is an identity column, then YES, else NO.",
        "  identity_generation character_data | If the column is an identity column, then ALWAYS or BY DEFAULT, reflecting the definition of the column.",
        "  identity_start character_data | If the column is an identity column, then the start value of the internal sequence, else null.",
        "  identity_increment character_data | If the column is an identity column, then the increment of the internal sequence, else null.",
        "  identity_maximum character_data | If the column is an identity column, then the maximum value of the internal sequence, else null.",
        "  identity_minimum character_data | If the column is an identity column, then the minimum value of the internal sequence, else null.",
        "  identity_cycle yes_or_no | If the column is an identity column, then YES if the internal sequence cycles or NO if it does not; otherwise null.",
        "  is_generated character_data | If the column is a generated column, then ALWAYS, else NEVER.",
        "  generation_expression character_data | If the column is a generated column, then the generation expression, else null.",
        "  is_updatable yes_or_no | YES if the column is updatable, NO if not (Columns in base tables are always updatable, columns in views not necessarily)",
        "",
        "information_schema.constraint_column_usage | The view constraint_column_usage identifies all columns in the current database that are used by some constraint. Only those columns are shown that are contained in a table owned by a currently enabled role. For a check constraint, this view identifies the columns that are used in the check expression. For a foreign key constraint, this view identifies the columns that the foreign key references. For a unique or primary key constraint, this view identifies the constrained columns.\\nhttps://www.postgresql.org/docs/current/infoschema-constraint-column-usage.html",
        "  table_catalog sql_identifier | Name of the database that contains the table that contains the column that is used by some constraint (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that contains the column that is used by some constraint",
        "  table_name sql_identifier | Name of the table that contains the column that is used by some constraint",
        "  column_name sql_identifier | Name of the column that is used by some constraint",
        "  constraint_catalog sql_identifier | Name of the database that contains the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema that contains the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "",
        "information_schema.constraint_table_usage | The view constraint_table_usage identifies all tables in the current database that are used by some constraint and are owned by a currently enabled role. (This is different from the view table_constraints, which identifies all table constraints along with the table they are defined on.) For a foreign key constraint, this view identifies the table that the foreign key references. For a unique or primary key constraint, this view simply identifies the table the constraint belongs to. Check constraints and not-null constraints are not included in this view.\\nhttps://www.postgresql.org/docs/current/infoschema-constraint-table-usage.html",
        "  table_catalog sql_identifier | Name of the database that contains the table that is used by some constraint (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that is used by some constraint",
        "  table_name sql_identifier | Name of the table that is used by some constraint",
        "  constraint_catalog sql_identifier | Name of the database that contains the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema that contains the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "",
        "information_schema.data_type_privileges | The view data_type_privileges identifies all data type descriptors that the current user has access to, by way of being the owner of the described object or having some privilege for it. A data type descriptor is generated whenever a data type is used in the definition of a table column, a domain, or a function (as parameter or return type) and stores some information about how the data type is used in that instance (for example, the declared maximum length, if applicable). Each data type descriptor is assigned an arbitrary identifier that is unique among the data type descriptor identifiers assigned for one object (table, domain, function). This view is probably not useful for applications, but it is used to define some other views in the information schema.\\nhttps://www.postgresql.org/docs/current/infoschema-data-type-privileges.html",
        "  object_catalog sql_identifier | Name of the database that contains the described object (always the current database)",
        "  object_schema sql_identifier | Name of the schema that contains the described object",
        "  object_name sql_identifier | Name of the described object",
        "  object_type character_data | The type of the described object: one of TABLE (the data type descriptor pertains to a column of that table), DOMAIN (the data type descriptors pertains to that domain), ROUTINE (the data type descriptor pertains to a parameter or the return data type of that function).",
        "  dtd_identifier sql_identifier | The identifier of the data type descriptor, which is unique among the data type descriptors for that same object.",
        "",
        "information_schema.domain_constraints | The view domain_constraints contains all constraints belonging to domains defined in the current database. Only those domains are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-domain-constraints.html",
        "  constraint_catalog sql_identifier | Name of the database that contains the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema that contains the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  domain_catalog sql_identifier | Name of the database that contains the domain (always the current database)",
        "  domain_schema sql_identifier | Name of the schema that contains the domain",
        "  domain_name sql_identifier | Name of the domain",
        "  is_deferrable yes_or_no | YES if the constraint is deferrable, NO if not",
        "  initially_deferred yes_or_no | YES if the constraint is deferrable and initially deferred, NO if not",
        "",
        "information_schema.domain_udt_usage | The view domain_udt_usage identifies all domains that are based on data types owned by a currently enabled role. Note that in PostgreSQL, built-in data types behave like user-defined types, so they are included here as well.\\nhttps://www.postgresql.org/docs/current/infoschema-domain-udt-usage.html",
        "  udt_catalog sql_identifier | Name of the database that the domain data type is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the domain data type is defined in",
        "  udt_name sql_identifier | Name of the domain data type",
        "  domain_catalog sql_identifier | Name of the database that contains the domain (always the current database)",
        "  domain_schema sql_identifier | Name of the schema that contains the domain",
        "  domain_name sql_identifier | Name of the domain",
        "",
        "information_schema.domains | The view domains contains all domains defined in the current database. Only those domains are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-domains.html",
        "  domain_catalog sql_identifier | Name of the database that contains the domain (always the current database)",
        "  domain_schema sql_identifier | Name of the schema that contains the domain",
        "  domain_name sql_identifier | Name of the domain",
        "  data_type character_data | Data type of the domain, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
        "  character_maximum_length cardinal_number | If the domain has a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
        "  character_octet_length cardinal_number | If the domain has a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Name of the database containing the collation of the domain (always the current database), null if default or the data type of the domain is not collatable",
        "  collation_schema sql_identifier | Name of the schema containing the collation of the domain, null if default or the data type of the domain is not collatable",
        "  collation_name sql_identifier | Name of the collation of the domain, null if default or the data type of the domain is not collatable",
        "  numeric_precision cardinal_number | If the domain has a numeric type, this column contains the (declared or implicit) precision of the type for this domain. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  numeric_precision_radix cardinal_number | If the domain has a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
        "  numeric_scale cardinal_number | If the domain has an exact numeric type, this column contains the (declared or implicit) scale of the type for this domain. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
        "  datetime_precision cardinal_number | If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this domain, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
        "  interval_type character_data | If data_type identifies an interval type, this column contains the specification which fields the intervals include for this domain, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
        "  interval_precision cardinal_number | Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type domains)",
        "  domain_default character_data | Default expression of the domain",
        "  udt_catalog sql_identifier | Name of the database that the domain data type is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the domain data type is defined in",
        "  udt_name sql_identifier | Name of the domain data type",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the domain, unique among the data type descriptors pertaining to the domain (which is trivial, because a domain only contains one data type descriptor). This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
        "",
        "information_schema.element_types | The view element_types contains the data type descriptors of the elements of arrays. When a table column, composite-type attribute, domain, function parameter, or function return value is defined to be of an array type, the respective information schema view only contains ARRAY in the column data_type. To obtain information on the element type of the array, you can join the respective view with this view. For example, to show the columns of a table with data types and array element types, if applicable, you could do:\\nhttps://www.postgresql.org/docs/current/infoschema-element-types.html",
        "  object_catalog sql_identifier | Name of the database that contains the object that uses the array being described (always the current database)",
        "  object_schema sql_identifier | Name of the schema that contains the object that uses the array being described",
        "  object_name sql_identifier | Name of the object that uses the array being described",
        "  object_type character_data | The type of the object that uses the array being described: one of TABLE (the array is used by a column of that table), USER-DEFINED TYPE (the array is used by an attribute of that composite type), DOMAIN (the array is used by that domain), ROUTINE (the array is used by a parameter or the return data type of that function).",
        "  collection_type_identifier sql_identifier | The identifier of the data type descriptor of the array being described. Use this to join with the dtd_identifier columns of other information schema views.",
        "  data_type character_data | Data type of the array elements, if it is a built-in type, else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
        "  character_maximum_length cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  character_octet_length cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Name of the database containing the collation of the element type (always the current database), null if default or the data type of the element is not collatable",
        "  collation_schema sql_identifier | Name of the schema containing the collation of the element type, null if default or the data type of the element is not collatable",
        "  collation_name sql_identifier | Name of the collation of the element type, null if default or the data type of the element is not collatable",
        "  numeric_precision cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  numeric_precision_radix cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  numeric_scale cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  datetime_precision cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  interval_type character_data | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  interval_precision cardinal_number | Always null, since this information is not applied to array element data types in PostgreSQL",
        "  domain_default character_data | Not yet implemented",
        "  udt_catalog sql_identifier | Name of the database that the data type of the elements is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the data type of the elements is defined in",
        "  udt_name sql_identifier | Name of the data type of the elements",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the element. This is currently not useful.",
        "",
        "information_schema.enabled_roles | The view enabled_roles identifies the currently “enabled roles”. The enabled roles are recursively defined as the current user together with all roles that have been granted to the enabled roles with automatic inheritance. In other words, these are all roles that the current user has direct or indirect, automatically inheriting membership in.  \\nhttps://www.postgresql.org/docs/current/infoschema-enabled-roles.html",
        "  role_name sql_identifier | Name of a role",
        "",
        "information_schema.foreign_data_wrapper_options | The view foreign_data_wrapper_options contains all the options defined for foreign-data wrappers in the current database. Only those foreign-data wrappers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-data-wrapper-options.html",
        "  foreign_data_wrapper_catalog sql_identifier | Name of the database that the foreign-data wrapper is defined in (always the current database)",
        "  foreign_data_wrapper_name sql_identifier | Name of the foreign-data wrapper",
        "  option_name sql_identifier | Name of an option",
        "  option_value character_data | Value of the option",
        "",
        "information_schema.foreign_data_wrappers | The view foreign_data_wrappers contains all foreign-data wrappers defined in the current database. Only those foreign-data wrappers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-data-wrappers.html",
        "  foreign_data_wrapper_catalog sql_identifier | Name of the database that contains the foreign-data wrapper (always the current database)",
        "  foreign_data_wrapper_name sql_identifier | Name of the foreign-data wrapper",
        "  authorization_identifier sql_identifier | Name of the owner of the foreign server",
        "  library_name character_data | File name of the library that implementing this foreign-data wrapper",
        "  foreign_data_wrapper_language character_data | Language used to implement this foreign-data wrapper",
        "",
        "information_schema.foreign_server_options | The view foreign_server_options contains all the options defined for foreign servers in the current database. Only those foreign servers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-server-options.html",
        "  foreign_server_catalog sql_identifier | Name of the database that the foreign server is defined in (always the current database)",
        "  foreign_server_name sql_identifier | Name of the foreign server",
        "  option_name sql_identifier | Name of an option",
        "  option_value character_data | Value of the option",
        "",
        "information_schema.foreign_servers | The view foreign_servers contains all foreign servers defined in the current database. Only those foreign servers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-servers.html",
        "  foreign_server_catalog sql_identifier | Name of the database that the foreign server is defined in (always the current database)",
        "  foreign_server_name sql_identifier | Name of the foreign server",
        "  foreign_data_wrapper_catalog sql_identifier | Name of the database that contains the foreign-data wrapper used by the foreign server (always the current database)",
        "  foreign_data_wrapper_name sql_identifier | Name of the foreign-data wrapper used by the foreign server",
        "  foreign_server_type character_data | Foreign server type information, if specified upon creation",
        "  foreign_server_version character_data | Foreign server version information, if specified upon creation",
        "  authorization_identifier sql_identifier | Name of the owner of the foreign server",
        "",
        "information_schema.foreign_table_options | The view foreign_table_options contains all the options defined for foreign tables in the current database. Only those foreign tables are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-table-options.html",
        "  foreign_table_catalog sql_identifier | Name of the database that contains the foreign table (always the current database)",
        "  foreign_table_schema sql_identifier | Name of the schema that contains the foreign table",
        "  foreign_table_name sql_identifier | Name of the foreign table",
        "  option_name sql_identifier | Name of an option",
        "  option_value character_data | Value of the option",
        "",
        "information_schema.foreign_tables | The view foreign_tables contains all foreign tables defined in the current database. Only those foreign tables are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-tables.html",
        "  foreign_table_catalog sql_identifier | Name of the database that the foreign table is defined in (always the current database)",
        "  foreign_table_schema sql_identifier | Name of the schema that contains the foreign table",
        "  foreign_table_name sql_identifier | Name of the foreign table",
        "  foreign_server_catalog sql_identifier | Name of the database that the foreign server is defined in (always the current database)",
        "  foreign_server_name sql_identifier | Name of the foreign server",
        "",
        "information_schema.key_column_usage | The view key_column_usage identifies all columns in the current database that are restricted by some unique, primary key, or foreign key constraint. Check constraints are not included in this view. Only those columns are shown that the current user has access to, by way of being the owner or having some privilege.\\nhttps://www.postgresql.org/docs/current/infoschema-key-column-usage.html",
        "  constraint_catalog sql_identifier | Name of the database that contains the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema that contains the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  table_catalog sql_identifier | Name of the database that contains the table that contains the column that is restricted by this constraint (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that contains the column that is restricted by this constraint",
        "  table_name sql_identifier | Name of the table that contains the column that is restricted by this constraint",
        "  column_name sql_identifier | Name of the column that is restricted by this constraint",
        "  ordinal_position cardinal_number | Ordinal position of the column within the constraint key (count starts at 1)",
        "  position_in_unique_constraint cardinal_number | For a foreign-key constraint, ordinal position of the referenced column within its unique constraint (count starts at 1); otherwise null",
        "",
        "information_schema.parameters | The view parameters contains information about the parameters (arguments) of all functions in the current database. Only those functions are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-parameters.html",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  ordinal_position cardinal_number | Ordinal position of the parameter in the argument list of the function (count starts at 1)",
        "  parameter_mode character_data | IN for input parameter, OUT for output parameter, and INOUT for input/output parameter.",
        "  is_result yes_or_no | Applies to a feature not available in PostgreSQL",
        "  as_locator yes_or_no | Applies to a feature not available in PostgreSQL",
        "  parameter_name sql_identifier | Name of the parameter, or null if the parameter has no name",
        "  data_type character_data | Data type of the parameter, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
        "  character_maximum_length cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  character_octet_length cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  collation_schema sql_identifier | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  collation_name sql_identifier | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  numeric_precision cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  numeric_precision_radix cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  numeric_scale cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  datetime_precision cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  interval_type character_data | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  interval_precision cardinal_number | Always null, since this information is not applied to parameter data types in PostgreSQL",
        "  udt_catalog sql_identifier | Name of the database that the data type of the parameter is defined in (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that the data type of the parameter is defined in",
        "  udt_name sql_identifier | Name of the data type of the parameter",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the parameter, unique among the data type descriptors pertaining to the function. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
        "  parameter_default character_data | The default expression of the parameter, or null if none or if the function is not owned by a currently enabled role.",
        "",
        "information_schema.referential_constraints | The view referential_constraints contains all referential (foreign key) constraints in the current database. Only those constraints are shown for which the current user has write access to the referencing table (by way of being the owner or having some privilege other than SELECT).\\nhttps://www.postgresql.org/docs/current/infoschema-referential-constraints.html",
        "  constraint_catalog sql_identifier | Name of the database containing the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema containing the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  unique_constraint_catalog sql_identifier | Name of the database that contains the unique or primary key constraint that the foreign key constraint references (always the current database)",
        "  unique_constraint_schema sql_identifier | Name of the schema that contains the unique or primary key constraint that the foreign key constraint references",
        "  unique_constraint_name sql_identifier | Name of the unique or primary key constraint that the foreign key constraint references",
        "  match_option character_data | Match option of the foreign key constraint: FULL, PARTIAL, or NONE.",
        "  update_rule character_data | Update rule of the foreign key constraint: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.",
        "  delete_rule character_data | Delete rule of the foreign key constraint: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.",
        "",
        "information_schema.role_column_grants | The view role_column_grants identifies all privileges granted on columns where the grantor or grantee is a currently enabled role. Further information can be found under column_privileges. The only effective difference between this view and column_privileges is that this view omits columns that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-column-grants.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  table_catalog sql_identifier | Name of the database that contains the table that contains the column (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that contains the column",
        "  table_name sql_identifier | Name of the table that contains the column",
        "  column_name sql_identifier | Name of the column",
        "  privilege_type character_data | Type of the privilege: SELECT, INSERT, UPDATE, or REFERENCES",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.role_routine_grants | The view role_routine_grants identifies all privileges granted on functions where the grantor or grantee is a currently enabled role. Further information can be found under routine_privileges. The only effective difference between this view and routine_privileges is that this view omits functions that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-routine-grants.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  privilege_type character_data | Always EXECUTE (the only privilege type for functions)",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.role_table_grants | The view role_table_grants identifies all privileges granted on tables or views where the grantor or grantee is a currently enabled role. Further information can be found under table_privileges. The only effective difference between this view and table_privileges is that this view omits tables that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-table-grants.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  table_catalog sql_identifier | Name of the database that contains the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table",
        "  table_name sql_identifier | Name of the table",
        "  privilege_type character_data | Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "  with_hierarchy yes_or_no | In the SQL standard, WITH HIERARCHY OPTION is a separate (sub-)privilege allowing certain operations on table inheritance hierarchies. In PostgreSQL, this is included in the SELECT privilege, so this column shows YES if the privilege is SELECT, else NO.",
        "",
        "information_schema.role_udt_grants | The view role_udt_grants is intended to identify USAGE privileges granted on user-defined types where the grantor or grantee is a currently enabled role. Further information can be found under udt_privileges. The only effective difference between this view and udt_privileges is that this view omits objects that have been made accessible to the current user by way of a grant to PUBLIC. Since data types do not have real privileges in PostgreSQL, but only an implicit grant to PUBLIC, this view is empty.\\nhttps://www.postgresql.org/docs/current/infoschema-role-udt-grants.html",
        "  grantor sql_identifier | The name of the role that granted the privilege",
        "  grantee sql_identifier | The name of the role that the privilege was granted to",
        "  udt_catalog sql_identifier | Name of the database containing the type (always the current database)",
        "  udt_schema sql_identifier | Name of the schema containing the type",
        "  udt_name sql_identifier | Name of the type",
        "  privilege_type character_data | Always TYPE USAGE",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.role_usage_grants | The view role_usage_grants identifies USAGE privileges granted on various kinds of objects where the grantor or grantee is a currently enabled role. Further information can be found under usage_privileges. The only effective difference between this view and usage_privileges is that this view omits objects that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-usage-grants.html",
        "  grantor sql_identifier | The name of the role that granted the privilege",
        "  grantee sql_identifier | The name of the role that the privilege was granted to",
        "  object_catalog sql_identifier | Name of the database containing the object (always the current database)",
        "  object_schema sql_identifier | Name of the schema containing the object, if applicable, else an empty string",
        "  object_name sql_identifier | Name of the object",
        "  object_type character_data | COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER or SEQUENCE",
        "  privilege_type character_data | Always USAGE",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.routine_column_usage | The view routine_column_usage is meant to identify all columns that are used by a function or procedure. This information is currently not tracked by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-column-usage.html",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  table_catalog sql_identifier | Name of the database that contains the table that is used by the function (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that is used by the function",
        "  table_name sql_identifier | Name of the table that is used by the function",
        "  column_name sql_identifier | Name of the column that is used by the function",
        "",
        "information_schema.routine_privileges | The view routine_privileges identifies all privileges granted on functions to a currently enabled role or by a currently enabled role. There is one row for each combination of function, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-privileges.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  privilege_type character_data | Always EXECUTE (the only privilege type for functions)",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.routine_routine_usage | The view routine_routine_usage is meant to identify all functions or procedures that are used by another (or the same) function or procedure, either in the body or in parameter default expressions. Currently, only functions used in parameter default expressions are tracked. An entry is included here only if the used function is owned by a currently enabled role. (There is no such restriction on the using function.)\\nhttps://www.postgresql.org/docs/current/infoschema-routine-routine-usage.html",
        "  specific_catalog sql_identifier | Name of the database containing the using function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the using function",
        "  specific_name sql_identifier | The “specific name” of the using function.",
        "  routine_catalog sql_identifier | Name of the database that contains the function that is used by the first function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema that contains the function that is used by the first function",
        "  routine_name sql_identifier | The “specific name” of the function that is used by the first function.",
        "",
        "information_schema.routine_sequence_usage | The view routine_sequence_usage is meant to identify all sequences that are used by a function or procedure, either in the body or in parameter default expressions. Currently, only sequences used in parameter default expressions are tracked. A sequence is only included if that sequence is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-sequence-usage.html",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  schema_catalog sql_identifier | Name of the database that contains the sequence that is used by the function (always the current database)",
        "  sequence_schema sql_identifier | Name of the schema that contains the sequence that is used by the function",
        "  sequence_name sql_identifier | Name of the sequence that is used by the function",
        "",
        "information_schema.routine_table_usage | The view routine_table_usage is meant to identify all tables that are used by a function or procedure. This information is currently not tracked by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-table-usage.html",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  table_catalog sql_identifier | Name of the database that contains the table that is used by the function (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that is used by the function",
        "  table_name sql_identifier | Name of the table that is used by the function",
        "",
        "information_schema.routines | The view routines contains all functions and procedures in the current database. Only those functions and procedures are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-routines.html",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. This is a name that uniquely identifies the function in the schema, even if the real name of the function is overloaded. The format of the specific name is not defined, it should only be used to compare it to other instances of specific routine names.",
        "  routine_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  routine_schema sql_identifier | Name of the schema containing the function",
        "  routine_name sql_identifier | Name of the function (might be duplicated in case of overloading)",
        "  routine_type character_data | FUNCTION for a function, PROCEDURE for a procedure",
        "  module_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  module_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  module_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  udt_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  udt_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  udt_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  data_type character_data | Return data type of the function, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in type_udt_name and associated columns). Null for a procedure.",
        "  character_maximum_length cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  character_octet_length cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Always null, since this information is not applied to return data types in PostgreSQL",
        "  collation_schema sql_identifier | Always null, since this information is not applied to return data types in PostgreSQL",
        "  collation_name sql_identifier | Always null, since this information is not applied to return data types in PostgreSQL",
        "  numeric_precision cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  numeric_precision_radix cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  numeric_scale cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  datetime_precision cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  interval_type character_data | Always null, since this information is not applied to return data types in PostgreSQL",
        "  interval_precision cardinal_number | Always null, since this information is not applied to return data types in PostgreSQL",
        "  type_udt_catalog sql_identifier | Name of the database that the return data type of the function is defined in (always the current database). Null for a procedure.",
        "  type_udt_schema sql_identifier | Name of the schema that the return data type of the function is defined in. Null for a procedure.",
        "  type_udt_name sql_identifier | Name of the return data type of the function. Null for a procedure.",
        "  scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  maximum_cardinality cardinal_number | Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
        "  dtd_identifier sql_identifier | An identifier of the data type descriptor of the return data type of this function, unique among the data type descriptors pertaining to the function. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
        "  routine_body character_data | If the function is an SQL function, then SQL, else EXTERNAL.",
        "  routine_definition character_data | The source text of the function (null if the function is not owned by a currently enabled role). (According to the SQL standard, this column is only applicable if routine_body is SQL, but in PostgreSQL it will contain whatever source text was specified when the function was created.)",
        "  external_name character_data | If this function is a C function, then the external name (link symbol) of the function; else null. (This works out to be the same value that is shown in routine_definition.)",
        "  external_language character_data | The language the function is written in",
        "  parameter_style character_data | Always GENERAL (The SQL standard defines other parameter styles, which are not available in PostgreSQL.)",
        "  is_deterministic yes_or_no | If the function is declared immutable (called deterministic in the SQL standard), then YES, else NO. (You cannot query the other volatility levels available in PostgreSQL through the information schema.)",
        "  sql_data_access character_data | Always MODIFIES, meaning that the function possibly modifies SQL data. This information is not useful for PostgreSQL.",
        "  is_null_call yes_or_no | If the function automatically returns null if any of its arguments are null, then YES, else NO. Null for a procedure.",
        "  sql_path character_data | Applies to a feature not available in PostgreSQL",
        "  schema_level_routine yes_or_no | Always YES (The opposite would be a method of a user-defined type, which is a feature not available in PostgreSQL.)",
        "  max_dynamic_result_sets cardinal_number | Applies to a feature not available in PostgreSQL",
        "  is_user_defined_cast yes_or_no | Applies to a feature not available in PostgreSQL",
        "  is_implicitly_invocable yes_or_no | Applies to a feature not available in PostgreSQL",
        "  security_type character_data | If the function runs with the privileges of the current user, then INVOKER, if the function runs with the privileges of the user who defined it, then DEFINER.",
        "  to_sql_specific_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  to_sql_specific_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  to_sql_specific_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  as_locator yes_or_no | Applies to a feature not available in PostgreSQL",
        "  created time_stamp | Applies to a feature not available in PostgreSQL",
        "  last_altered time_stamp | Applies to a feature not available in PostgreSQL",
        "  new_savepoint_level yes_or_no | Applies to a feature not available in PostgreSQL",
        "  is_udt_dependent yes_or_no | Currently always NO. The alternative YES applies to a feature not available in PostgreSQL.",
        "  result_cast_from_data_type character_data | Applies to a feature not available in PostgreSQL",
        "  result_cast_as_locator yes_or_no | Applies to a feature not available in PostgreSQL",
        "  result_cast_char_max_length cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_char_octet_length cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_char_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_char_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_char_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_collation_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_collation_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_collation_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_numeric_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_numeric_precision_radix cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_numeric_scale cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_datetime_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_interval_type character_data | Applies to a feature not available in PostgreSQL",
        "  result_cast_interval_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_type_udt_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_type_udt_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_type_udt_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_scope_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_scope_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_scope_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  result_cast_maximum_cardinality cardinal_number | Applies to a feature not available in PostgreSQL",
        "  result_cast_dtd_identifier sql_identifier | Applies to a feature not available in PostgreSQL",
        "",
        "information_schema.schemata | The view schemata contains all schemas in the current database that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-schemata.html",
        "  catalog_name sql_identifier | Name of the database that the schema is contained in (always the current database)",
        "  schema_name sql_identifier | Name of the schema",
        "  schema_owner sql_identifier | Name of the owner of the schema",
        "  default_character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  default_character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  default_character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  sql_path character_data | Applies to a feature not available in PostgreSQL",
        "",
        "information_schema.sequences | The view sequences contains all sequences defined in the current database. Only those sequences are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-sequences.html",
        "  sequence_catalog sql_identifier | Name of the database that contains the sequence (always the current database)",
        "  sequence_schema sql_identifier | Name of the schema that contains the sequence",
        "  sequence_name sql_identifier | Name of the sequence",
        "  data_type character_data | The data type of the sequence.",
        "  numeric_precision cardinal_number | This column contains the (declared or implicit) precision of the sequence data type (see above). The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.",
        "  numeric_precision_radix cardinal_number | This column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10.",
        "  numeric_scale cardinal_number | This column contains the (declared or implicit) scale of the sequence data type (see above). The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.",
        "  start_value character_data | The start value of the sequence",
        "  minimum_value character_data | The minimum value of the sequence",
        "  maximum_value character_data | The maximum value of the sequence",
        "  increment character_data | The increment of the sequence",
        "  cycle_option yes_or_no | YES if the sequence cycles, else NO",
        "",
        "information_schema.sql_features | The table sql_features contains information about which formal features defined in the SQL standard are supported by PostgreSQL. This is the same information that is presented in Appendix D. There you can also find some additional background information.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-features.html",
        "  feature_id character_data | Identifier string of the feature",
        "  feature_name character_data | Descriptive name of the feature",
        "  sub_feature_id character_data | Identifier string of the subfeature, or a zero-length string if not a subfeature",
        "  sub_feature_name character_data | Descriptive name of the subfeature, or a zero-length string if not a subfeature",
        "  is_supported yes_or_no | YES if the feature is fully supported by the current version of PostgreSQL, NO if not",
        "  is_verified_by character_data | Always null, since the PostgreSQL development group does not perform formal testing of feature conformance",
        "  comments character_data | Possibly a comment about the supported status of the feature",
        "",
        "information_schema.sql_implementation_info | The table sql_implementation_info contains information about various aspects that are left implementation-defined by the SQL standard. This information is primarily intended for use in the context of the ODBC interface; users of other interfaces will probably find this information to be of little use. For this reason, the individual implementation information items are not described here; you will find them in the description of the ODBC interface.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-implementation-info.html",
        "  implementation_info_id character_data | Identifier string of the implementation information item",
        "  implementation_info_name character_data | Descriptive name of the implementation information item",
        "  integer_value cardinal_number | Value of the implementation information item, or null if the value is contained in the column character_value",
        "  character_value character_data | Value of the implementation information item, or null if the value is contained in the column integer_value",
        "  comments character_data | Possibly a comment pertaining to the implementation information item",
        "",
        "information_schema.sql_parts | The table sql_parts contains information about which of the several parts of the SQL standard are supported by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-parts.html",
        "  feature_id character_data | An identifier string containing the number of the part",
        "  feature_name character_data | Descriptive name of the part",
        "  is_supported yes_or_no | YES if the part is fully supported by the current version of PostgreSQL, NO if not",
        "  is_verified_by character_data | Always null, since the PostgreSQL development group does not perform formal testing of feature conformance",
        "  comments character_data | Possibly a comment about the supported status of the part",
        "",
        "information_schema.sql_sizing | The table sql_sizing contains information about various size limits and maximum values in PostgreSQL. This information is primarily intended for use in the context of the ODBC interface; users of other interfaces will probably find this information to be of little use. For this reason, the individual sizing items are not described here; you will find them in the description of the ODBC interface.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-sizing.html",
        "  sizing_id cardinal_number | Identifier of the sizing item",
        "  sizing_name character_data | Descriptive name of the sizing item",
        "  supported_value cardinal_number | Value of the sizing item, or 0 if the size is unlimited or cannot be determined, or null if the features for which the sizing item is applicable are not supported",
        "  comments character_data | Possibly a comment pertaining to the sizing item",
        "",
        "information_schema.table_constraints | The view table_constraints contains all constraints belonging to tables that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-table-constraints.html",
        "  constraint_catalog sql_identifier | Name of the database that contains the constraint (always the current database)",
        "  constraint_schema sql_identifier | Name of the schema that contains the constraint",
        "  constraint_name sql_identifier | Name of the constraint",
        "  table_catalog sql_identifier | Name of the database that contains the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table",
        "  table_name sql_identifier | Name of the table",
        "  constraint_type character_data | Type of the constraint: CHECK, FOREIGN KEY, PRIMARY KEY, or UNIQUE",
        "  is_deferrable yes_or_no | YES if the constraint is deferrable, NO if not",
        "  initially_deferred yes_or_no | YES if the constraint is deferrable and initially deferred, NO if not",
        "  enforced yes_or_no | Applies to a feature not available in PostgreSQL (currently always YES)",
        "",
        "information_schema.table_privileges | The view table_privileges identifies all privileges granted on tables or views to a currently enabled role or by a currently enabled role. There is one row for each combination of table, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-table-privileges.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  table_catalog sql_identifier | Name of the database that contains the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table",
        "  table_name sql_identifier | Name of the table",
        "  privilege_type character_data | Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "  with_hierarchy yes_or_no | In the SQL standard, WITH HIERARCHY OPTION is a separate (sub-)privilege allowing certain operations on table inheritance hierarchies. In PostgreSQL, this is included in the SELECT privilege, so this column shows YES if the privilege is SELECT, else NO.",
        "",
        "information_schema.tables | The view tables contains all tables and views defined in the current database. Only those tables and views are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-tables.html",
        "  table_catalog sql_identifier | Name of the database that contains the table (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table",
        "  table_name sql_identifier | Name of the table",
        "  table_type character_data | Type of the table: BASE TABLE for a persistent base table (the normal table type), VIEW for a view, FOREIGN for a foreign table, or LOCAL TEMPORARY for a temporary table",
        "  self_referencing_column_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  reference_generation character_data | Applies to a feature not available in PostgreSQL",
        "  user_defined_type_catalog sql_identifier | If the table is a typed table, the name of the database that contains the underlying data type (always the current database), else null.",
        "  user_defined_type_schema sql_identifier | If the table is a typed table, the name of the schema that contains the underlying data type, else null.",
        "  user_defined_type_name sql_identifier | If the table is a typed table, the name of the underlying data type, else null.",
        "  is_insertable_into yes_or_no | YES if the table is insertable into, NO if not (Base tables are always insertable into, views not necessarily.)",
        "  is_typed yes_or_no | YES if the table is a typed table, NO if not",
        "  commit_action character_data | Not yet implemented",
        "",
        "information_schema.transforms | The view transforms contains information about the transforms defined in the current database. More precisely, it contains a row for each function contained in a transform (the “from SQL” or “to SQL” function).\\nhttps://www.postgresql.org/docs/current/infoschema-transforms.html",
        "  udt_catalog sql_identifier | Name of the database that contains the type the transform is for (always the current database)",
        "  udt_schema sql_identifier | Name of the schema that contains the type the transform is for",
        "  udt_name sql_identifier | Name of the type the transform is for",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "  group_name sql_identifier | The SQL standard allows defining transforms in “groups”, and selecting a group at run time. PostgreSQL does not support this. Instead, transforms are specific to a language. As a compromise, this field contains the language the transform is for.",
        "  transform_type character_data | FROM SQL or TO SQL",
        "",
        "information_schema.triggered_update_columns | For triggers in the current database that specify a column list (like UPDATE OF column1, column2), the view triggered_update_columns identifies these columns. Triggers that do not specify a column list are not included in this view. Only those columns are shown that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-triggered-update-columns.html",
        "  trigger_catalog sql_identifier | Name of the database that contains the trigger (always the current database)",
        "  trigger_schema sql_identifier | Name of the schema that contains the trigger",
        "  trigger_name sql_identifier | Name of the trigger",
        "  event_object_catalog sql_identifier | Name of the database that contains the table that the trigger is defined on (always the current database)",
        "  event_object_schema sql_identifier | Name of the schema that contains the table that the trigger is defined on",
        "  event_object_table sql_identifier | Name of the table that the trigger is defined on",
        "  event_object_column sql_identifier | Name of the column that the trigger is defined on",
        "",
        "information_schema.triggers | The view triggers contains all triggers defined in the current database on tables and views that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-triggers.html",
        "  trigger_catalog sql_identifier | Name of the database that contains the trigger (always the current database)",
        "  trigger_schema sql_identifier | Name of the schema that contains the trigger",
        "  trigger_name sql_identifier | Name of the trigger",
        "  event_manipulation character_data | Event that fires the trigger (INSERT, UPDATE, or DELETE)",
        "  event_object_catalog sql_identifier | Name of the database that contains the table that the trigger is defined on (always the current database)",
        "  event_object_schema sql_identifier | Name of the schema that contains the table that the trigger is defined on",
        "  event_object_table sql_identifier | Name of the table that the trigger is defined on",
        "  action_order cardinal_number | Firing order among triggers on the same table having the same event_manipulation, action_timing, and action_orientation. In PostgreSQL, triggers are fired in name order, so this column reflects that.",
        "  action_condition character_data | WHEN condition of the trigger, null if none (also null if the table is not owned by a currently enabled role)",
        "  action_statement character_data | Statement that is executed by the trigger (currently always EXECUTE FUNCTION function(...))",
        "  action_orientation character_data | Identifies whether the trigger fires once for each processed row or once for each statement (ROW or STATEMENT)",
        "  action_timing character_data | Time at which the trigger fires (BEFORE, AFTER, or INSTEAD OF)",
        "  action_reference_old_table sql_identifier | Name of the “old” transition table, or null if none",
        "  action_reference_new_table sql_identifier | Name of the “new” transition table, or null if none",
        "  action_reference_old_row sql_identifier | Applies to a feature not available in PostgreSQL",
        "  action_reference_new_row sql_identifier | Applies to a feature not available in PostgreSQL",
        "  created time_stamp | Applies to a feature not available in PostgreSQL",
        "",
        "information_schema.udt_privileges | The view udt_privileges identifies USAGE privileges granted on user-defined types to a currently enabled role or by a currently enabled role. There is one row for each combination of type, grantor, and grantee. This view shows only composite types (see under Section 37.60 for why); see Section 37.59 for domain privileges.\\nhttps://www.postgresql.org/docs/current/infoschema-udt-privileges.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  udt_catalog sql_identifier | Name of the database containing the type (always the current database)",
        "  udt_schema sql_identifier | Name of the schema containing the type",
        "  udt_name sql_identifier | Name of the type",
        "  privilege_type character_data | Always TYPE USAGE",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.usage_privileges | The view usage_privileges identifies USAGE privileges granted on various kinds of objects to a currently enabled role or by a currently enabled role. In PostgreSQL, this currently applies to collations, domains, foreign-data wrappers, foreign servers, and sequences. There is one row for each combination of object, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-usage-privileges.html",
        "  grantor sql_identifier | Name of the role that granted the privilege",
        "  grantee sql_identifier | Name of the role that the privilege was granted to",
        "  object_catalog sql_identifier | Name of the database containing the object (always the current database)",
        "  object_schema sql_identifier | Name of the schema containing the object, if applicable, else an empty string",
        "  object_name sql_identifier | Name of the object",
        "  object_type character_data | COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER or SEQUENCE",
        "  privilege_type character_data | Always USAGE",
        "  is_grantable yes_or_no | YES if the privilege is grantable, NO if not",
        "",
        "information_schema.user_defined_types | The view user_defined_types currently contains all composite types defined in the current database. Only those types are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-defined-types.html",
        "  user_defined_type_catalog sql_identifier | Name of the database that contains the type (always the current database)",
        "  user_defined_type_schema sql_identifier | Name of the schema that contains the type",
        "  user_defined_type_name sql_identifier | Name of the type",
        "  user_defined_type_category character_data | Currently always STRUCTURED",
        "  is_instantiable yes_or_no | Applies to a feature not available in PostgreSQL",
        "  is_final yes_or_no | Applies to a feature not available in PostgreSQL",
        "  ordering_form character_data | Applies to a feature not available in PostgreSQL",
        "  ordering_category character_data | Applies to a feature not available in PostgreSQL",
        "  ordering_routine_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  ordering_routine_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  ordering_routine_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  reference_type character_data | Applies to a feature not available in PostgreSQL",
        "  data_type character_data | Applies to a feature not available in PostgreSQL",
        "  character_maximum_length cardinal_number | Applies to a feature not available in PostgreSQL",
        "  character_octet_length cardinal_number | Applies to a feature not available in PostgreSQL",
        "  character_set_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  character_set_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_catalog sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_schema sql_identifier | Applies to a feature not available in PostgreSQL",
        "  collation_name sql_identifier | Applies to a feature not available in PostgreSQL",
        "  numeric_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  numeric_precision_radix cardinal_number | Applies to a feature not available in PostgreSQL",
        "  numeric_scale cardinal_number | Applies to a feature not available in PostgreSQL",
        "  datetime_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  interval_type character_data | Applies to a feature not available in PostgreSQL",
        "  interval_precision cardinal_number | Applies to a feature not available in PostgreSQL",
        "  source_dtd_identifier sql_identifier | Applies to a feature not available in PostgreSQL",
        "  ref_dtd_identifier sql_identifier | Applies to a feature not available in PostgreSQL",
        "",
        "information_schema.user_mapping_options | The view user_mapping_options contains all the options defined for user mappings in the current database. Only those user mappings are shown where the current user has access to the corresponding foreign server (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-mapping-options.html",
        "  authorization_identifier sql_identifier | Name of the user being mapped, or PUBLIC if the mapping is public",
        "  foreign_server_catalog sql_identifier | Name of the database that the foreign server used by this mapping is defined in (always the current database)",
        "  foreign_server_name sql_identifier | Name of the foreign server used by this mapping",
        "  option_name sql_identifier | Name of an option",
        "  option_value character_data | Value of the option. This column will show as null unless the current user is the user being mapped, or the mapping is for PUBLIC and the current user is the server owner, or the current user is a superuser. The intent is to protect password information stored as user mapping option.",
        "",
        "information_schema.user_mappings | The view user_mappings contains all user mappings defined in the current database. Only those user mappings are shown where the current user has access to the corresponding foreign server (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-mappings.html",
        "  authorization_identifier sql_identifier | Name of the user being mapped, or PUBLIC if the mapping is public",
        "  foreign_server_catalog sql_identifier | Name of the database that the foreign server used by this mapping is defined in (always the current database)",
        "  foreign_server_name sql_identifier | Name of the foreign server used by this mapping",
        "",
        "information_schema.view_column_usage | The view view_column_usage identifies all columns that are used in the query expression of a view (the SELECT statement that defines the view). A column is only included if the table that contains the column is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-column-usage.html",
        "  view_catalog sql_identifier | Name of the database that contains the view (always the current database)",
        "  view_schema sql_identifier | Name of the schema that contains the view",
        "  view_name sql_identifier | Name of the view",
        "  table_catalog sql_identifier | Name of the database that contains the table that contains the column that is used by the view (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that contains the column that is used by the view",
        "  table_name sql_identifier | Name of the table that contains the column that is used by the view",
        "  column_name sql_identifier | Name of the column that is used by the view",
        "",
        "information_schema.view_routine_usage | The view view_routine_usage identifies all routines (functions and procedures) that are used in the query expression of a view (the SELECT statement that defines the view). A routine is only included if that routine is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-routine-usage.html",
        "  table_catalog sql_identifier | Name of the database containing the view (always the current database)",
        "  table_schema sql_identifier | Name of the schema containing the view",
        "  table_name sql_identifier | Name of the view",
        "  specific_catalog sql_identifier | Name of the database containing the function (always the current database)",
        "  specific_schema sql_identifier | Name of the schema containing the function",
        "  specific_name sql_identifier | The “specific name” of the function. See Section 37.45 for more information.",
        "",
        "information_schema.view_table_usage | The view view_table_usage identifies all tables that are used in the query expression of a view (the SELECT statement that defines the view). A table is only included if that table is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-table-usage.html",
        "  view_catalog sql_identifier | Name of the database that contains the view (always the current database)",
        "  view_schema sql_identifier | Name of the schema that contains the view",
        "  view_name sql_identifier | Name of the view",
        "  table_catalog sql_identifier | Name of the database that contains the table that is used by the view (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the table that is used by the view",
        "  table_name sql_identifier | Name of the table that is used by the view",
        "",
        "information_schema.views | The view views contains all views defined in the current database. Only those views are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-views.html",
        "  table_catalog sql_identifier | Name of the database that contains the view (always the current database)",
        "  table_schema sql_identifier | Name of the schema that contains the view",
        "  table_name sql_identifier | Name of the view",
        "  view_definition character_data | Query expression defining the view (null if the view is not owned by a currently enabled role)",
        "  check_option character_data | CASCADED or LOCAL if the view has a CHECK OPTION defined on it, NONE if not",
        "  is_updatable yes_or_no | YES if the view is updatable (allows UPDATE and DELETE), NO if not",
        "  is_insertable_into yes_or_no | YES if the view is insertable into (allows INSERT), NO if not",
        "  is_trigger_updatable yes_or_no | YES if the view has an INSTEAD OF UPDATE trigger defined on it, NO if not",
        "  is_trigger_deletable yes_or_no | YES if the view has an INSTEAD OF DELETE trigger defined on it, NO if not",
        "  is_trigger_insertable_into yes_or_no | YES if the view has an INSTEAD OF INSERT trigger defined on it, NO if not",
        ""
      ],
      "tables": [
        {
          "schema": "information_schema",
          "table": "administrable_role_authorizations",
          "columns": [
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role to which this role membership was granted (can be the current user, or a different role in case of nested role memberships)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "role_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of a role",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "Always YES",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view administrable_role_authorizations identifies all roles that the current user has the admin option for.\\nhttps://www.postgresql.org/docs/current/infoschema-administrable-role-authorizations.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "applicable_roles",
          "columns": [
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role to which this role membership was granted (can be the current user, or a different role in case of nested role memberships)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "role_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of a role",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the grantee has the admin option on the role, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view applicable_roles identifies all roles whose privileges the current user can use. This means there is some chain of role grants from the current user to the role in question. The current user itself is also an applicable role. The set of applicable roles is generally used for permission checking.  \\nhttps://www.postgresql.org/docs/current/infoschema-applicable-roles.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "attributes",
          "columns": [
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the data type (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the data type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the data type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "attribute_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the attribute",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "cardinal_number",
              "comment": {
                "text": "Ordinal position of the attribute within the data type (count starts at 1)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "attribute_default",
              "type": "character_data",
              "comment": {
                "text": "Default expression of the attribute",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_nullable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the attribute is possibly nullable, NO if it is known not nullable.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Data type of the attribute, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in attribute_udt_name and associated columns).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation of the attribute (always the current database), null if default or the data type of the attribute is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation of the attribute, null if default or the data type of the attribute is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the collation of the attribute, null if default or the data type of the attribute is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a numeric type, this column contains the (declared or implicit) precision of the type for this attribute. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies an exact numeric type, this column contains the (declared or implicit) scale of the type for this attribute. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this attribute, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "If data_type identifies an interval type, this column contains the specification which fields the intervals include for this attribute, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type attributes)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "attribute_udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the attribute data type is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "attribute_udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the attribute data type is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "attribute_udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the attribute data type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the column, unique among the data type descriptors pertaining to the table. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_derived_reference_attribute",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view attributes contains information about the attributes of composite data types defined in the database. (Note that the view does not give information about table columns, which are sometimes called attributes in PostgreSQL contexts.) Only those attributes are shown that the current user has access to (by way of being the owner of or having some privilege on the type).\\nhttps://www.postgresql.org/docs/current/infoschema-attributes.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "character_sets",
          "columns": [
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Character sets are currently not implemented as schema objects, so this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Character sets are currently not implemented as schema objects, so this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the character set, currently implemented as showing the name of the database encoding",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_repertoire",
              "type": "sql_identifier",
              "comment": {
                "text": "Character repertoire, showing UCS if the encoding is UTF8, else just the encoding name",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "form_of_use",
              "type": "sql_identifier",
              "comment": {
                "text": "Character encoding form, same as the database encoding",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_collate_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the default collation (always the current database, if any collation is identified)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_collate_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the default collation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_collate_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the default collation. The default collation is identified as the collation that matches the COLLATE and CTYPE settings of the current database. If there is no such collation, then this column and the associated schema and catalog columns are null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view character_sets identifies the character sets available in the current database. Since PostgreSQL does not support multiple character sets within one database, this view only shows one, which is the database encoding.\\nhttps://www.postgresql.org/docs/current/infoschema-character-sets.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "check_constraint_routine_usage",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view check_constraint_routine_usage identifies routines (functions and procedures) that are used by a check constraint. Only those routines are shown that are owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-check-constraint-routine-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "check_constraints",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "check_clause",
              "type": "character_data",
              "comment": {
                "text": "The check expression of the check constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view check_constraints contains all check constraints, either defined on a table or on a domain, that are owned by a currently enabled role. (The owner of the table or domain is the owner of the constraint.)\\nhttps://www.postgresql.org/docs/current/infoschema-check-constraints.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "collation_character_set_applicability",
          "columns": [
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the default collation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Character sets are currently not implemented as schema objects, so this column is null",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Character sets are currently not implemented as schema objects, so this column is null",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the character set",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view collation_character_set_applicability identifies which character set the available collations are applicable to. In PostgreSQL, there is only one character set per database (see explanation in Section 37.7), so this view does not provide much useful information.\\nhttps://www.postgresql.org/docs/current/infoschema-collation-character-set-applicab.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "collations",
          "columns": [
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the default collation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "pad_attribute",
              "type": "character_data",
              "comment": {
                "text": "Always NO PAD (The alternative PAD SPACE is not supported by PostgreSQL.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view collations contains the collations available in the current database.\\nhttps://www.postgresql.org/docs/current/infoschema-collations.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_column_usage",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the base column that a generated column depends on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dependent_column",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the generated column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view column_column_usage identifies all generated columns that depend on another base column in the same table. Only tables owned by a currently enabled role are included.\\nhttps://www.postgresql.org/docs/current/infoschema-column-column-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_domain_usage",
          "columns": [
            {
              "name": "domain_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the domain (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view column_domain_usage identifies all columns (of a table or a view) that make use of some domain defined in the current database and owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-column-domain-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_options",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the foreign table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of an option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view column_options contains all the options defined for foreign table columns in the current database. Only those foreign table columns are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-column-options.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_privileges",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that contains the column (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that contains the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that contains the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the privilege: SELECT, INSERT, UPDATE, or REFERENCES",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view column_privileges identifies all privileges granted on columns to a currently enabled role or by a currently enabled role. There is one row for each combination of column, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-column-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "column_udt_usage",
          "columns": [
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the column data type (the underlying type of the domain, if applicable) is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the column data type (the underlying type of the domain, if applicable) is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column data type (the underlying type of the domain, if applicable)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view column_udt_usage identifies all columns that use data types owned by a currently enabled role. Note that in PostgreSQL, built-in data types behave like user-defined types, so they are included here as well. See also Section 37.17 for details.\\nhttps://www.postgresql.org/docs/current/infoschema-column-udt-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "columns",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "cardinal_number",
              "comment": {
                "text": "Ordinal position of the column within the table (count starts at 1)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_default",
              "type": "character_data",
              "comment": {
                "text": "Default expression of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_nullable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the column is possibly nullable, NO if it is known not nullable. A not-null constraint is one way a column can be known not nullable, but there can be others.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Data type of the column, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns). If the column is based on a domain, this column refers to the type underlying the domain (and the domain is identified in domain_name and associated columns).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a numeric type, this column contains the (declared or implicit) precision of the type for this column. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies an exact numeric type, this column contains the (declared or implicit) scale of the type for this column. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this column, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "If data_type identifies an interval type, this column contains the specification which fields the intervals include for this column, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type columns)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation of the column (always the current database), null if default or the data type of the column is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation of the column, null if default or the data type of the column is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the collation of the column, null if default or the data type of the column is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "If the column has a domain type, the name of the database that the domain is defined in (always the current database), else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "If the column has a domain type, the name of the schema that the domain is defined in, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "sql_identifier",
              "comment": {
                "text": "If the column has a domain type, the name of the domain, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the column data type (the underlying type of the domain, if applicable) is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the column data type (the underlying type of the domain, if applicable) is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column data type (the underlying type of the domain, if applicable)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the column, unique among the data type descriptors pertaining to the table. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_self_referencing",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_identity",
              "type": "yes_or_no",
              "comment": {
                "text": "If the column is an identity column, then YES, else NO.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_generation",
              "type": "character_data",
              "comment": {
                "text": "If the column is an identity column, then ALWAYS or BY DEFAULT, reflecting the definition of the column.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_start",
              "type": "character_data",
              "comment": {
                "text": "If the column is an identity column, then the start value of the internal sequence, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_increment",
              "type": "character_data",
              "comment": {
                "text": "If the column is an identity column, then the increment of the internal sequence, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_maximum",
              "type": "character_data",
              "comment": {
                "text": "If the column is an identity column, then the maximum value of the internal sequence, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_minimum",
              "type": "character_data",
              "comment": {
                "text": "If the column is an identity column, then the minimum value of the internal sequence, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "identity_cycle",
              "type": "yes_or_no",
              "comment": {
                "text": "If the column is an identity column, then YES if the internal sequence cycles or NO if it does not; otherwise null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_generated",
              "type": "character_data",
              "comment": {
                "text": "If the column is a generated column, then ALWAYS, else NEVER.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "generation_expression",
              "type": "character_data",
              "comment": {
                "text": "If the column is a generated column, then the generation expression, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_updatable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the column is updatable, NO if not (Columns in base tables are always updatable, columns in views not necessarily)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view columns contains information about all table columns (or view columns) in the database. System columns (ctid, etc.) are not included. Only those columns are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-columns.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "constraint_column_usage",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that contains the column that is used by some constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that contains the column that is used by some constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that contains the column that is used by some constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column that is used by some constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view constraint_column_usage identifies all columns in the current database that are used by some constraint. Only those columns are shown that are contained in a table owned by a currently enabled role. For a check constraint, this view identifies the columns that are used in the check expression. For a foreign key constraint, this view identifies the columns that the foreign key references. For a unique or primary key constraint, this view identifies the constrained columns.\\nhttps://www.postgresql.org/docs/current/infoschema-constraint-column-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "constraint_table_usage",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that is used by some constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that is used by some constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that is used by some constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view constraint_table_usage identifies all tables in the current database that are used by some constraint and are owned by a currently enabled role. (This is different from the view table_constraints, which identifies all table constraints along with the table they are defined on.) For a foreign key constraint, this view identifies the table that the foreign key references. For a unique or primary key constraint, this view simply identifies the table the constraint belongs to. Check constraints and not-null constraints are not included in this view.\\nhttps://www.postgresql.org/docs/current/infoschema-constraint-table-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "data_type_privileges",
          "columns": [
            {
              "name": "object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the described object (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the described object",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the described object",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_type",
              "type": "character_data",
              "comment": {
                "text": "The type of the described object: one of TABLE (the data type descriptor pertains to a column of that table), DOMAIN (the data type descriptors pertains to that domain), ROUTINE (the data type descriptor pertains to a parameter or the return data type of that function).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "The identifier of the data type descriptor, which is unique among the data type descriptors for that same object.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view data_type_privileges identifies all data type descriptors that the current user has access to, by way of being the owner of the described object or having some privilege for it. A data type descriptor is generated whenever a data type is used in the definition of a table column, a domain, or a function (as parameter or return type) and stores some information about how the data type is used in that instance (for example, the declared maximum length, if applicable). Each data type descriptor is assigned an arbitrary identifier that is unique among the data type descriptor identifiers assigned for one object (table, domain, function). This view is probably not useful for applications, but it is used to define some other views in the information schema.\\nhttps://www.postgresql.org/docs/current/infoschema-data-type-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domain_constraints",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the domain (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_deferrable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the constraint is deferrable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "initially_deferred",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the constraint is deferrable and initially deferred, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view domain_constraints contains all constraints belonging to domains defined in the current database. Only those domains are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-domain-constraints.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domain_udt_usage",
          "columns": [
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the domain data type is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the domain data type is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain data type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the domain (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view domain_udt_usage identifies all domains that are based on data types owned by a currently enabled role. Note that in PostgreSQL, built-in data types behave like user-defined types, so they are included here as well.\\nhttps://www.postgresql.org/docs/current/infoschema-domain-udt-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "domains",
          "columns": [
            {
              "name": "domain_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the domain (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Data type of the domain, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If the domain has a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "If the domain has a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. The maximum octet length depends on the declared character maximum length (see above) and the server encoding.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation of the domain (always the current database), null if default or the data type of the domain is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation of the domain, null if default or the data type of the domain is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the collation of the domain, null if default or the data type of the domain is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If the domain has a numeric type, this column contains the (declared or implicit) precision of the type for this domain. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "If the domain has a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "If the domain has an exact numeric type, this column contains the (declared or implicit) scale of the type for this domain. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this domain, that is, the number of decimal digits maintained following the decimal point in the seconds value. For all other data types, this column is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "If data_type identifies an interval type, this column contains the specification which fields the intervals include for this domain, e.g., YEAR TO MONTH, DAY TO SECOND, etc. If no field restrictions were specified (that is, the interval accepts all fields), and for all other data types, this field is null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL (see datetime_precision for the fractional seconds precision of interval type domains)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_default",
              "type": "character_data",
              "comment": {
                "text": "Default expression of the domain",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the domain data type is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the domain data type is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the domain data type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the domain, unique among the data type descriptors pertaining to the domain (which is trivial, because a domain only contains one data type descriptor). This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view domains contains all domains defined in the current database. Only those domains are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-domains.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "element_types",
          "columns": [
            {
              "name": "object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the object that uses the array being described (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the object that uses the array being described",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the object that uses the array being described",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_type",
              "type": "character_data",
              "comment": {
                "text": "The type of the object that uses the array being described: one of TABLE (the array is used by a column of that table), USER-DEFINED TYPE (the array is used by an attribute of that composite type), DOMAIN (the array is used by that domain), ROUTINE (the array is used by a parameter or the return data type of that function).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collection_type_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "The identifier of the data type descriptor of the array being described. Use this to join with the dtd_identifier columns of other information schema views.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Data type of the array elements, if it is a built-in type, else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the collation of the element type (always the current database), null if default or the data type of the element is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the collation of the element type, null if default or the data type of the element is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the collation of the element type, null if default or the data type of the element is not collatable",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to array element data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "domain_default",
              "type": "character_data",
              "comment": {
                "text": "Not yet implemented",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the data type of the elements is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the data type of the elements is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the data type of the elements",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the element. This is currently not useful.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view element_types contains the data type descriptors of the elements of arrays. When a table column, composite-type attribute, domain, function parameter, or function return value is defined to be of an array type, the respective information schema view only contains ARRAY in the column data_type. To obtain information on the element type of the array, you can join the respective view with this view. For example, to show the columns of a table with data types and array element types, if applicable, you could do:\\nhttps://www.postgresql.org/docs/current/infoschema-element-types.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "enabled_roles",
          "columns": [
            {
              "name": "role_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of a role",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view enabled_roles identifies the currently “enabled roles”. The enabled roles are recursively defined as the current user together with all roles that have been granted to the enabled roles with automatic inheritance. In other words, these are all roles that the current user has direct or indirect, automatically inheriting membership in.  \\nhttps://www.postgresql.org/docs/current/infoschema-enabled-roles.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_data_wrapper_options",
          "columns": [
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign-data wrapper is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign-data wrapper",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of an option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_data_wrapper_options contains all the options defined for foreign-data wrappers in the current database. Only those foreign-data wrappers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-data-wrapper-options.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_data_wrappers",
          "columns": [
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the foreign-data wrapper (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign-data wrapper",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the owner of the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "library_name",
              "type": "character_data",
              "comment": {
                "text": "File name of the library that implementing this foreign-data wrapper",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_language",
              "type": "character_data",
              "comment": {
                "text": "Language used to implement this foreign-data wrapper",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_data_wrappers contains all foreign-data wrappers defined in the current database. Only those foreign-data wrappers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-data-wrappers.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_server_options",
          "columns": [
            {
              "name": "foreign_server_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign server is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of an option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_server_options contains all the options defined for foreign servers in the current database. Only those foreign servers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-server-options.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_servers",
          "columns": [
            {
              "name": "foreign_server_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign server is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the foreign-data wrapper used by the foreign server (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_data_wrapper_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign-data wrapper used by the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_type",
              "type": "character_data",
              "comment": {
                "text": "Foreign server type information, if specified upon creation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_version",
              "type": "character_data",
              "comment": {
                "text": "Foreign server version information, if specified upon creation",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "authorization_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the owner of the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_servers contains all foreign servers defined in the current database. Only those foreign servers are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-servers.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_table_options",
          "columns": [
            {
              "name": "foreign_table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the foreign table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of an option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_table_options contains all the options defined for foreign tables in the current database. Only those foreign tables are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-table-options.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "foreign_tables",
          "columns": [
            {
              "name": "foreign_table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign table is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign server is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign server",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view foreign_tables contains all foreign tables defined in the current database. Only those foreign tables are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-foreign-tables.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "information_schema_catalog_name",
          "columns": [
            {
              "name": "catalog_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains this information schema",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "information_schema_catalog_name is a table that always contains one row and one column containing the name of the current database (current catalog, in SQL terminology).\\nhttps://www.postgresql.org/docs/current/infoschema-information-schema-catalog-name.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "key_column_usage",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that contains the column that is restricted by this constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that contains the column that is restricted by this constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that contains the column that is restricted by this constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column that is restricted by this constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "cardinal_number",
              "comment": {
                "text": "Ordinal position of the column within the constraint key (count starts at 1)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "position_in_unique_constraint",
              "type": "cardinal_number",
              "comment": {
                "text": "For a foreign-key constraint, ordinal position of the referenced column within its unique constraint (count starts at 1); otherwise null",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view key_column_usage identifies all columns in the current database that are restricted by some unique, primary key, or foreign key constraint. Check constraints are not included in this view. Only those columns are shown that the current user has access to, by way of being the owner or having some privilege.\\nhttps://www.postgresql.org/docs/current/infoschema-key-column-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "parameters",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordinal_position",
              "type": "cardinal_number",
              "comment": {
                "text": "Ordinal position of the parameter in the argument list of the function (count starts at 1)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "parameter_mode",
              "type": "character_data",
              "comment": {
                "text": "IN for input parameter, OUT for output parameter, and INOUT for input/output parameter.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_result",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "as_locator",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "parameter_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the parameter, or null if the parameter has no name",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Data type of the parameter, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns).",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to parameter data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the data type of the parameter is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the data type of the parameter is defined in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the data type of the parameter",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the parameter, unique among the data type descriptors pertaining to the function. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "parameter_default",
              "type": "character_data",
              "comment": {
                "text": "The default expression of the parameter, or null if none or if the function is not owned by a currently enabled role.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view parameters contains information about the parameters (arguments) of all functions in the current database. Only those functions are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-parameters.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "referential_constraints",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "unique_constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the unique or primary key constraint that the foreign key constraint references (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "unique_constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the unique or primary key constraint that the foreign key constraint references",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "unique_constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the unique or primary key constraint that the foreign key constraint references",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "match_option",
              "type": "character_data",
              "comment": {
                "text": "Match option of the foreign key constraint: FULL, PARTIAL, or NONE.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "update_rule",
              "type": "character_data",
              "comment": {
                "text": "Update rule of the foreign key constraint: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "delete_rule",
              "type": "character_data",
              "comment": {
                "text": "Delete rule of the foreign key constraint: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view referential_constraints contains all referential (foreign key) constraints in the current database. Only those constraints are shown for which the current user has write access to the referencing table (by way of being the owner or having some privilege other than SELECT).\\nhttps://www.postgresql.org/docs/current/infoschema-referential-constraints.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_column_grants",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that contains the column (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that contains the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that contains the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the privilege: SELECT, INSERT, UPDATE, or REFERENCES",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view role_column_grants identifies all privileges granted on columns where the grantor or grantee is a currently enabled role. Further information can be found under column_privileges. The only effective difference between this view and column_privileges is that this view omits columns that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-column-grants.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_routine_grants",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always EXECUTE (the only privilege type for functions)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view role_routine_grants identifies all privileges granted on functions where the grantor or grantee is a currently enabled role. Further information can be found under routine_privileges. The only effective difference between this view and routine_privileges is that this view omits functions that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-routine-grants.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_table_grants",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "with_hierarchy",
              "type": "yes_or_no",
              "comment": {
                "text": "In the SQL standard, WITH HIERARCHY OPTION is a separate (sub-)privilege allowing certain operations on table inheritance hierarchies. In PostgreSQL, this is included in the SELECT privilege, so this column shows YES if the privilege is SELECT, else NO.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view role_table_grants identifies all privileges granted on tables or views where the grantor or grantee is a currently enabled role. Further information can be found under table_privileges. The only effective difference between this view and table_privileges is that this view omits tables that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-table-grants.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_udt_grants",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "The name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "The name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the type (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always TYPE USAGE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view role_udt_grants is intended to identify USAGE privileges granted on user-defined types where the grantor or grantee is a currently enabled role. Further information can be found under udt_privileges. The only effective difference between this view and udt_privileges is that this view omits objects that have been made accessible to the current user by way of a grant to PUBLIC. Since data types do not have real privileges in PostgreSQL, but only an implicit grant to PUBLIC, this view is empty.\\nhttps://www.postgresql.org/docs/current/infoschema-role-udt-grants.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "role_usage_grants",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "The name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "The name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the object (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the object, if applicable, else an empty string",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the object",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_type",
              "type": "character_data",
              "comment": {
                "text": "COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER or SEQUENCE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always USAGE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view role_usage_grants identifies USAGE privileges granted on various kinds of objects where the grantor or grantee is a currently enabled role. Further information can be found under usage_privileges. The only effective difference between this view and usage_privileges is that this view omits objects that have been made accessible to the current user by way of a grant to PUBLIC.\\nhttps://www.postgresql.org/docs/current/infoschema-role-usage-grants.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_column_usage",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that is used by the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routine_column_usage is meant to identify all columns that are used by a function or procedure. This information is currently not tracked by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-column-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_privileges",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always EXECUTE (the only privilege type for functions)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routine_privileges identifies all privileges granted on functions to a currently enabled role or by a currently enabled role. There is one row for each combination of function, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_routine_usage",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the using function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the using function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the using function.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the function that is used by the first function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the function that is used by the first function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function that is used by the first function.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routine_routine_usage is meant to identify all functions or procedures that are used by another (or the same) function or procedure, either in the body or in parameter default expressions. Currently, only functions used in parameter default expressions are tracked. An entry is included here only if the used function is owned by a currently enabled role. (There is no such restriction on the using function.)\\nhttps://www.postgresql.org/docs/current/infoschema-routine-routine-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_sequence_usage",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "schema_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the sequence that is used by the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequence_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the sequence that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequence_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the sequence that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routine_sequence_usage is meant to identify all sequences that are used by a function or procedure, either in the body or in parameter default expressions. Currently, only sequences used in parameter default expressions are tracked. A sequence is only included if that sequence is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-sequence-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routine_table_usage",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that is used by the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that is used by the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routine_table_usage is meant to identify all tables that are used by a function or procedure. This information is currently not tracked by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-routine-table-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "routines",
          "columns": [
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. This is a name that uniquely identifies the function in the schema, even if the real name of the function is overloaded. The format of the specific name is not defined, it should only be used to compare it to other instances of specific routine names.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the function (might be duplicated in case of overloading)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_type",
              "type": "character_data",
              "comment": {
                "text": "FUNCTION for a function, PROCEDURE for a procedure",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "module_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "module_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "module_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Return data type of the function, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in type_udt_name and associated columns). Null for a procedure.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, since this information is not applied to return data types in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "type_udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the return data type of the function is defined in (always the current database). Null for a procedure.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "type_udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that the return data type of the function is defined in. Null for a procedure.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "type_udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the return data type of the function. Null for a procedure.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Always null, because arrays always have unlimited maximum cardinality in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "An identifier of the data type descriptor of the return data type of this function, unique among the data type descriptors pertaining to the function. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_body",
              "type": "character_data",
              "comment": {
                "text": "If the function is an SQL function, then SQL, else EXTERNAL.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "routine_definition",
              "type": "character_data",
              "comment": {
                "text": "The source text of the function (null if the function is not owned by a currently enabled role). (According to the SQL standard, this column is only applicable if routine_body is SQL, but in PostgreSQL it will contain whatever source text was specified when the function was created.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "external_name",
              "type": "character_data",
              "comment": {
                "text": "If this function is a C function, then the external name (link symbol) of the function; else null. (This works out to be the same value that is shown in routine_definition.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "external_language",
              "type": "character_data",
              "comment": {
                "text": "The language the function is written in",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "parameter_style",
              "type": "character_data",
              "comment": {
                "text": "Always GENERAL (The SQL standard defines other parameter styles, which are not available in PostgreSQL.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_deterministic",
              "type": "yes_or_no",
              "comment": {
                "text": "If the function is declared immutable (called deterministic in the SQL standard), then YES, else NO. (You cannot query the other volatility levels available in PostgreSQL through the information schema.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sql_data_access",
              "type": "character_data",
              "comment": {
                "text": "Always MODIFIES, meaning that the function possibly modifies SQL data. This information is not useful for PostgreSQL.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_null_call",
              "type": "yes_or_no",
              "comment": {
                "text": "If the function automatically returns null if any of its arguments are null, then YES, else NO. Null for a procedure.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sql_path",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "schema_level_routine",
              "type": "yes_or_no",
              "comment": {
                "text": "Always YES (The opposite would be a method of a user-defined type, which is a feature not available in PostgreSQL.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "max_dynamic_result_sets",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_user_defined_cast",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_implicitly_invocable",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "security_type",
              "type": "character_data",
              "comment": {
                "text": "If the function runs with the privileges of the current user, then INVOKER, if the function runs with the privileges of the user who defined it, then DEFINER.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "to_sql_specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "to_sql_specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "to_sql_specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "as_locator",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "created",
              "type": "time_stamp",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "last_altered",
              "type": "time_stamp",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "new_savepoint_level",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_udt_dependent",
              "type": "yes_or_no",
              "comment": {
                "text": "Currently always NO. The alternative YES applies to a feature not available in PostgreSQL.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_from_data_type",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_as_locator",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_char_max_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_char_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_char_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_char_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_char_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_interval_type",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_type_udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_type_udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_type_udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_scope_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_scope_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_scope_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_maximum_cardinality",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "result_cast_dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view routines contains all functions and procedures in the current database. Only those functions and procedures are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-routines.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "schemata",
          "columns": [
            {
              "name": "catalog_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the schema is contained in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "schema_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "schema_owner",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the owner of the schema",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sql_path",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view schemata contains all schemas in the current database that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-schemata.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sequences",
          "columns": [
            {
              "name": "sequence_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the sequence (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequence_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequence_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "The data type of the sequence.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "This column contains the (declared or implicit) precision of the sequence data type (see above). The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "This column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "This column contains the (declared or implicit) scale of the sequence data type (see above). The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "start_value",
              "type": "character_data",
              "comment": {
                "text": "The start value of the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "minimum_value",
              "type": "character_data",
              "comment": {
                "text": "The minimum value of the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "maximum_value",
              "type": "character_data",
              "comment": {
                "text": "The maximum value of the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "increment",
              "type": "character_data",
              "comment": {
                "text": "The increment of the sequence",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "cycle_option",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the sequence cycles, else NO",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view sequences contains all sequences defined in the current database. Only those sequences are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-sequences.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_features",
          "columns": [
            {
              "name": "feature_id",
              "type": "character_data",
              "comment": {
                "text": "Identifier string of the feature",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "feature_name",
              "type": "character_data",
              "comment": {
                "text": "Descriptive name of the feature",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sub_feature_id",
              "type": "character_data",
              "comment": {
                "text": "Identifier string of the subfeature, or a zero-length string if not a subfeature",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sub_feature_name",
              "type": "character_data",
              "comment": {
                "text": "Descriptive name of the subfeature, or a zero-length string if not a subfeature",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_supported",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the feature is fully supported by the current version of PostgreSQL, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_verified_by",
              "type": "character_data",
              "comment": {
                "text": "Always null, since the PostgreSQL development group does not perform formal testing of feature conformance",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "comments",
              "type": "character_data",
              "comment": {
                "text": "Possibly a comment about the supported status of the feature",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The table sql_features contains information about which formal features defined in the SQL standard are supported by PostgreSQL. This is the same information that is presented in Appendix D. There you can also find some additional background information.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-features.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_implementation_info",
          "columns": [
            {
              "name": "implementation_info_id",
              "type": "character_data",
              "comment": {
                "text": "Identifier string of the implementation information item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "implementation_info_name",
              "type": "character_data",
              "comment": {
                "text": "Descriptive name of the implementation information item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "integer_value",
              "type": "cardinal_number",
              "comment": {
                "text": "Value of the implementation information item, or null if the value is contained in the column character_value",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the implementation information item, or null if the value is contained in the column integer_value",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "comments",
              "type": "character_data",
              "comment": {
                "text": "Possibly a comment pertaining to the implementation information item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The table sql_implementation_info contains information about various aspects that are left implementation-defined by the SQL standard. This information is primarily intended for use in the context of the ODBC interface; users of other interfaces will probably find this information to be of little use. For this reason, the individual implementation information items are not described here; you will find them in the description of the ODBC interface.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-implementation-info.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_parts",
          "columns": [
            {
              "name": "feature_id",
              "type": "character_data",
              "comment": {
                "text": "An identifier string containing the number of the part",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "feature_name",
              "type": "character_data",
              "comment": {
                "text": "Descriptive name of the part",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_supported",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the part is fully supported by the current version of PostgreSQL, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_verified_by",
              "type": "character_data",
              "comment": {
                "text": "Always null, since the PostgreSQL development group does not perform formal testing of feature conformance",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "comments",
              "type": "character_data",
              "comment": {
                "text": "Possibly a comment about the supported status of the part",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The table sql_parts contains information about which of the several parts of the SQL standard are supported by PostgreSQL.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-parts.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "sql_sizing",
          "columns": [
            {
              "name": "sizing_id",
              "type": "cardinal_number",
              "comment": {
                "text": "Identifier of the sizing item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "sizing_name",
              "type": "character_data",
              "comment": {
                "text": "Descriptive name of the sizing item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "supported_value",
              "type": "cardinal_number",
              "comment": {
                "text": "Value of the sizing item, or 0 if the size is unlimited or cannot be determined, or null if the features for which the sizing item is applicable are not supported",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "comments",
              "type": "character_data",
              "comment": {
                "text": "Possibly a comment pertaining to the sizing item",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The table sql_sizing contains information about various size limits and maximum values in PostgreSQL. This information is primarily intended for use in the context of the ODBC interface; users of other interfaces will probably find this information to be of little use. For this reason, the individual sizing items are not described here; you will find them in the description of the ODBC interface.\\nhttps://www.postgresql.org/docs/current/infoschema-sql-sizing.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "table_constraints",
          "columns": [
            {
              "name": "constraint_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the constraint (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the constraint",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "constraint_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the constraint: CHECK, FOREIGN KEY, PRIMARY KEY, or UNIQUE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_deferrable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the constraint is deferrable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "initially_deferred",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the constraint is deferrable and initially deferred, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "enforced",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL (currently always YES)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view table_constraints contains all constraints belonging to tables that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-table-constraints.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "table_privileges",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "with_hierarchy",
              "type": "yes_or_no",
              "comment": {
                "text": "In the SQL standard, WITH HIERARCHY OPTION is a separate (sub-)privilege allowing certain operations on table inheritance hierarchies. In PostgreSQL, this is included in the SELECT privilege, so this column shows YES if the privilege is SELECT, else NO.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view table_privileges identifies all privileges granted on tables or views to a currently enabled role or by a currently enabled role. There is one row for each combination of table, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-table-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "tables",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_type",
              "type": "character_data",
              "comment": {
                "text": "Type of the table: BASE TABLE for a persistent base table (the normal table type), VIEW for a view, FOREIGN for a foreign table, or LOCAL TEMPORARY for a temporary table",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "self_referencing_column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "reference_generation",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "If the table is a typed table, the name of the database that contains the underlying data type (always the current database), else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "If the table is a typed table, the name of the schema that contains the underlying data type, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_name",
              "type": "sql_identifier",
              "comment": {
                "text": "If the table is a typed table, the name of the underlying data type, else null.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_insertable_into",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the table is insertable into, NO if not (Base tables are always insertable into, views not necessarily.)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_typed",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the table is a typed table, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "commit_action",
              "type": "character_data",
              "comment": {
                "text": "Not yet implemented",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view tables contains all tables and views defined in the current database. Only those tables and views are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-tables.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "transforms",
          "columns": [
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the type the transform is for (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the type the transform is for",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the type the transform is for",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "group_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The SQL standard allows defining transforms in “groups”, and selecting a group at run time. PostgreSQL does not support this. Instead, transforms are specific to a language. As a compromise, this field contains the language the transform is for.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "transform_type",
              "type": "character_data",
              "comment": {
                "text": "FROM SQL or TO SQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view transforms contains information about the transforms defined in the current database. More precisely, it contains a row for each function contained in a transform (the “from SQL” or “to SQL” function).\\nhttps://www.postgresql.org/docs/current/infoschema-transforms.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "triggered_update_columns",
          "columns": [
            {
              "name": "trigger_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the trigger (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "trigger_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the trigger",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "trigger_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the trigger",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that the trigger is defined on (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that the trigger is defined on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_table",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that the trigger is defined on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_column",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column that the trigger is defined on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "For triggers in the current database that specify a column list (like UPDATE OF column1, column2), the view triggered_update_columns identifies these columns. Triggers that do not specify a column list are not included in this view. Only those columns are shown that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-triggered-update-columns.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "triggers",
          "columns": [
            {
              "name": "trigger_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the trigger (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "trigger_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the trigger",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "trigger_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the trigger",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_manipulation",
              "type": "character_data",
              "comment": {
                "text": "Event that fires the trigger (INSERT, UPDATE, or DELETE)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that the trigger is defined on (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that the trigger is defined on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "event_object_table",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that the trigger is defined on",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_order",
              "type": "cardinal_number",
              "comment": {
                "text": "Firing order among triggers on the same table having the same event_manipulation, action_timing, and action_orientation. In PostgreSQL, triggers are fired in name order, so this column reflects that.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_condition",
              "type": "character_data",
              "comment": {
                "text": "WHEN condition of the trigger, null if none (also null if the table is not owned by a currently enabled role)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_statement",
              "type": "character_data",
              "comment": {
                "text": "Statement that is executed by the trigger (currently always EXECUTE FUNCTION function(...))",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_orientation",
              "type": "character_data",
              "comment": {
                "text": "Identifies whether the trigger fires once for each processed row or once for each statement (ROW or STATEMENT)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_timing",
              "type": "character_data",
              "comment": {
                "text": "Time at which the trigger fires (BEFORE, AFTER, or INSTEAD OF)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_reference_old_table",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the “old” transition table, or null if none",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_reference_new_table",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the “new” transition table, or null if none",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_reference_old_row",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "action_reference_new_row",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "created",
              "type": "time_stamp",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view triggers contains all triggers defined in the current database on tables and views that the current user owns or has some privilege other than SELECT on.\\nhttps://www.postgresql.org/docs/current/infoschema-triggers.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "udt_privileges",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the type (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "udt_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always TYPE USAGE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view udt_privileges identifies USAGE privileges granted on user-defined types to a currently enabled role or by a currently enabled role. There is one row for each combination of type, grantor, and grantee. This view shows only composite types (see under Section 37.60 for why); see Section 37.59 for domain privileges.\\nhttps://www.postgresql.org/docs/current/infoschema-udt-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "usage_privileges",
          "columns": [
            {
              "name": "grantor",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that granted the privilege",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantee",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the role that the privilege was granted to",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the object (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the object, if applicable, else an empty string",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the object",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "object_type",
              "type": "character_data",
              "comment": {
                "text": "COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER or SEQUENCE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "privilege_type",
              "type": "character_data",
              "comment": {
                "text": "Always USAGE",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_grantable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the privilege is grantable, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view usage_privileges identifies USAGE privileges granted on various kinds of objects to a currently enabled role or by a currently enabled role. In PostgreSQL, this currently applies to collations, domains, foreign-data wrappers, foreign servers, and sequences. There is one row for each combination of object, grantor, and grantee.\\nhttps://www.postgresql.org/docs/current/infoschema-usage-privileges.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_defined_types",
          "columns": [
            {
              "name": "user_defined_type_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the type (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the type",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_defined_type_category",
              "type": "character_data",
              "comment": {
                "text": "Currently always STRUCTURED",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_instantiable",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_final",
              "type": "yes_or_no",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordering_form",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordering_category",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordering_routine_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordering_routine_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ordering_routine_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "reference_type",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_maximum_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_octet_length",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "character_set_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "collation_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_precision_radix",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "numeric_scale",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "datetime_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_type",
              "type": "character_data",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "interval_precision",
              "type": "cardinal_number",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "source_dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "ref_dtd_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Applies to a feature not available in PostgreSQL",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view user_defined_types currently contains all composite types defined in the current database. Only those types are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-defined-types.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_mapping_options",
          "columns": [
            {
              "name": "authorization_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the user being mapped, or PUBLIC if the mapping is public",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign server used by this mapping is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign server used by this mapping",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of an option",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "option_value",
              "type": "character_data",
              "comment": {
                "text": "Value of the option. This column will show as null unless the current user is the user being mapped, or the mapping is for PUBLIC and the current user is the server owner, or the current user is a superuser. The intent is to protect password information stored as user mapping option.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view user_mapping_options contains all the options defined for user mappings in the current database. Only those user mappings are shown where the current user has access to the corresponding foreign server (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-mapping-options.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "user_mappings",
          "columns": [
            {
              "name": "authorization_identifier",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the user being mapped, or PUBLIC if the mapping is public",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that the foreign server used by this mapping is defined in (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "foreign_server_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the foreign server used by this mapping",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view user_mappings contains all user mappings defined in the current database. Only those user mappings are shown where the current user has access to the corresponding foreign server (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-user-mappings.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_column_usage",
          "columns": [
            {
              "name": "view_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "view_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "view_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that contains the column that is used by the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that contains the column that is used by the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that contains the column that is used by the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "column_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the column that is used by the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view view_column_usage identifies all columns that are used in the query expression of a view (the SELECT statement that defines the view). A column is only included if the table that contains the column is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-column-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_routine_usage",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database containing the function (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema containing the function",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "specific_name",
              "type": "sql_identifier",
              "comment": {
                "text": "The “specific name” of the function. See Section 37.45 for more information.",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view view_routine_usage identifies all routines (functions and procedures) that are used in the query expression of a view (the SELECT statement that defines the view). A routine is only included if that routine is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-routine-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "view_table_usage",
          "columns": [
            {
              "name": "view_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "view_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "view_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the table that is used by the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the table that is used by the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the table that is used by the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view view_table_usage identifies all tables that are used in the query expression of a view (the SELECT statement that defines the view). A table is only included if that table is owned by a currently enabled role.\\nhttps://www.postgresql.org/docs/current/infoschema-view-table-usage.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        },
        {
          "schema": "information_schema",
          "table": "views",
          "columns": [
            {
              "name": "table_catalog",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the database that contains the view (always the current database)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_schema",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the schema that contains the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "table_name",
              "type": "sql_identifier",
              "comment": {
                "text": "Name of the view",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "view_definition",
              "type": "character_data",
              "comment": {
                "text": "Query expression defining the view (null if the view is not owned by a currently enabled role)",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "check_option",
              "type": "character_data",
              "comment": {
                "text": "CASCADED or LOCAL if the view has a CHECK OPTION defined on it, NONE if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_updatable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the view is updatable (allows UPDATE and DELETE), NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_insertable_into",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the view is insertable into (allows INSERT), NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_trigger_updatable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the view has an INSTEAD OF UPDATE trigger defined on it, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_trigger_deletable",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the view has an INSTEAD OF DELETE trigger defined on it, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_trigger_insertable_into",
              "type": "yes_or_no",
              "comment": {
                "text": "YES if the view has an INSTEAD OF INSERT trigger defined on it, NO if not",
                "origins": [
                  {
                    "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view views contains all views defined in the current database. Only those views are shown that the current user has access to (by way of being the owner or having some privilege).\\nhttps://www.postgresql.org/docs/current/infoschema-views.html",
            "origins": [
              {
                "id": "22766069-29b0-4de6-a646-a399e92db0cc",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "22766069-29b0-4de6-a646-a399e92db0cc",
              "lines": []
            }
          ]
        }
      ],
      "relations": [],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    },
    {
      "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
      "name": "pg_catalog.sql",
      "kind": {
        "kind": "SqlLocalFile",
        "name": "pg_catalog.sql",
        "size": 116091,
        "modified": 1662104129530
      },
      "content": [
        "--",
        "-- PostgreSQL database dump",
        "--",
        "",
        "-- Dumped from database version 12.12 (Ubuntu 12.12-1.pgdg20.04+1)",
        "-- Dumped by pg_dump version 12.12 (Ubuntu 12.12-1.pgdg20.04+1)",
        "",
        "SET statement_timeout = 0;",
        "SET lock_timeout = 0;",
        "SET idle_in_transaction_session_timeout = 0;",
        "SET client_encoding = 'UTF8';",
        "SET standard_conforming_strings = on;",
        "SELECT pg_catalog.set_config('search_path', '', false);",
        "SET check_function_bodies = false;",
        "SET xmloption = content;",
        "SET client_min_messages = warning;",
        "SET row_security = off;",
        "",
        "SET default_tablespace = '';",
        "",
        "SET default_table_access_method = heap;",
        "",
        "--",
        "-- Name: pg_aggregate; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_aggregate (",
        "    aggfnoid regproc NOT NULL,",
        "    aggkind \"char\" NOT NULL,",
        "    aggnumdirectargs smallint NOT NULL,",
        "    aggtransfn regproc NOT NULL,",
        "    aggfinalfn regproc NOT NULL,",
        "    aggcombinefn regproc NOT NULL,",
        "    aggserialfn regproc NOT NULL,",
        "    aggdeserialfn regproc NOT NULL,",
        "    aggmtransfn regproc NOT NULL,",
        "    aggminvtransfn regproc NOT NULL,",
        "    aggmfinalfn regproc NOT NULL,",
        "    aggfinalextra boolean NOT NULL,",
        "    aggmfinalextra boolean NOT NULL,",
        "    aggfinalmodify \"char\" NOT NULL,",
        "    aggmfinalmodify \"char\" NOT NULL,",
        "    aggsortop oid NOT NULL,",
        "    aggtranstype oid NOT NULL,",
        "    aggtransspace integer NOT NULL,",
        "    aggmtranstype oid NOT NULL,",
        "    aggmtransspace integer NOT NULL,",
        "    agginitval text COLLATE pg_catalog.\"C\",",
        "    aggminitval text COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_aggregate REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_aggregate OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_am; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_am (",
        "    oid oid NOT NULL,",
        "    amname name NOT NULL,",
        "    amhandler regproc NOT NULL,",
        "    amtype \"char\" NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_am REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_am OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_amop; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_amop (",
        "    oid oid NOT NULL,",
        "    amopfamily oid NOT NULL,",
        "    amoplefttype oid NOT NULL,",
        "    amoprighttype oid NOT NULL,",
        "    amopstrategy smallint NOT NULL,",
        "    amoppurpose \"char\" NOT NULL,",
        "    amopopr oid NOT NULL,",
        "    amopmethod oid NOT NULL,",
        "    amopsortfamily oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_amop REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_amop OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_amproc; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_amproc (",
        "    oid oid NOT NULL,",
        "    amprocfamily oid NOT NULL,",
        "    amproclefttype oid NOT NULL,",
        "    amprocrighttype oid NOT NULL,",
        "    amprocnum smallint NOT NULL,",
        "    amproc regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_amproc REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_amproc OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_attrdef; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_attrdef (",
        "    oid oid NOT NULL,",
        "    adrelid oid NOT NULL,",
        "    adnum smallint NOT NULL,",
        "    adbin pg_node_tree NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_attrdef REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_attrdef OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_attribute; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_attribute (",
        "    attrelid oid NOT NULL,",
        "    attname name NOT NULL,",
        "    atttypid oid NOT NULL,",
        "    attstattarget integer NOT NULL,",
        "    attlen smallint NOT NULL,",
        "    attnum smallint NOT NULL,",
        "    attndims integer NOT NULL,",
        "    attcacheoff integer NOT NULL,",
        "    atttypmod integer NOT NULL,",
        "    attbyval boolean NOT NULL,",
        "    attstorage \"char\" NOT NULL,",
        "    attalign \"char\" NOT NULL,",
        "    attnotnull boolean NOT NULL,",
        "    atthasdef boolean NOT NULL,",
        "    atthasmissing boolean NOT NULL,",
        "    attidentity \"char\" NOT NULL,",
        "    attgenerated \"char\" NOT NULL,",
        "    attisdropped boolean NOT NULL,",
        "    attislocal boolean NOT NULL,",
        "    attinhcount integer NOT NULL,",
        "    attcollation oid NOT NULL,",
        "    attacl aclitem[],",
        "    attoptions text[] COLLATE pg_catalog.\"C\",",
        "    attfdwoptions text[] COLLATE pg_catalog.\"C\",",
        "    attmissingval anyarray",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_attribute REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_attribute OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_auth_members; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_auth_members (",
        "    roleid oid NOT NULL,",
        "    member oid NOT NULL,",
        "    grantor oid NOT NULL,",
        "    admin_option boolean NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_auth_members REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_auth_members OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_authid; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_authid (",
        "    oid oid NOT NULL,",
        "    rolname name NOT NULL,",
        "    rolsuper boolean NOT NULL,",
        "    rolinherit boolean NOT NULL,",
        "    rolcreaterole boolean NOT NULL,",
        "    rolcreatedb boolean NOT NULL,",
        "    rolcanlogin boolean NOT NULL,",
        "    rolreplication boolean NOT NULL,",
        "    rolbypassrls boolean NOT NULL,",
        "    rolconnlimit integer NOT NULL,",
        "    rolpassword text COLLATE pg_catalog.\"C\",",
        "    rolvaliduntil timestamp with time zone",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_authid REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_authid OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_available_extension_versions; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_available_extension_versions AS",
        " SELECT e.name,",
        "    e.version,",
        "    (x.extname IS NOT NULL) AS installed,",
        "    e.superuser,",
        "    e.relocatable,",
        "    e.schema,",
        "    e.requires,",
        "    e.comment",
        "   FROM (pg_available_extension_versions() e(name, version, superuser, relocatable, schema, requires, comment)",
        "     LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_available_extension_versions OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_available_extensions; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_available_extensions AS",
        " SELECT e.name,",
        "    e.default_version,",
        "    x.extversion AS installed_version,",
        "    e.comment",
        "   FROM (pg_available_extensions() e(name, default_version, comment)",
        "     LEFT JOIN pg_extension x ON ((e.name = x.extname)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_available_extensions OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_cast; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_cast (",
        "    oid oid NOT NULL,",
        "    castsource oid NOT NULL,",
        "    casttarget oid NOT NULL,",
        "    castfunc oid NOT NULL,",
        "    castcontext \"char\" NOT NULL,",
        "    castmethod \"char\" NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_cast REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_cast OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_class; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_class (",
        "    oid oid NOT NULL,",
        "    relname name NOT NULL,",
        "    relnamespace oid NOT NULL,",
        "    reltype oid NOT NULL,",
        "    reloftype oid NOT NULL,",
        "    relowner oid NOT NULL,",
        "    relam oid NOT NULL,",
        "    relfilenode oid NOT NULL,",
        "    reltablespace oid NOT NULL,",
        "    relpages integer NOT NULL,",
        "    reltuples real NOT NULL,",
        "    relallvisible integer NOT NULL,",
        "    reltoastrelid oid NOT NULL,",
        "    relhasindex boolean NOT NULL,",
        "    relisshared boolean NOT NULL,",
        "    relpersistence \"char\" NOT NULL,",
        "    relkind \"char\" NOT NULL,",
        "    relnatts smallint NOT NULL,",
        "    relchecks smallint NOT NULL,",
        "    relhasrules boolean NOT NULL,",
        "    relhastriggers boolean NOT NULL,",
        "    relhassubclass boolean NOT NULL,",
        "    relrowsecurity boolean NOT NULL,",
        "    relforcerowsecurity boolean NOT NULL,",
        "    relispopulated boolean NOT NULL,",
        "    relreplident \"char\" NOT NULL,",
        "    relispartition boolean NOT NULL,",
        "    relrewrite oid NOT NULL,",
        "    relfrozenxid xid NOT NULL,",
        "    relminmxid xid NOT NULL,",
        "    relacl aclitem[],",
        "    reloptions text[] COLLATE pg_catalog.\"C\",",
        "    relpartbound pg_node_tree COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_class REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_class OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_collation; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_collation (",
        "    oid oid NOT NULL,",
        "    collname name NOT NULL,",
        "    collnamespace oid NOT NULL,",
        "    collowner oid NOT NULL,",
        "    collprovider \"char\" NOT NULL,",
        "    collisdeterministic boolean NOT NULL,",
        "    collencoding integer NOT NULL,",
        "    collcollate name NOT NULL,",
        "    collctype name NOT NULL,",
        "    collversion text COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_collation REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_collation OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_config; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_config AS",
        " SELECT pg_config.name,",
        "    pg_config.setting",
        "   FROM pg_config() pg_config(name, setting);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_config OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_constraint; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_constraint (",
        "    oid oid NOT NULL,",
        "    conname name NOT NULL,",
        "    connamespace oid NOT NULL,",
        "    contype \"char\" NOT NULL,",
        "    condeferrable boolean NOT NULL,",
        "    condeferred boolean NOT NULL,",
        "    convalidated boolean NOT NULL,",
        "    conrelid oid NOT NULL,",
        "    contypid oid NOT NULL,",
        "    conindid oid NOT NULL,",
        "    conparentid oid NOT NULL,",
        "    confrelid oid NOT NULL,",
        "    confupdtype \"char\" NOT NULL,",
        "    confdeltype \"char\" NOT NULL,",
        "    confmatchtype \"char\" NOT NULL,",
        "    conislocal boolean NOT NULL,",
        "    coninhcount integer NOT NULL,",
        "    connoinherit boolean NOT NULL,",
        "    conkey smallint[],",
        "    confkey smallint[],",
        "    conpfeqop oid[],",
        "    conppeqop oid[],",
        "    conffeqop oid[],",
        "    conexclop oid[],",
        "    conbin pg_node_tree COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_constraint REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_constraint OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_conversion; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_conversion (",
        "    oid oid NOT NULL,",
        "    conname name NOT NULL,",
        "    connamespace oid NOT NULL,",
        "    conowner oid NOT NULL,",
        "    conforencoding integer NOT NULL,",
        "    contoencoding integer NOT NULL,",
        "    conproc regproc NOT NULL,",
        "    condefault boolean NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_conversion REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_conversion OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_cursors; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_cursors AS",
        " SELECT c.name,",
        "    c.statement,",
        "    c.is_holdable,",
        "    c.is_binary,",
        "    c.is_scrollable,",
        "    c.creation_time",
        "   FROM pg_cursor() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_cursors OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_database; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_database (",
        "    oid oid NOT NULL,",
        "    datname name NOT NULL,",
        "    datdba oid NOT NULL,",
        "    encoding integer NOT NULL,",
        "    datcollate name NOT NULL,",
        "    datctype name NOT NULL,",
        "    datistemplate boolean NOT NULL,",
        "    datallowconn boolean NOT NULL,",
        "    datconnlimit integer NOT NULL,",
        "    datlastsysoid oid NOT NULL,",
        "    datfrozenxid xid NOT NULL,",
        "    datminmxid xid NOT NULL,",
        "    dattablespace oid NOT NULL,",
        "    datacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_database REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_database OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_db_role_setting; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_db_role_setting (",
        "    setdatabase oid NOT NULL,",
        "    setrole oid NOT NULL,",
        "    setconfig text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_db_role_setting REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_db_role_setting OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_default_acl; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_default_acl (",
        "    oid oid NOT NULL,",
        "    defaclrole oid NOT NULL,",
        "    defaclnamespace oid NOT NULL,",
        "    defaclobjtype \"char\" NOT NULL,",
        "    defaclacl aclitem[] NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_default_acl REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_default_acl OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_depend; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_depend (",
        "    classid oid NOT NULL,",
        "    objid oid NOT NULL,",
        "    objsubid integer NOT NULL,",
        "    refclassid oid NOT NULL,",
        "    refobjid oid NOT NULL,",
        "    refobjsubid integer NOT NULL,",
        "    deptype \"char\" NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_depend REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_depend OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_description; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_description (",
        "    objoid oid NOT NULL,",
        "    classoid oid NOT NULL,",
        "    objsubid integer NOT NULL,",
        "    description text NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_description REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_description OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_enum; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_enum (",
        "    oid oid NOT NULL,",
        "    enumtypid oid NOT NULL,",
        "    enumsortorder real NOT NULL,",
        "    enumlabel name NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_enum REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_enum OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_event_trigger; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_event_trigger (",
        "    oid oid NOT NULL,",
        "    evtname name NOT NULL,",
        "    evtevent name NOT NULL,",
        "    evtowner oid NOT NULL,",
        "    evtfoid oid NOT NULL,",
        "    evtenabled \"char\" NOT NULL,",
        "    evttags text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_event_trigger REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_event_trigger OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_extension; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_extension (",
        "    oid oid NOT NULL,",
        "    extname name NOT NULL,",
        "    extowner oid NOT NULL,",
        "    extnamespace oid NOT NULL,",
        "    extrelocatable boolean NOT NULL,",
        "    extversion text NOT NULL COLLATE pg_catalog.\"C\",",
        "    extconfig oid[],",
        "    extcondition text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_extension REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_extension OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_file_settings; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_file_settings AS",
        " SELECT a.sourcefile,",
        "    a.sourceline,",
        "    a.seqno,",
        "    a.name,",
        "    a.setting,",
        "    a.applied,",
        "    a.error",
        "   FROM pg_show_all_file_settings() a(sourcefile, sourceline, seqno, name, setting, applied, error);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_file_settings OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_foreign_data_wrapper; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_foreign_data_wrapper (",
        "    oid oid NOT NULL,",
        "    fdwname name NOT NULL,",
        "    fdwowner oid NOT NULL,",
        "    fdwhandler oid NOT NULL,",
        "    fdwvalidator oid NOT NULL,",
        "    fdwacl aclitem[],",
        "    fdwoptions text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_foreign_data_wrapper REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_foreign_data_wrapper OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_foreign_server; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_foreign_server (",
        "    oid oid NOT NULL,",
        "    srvname name NOT NULL,",
        "    srvowner oid NOT NULL,",
        "    srvfdw oid NOT NULL,",
        "    srvtype text COLLATE pg_catalog.\"C\",",
        "    srvversion text COLLATE pg_catalog.\"C\",",
        "    srvacl aclitem[],",
        "    srvoptions text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_foreign_server REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_foreign_server OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_foreign_table; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_foreign_table (",
        "    ftrelid oid NOT NULL,",
        "    ftserver oid NOT NULL,",
        "    ftoptions text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_foreign_table REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_foreign_table OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_group; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_group AS",
        " SELECT pg_authid.rolname AS groname,",
        "    pg_authid.oid AS grosysid,",
        "    ARRAY( SELECT pg_auth_members.member",
        "           FROM pg_auth_members",
        "          WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist",
        "   FROM pg_authid",
        "  WHERE (NOT pg_authid.rolcanlogin);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_group OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_hba_file_rules; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_hba_file_rules AS",
        " SELECT a.line_number,",
        "    a.type,",
        "    a.database,",
        "    a.user_name,",
        "    a.address,",
        "    a.netmask,",
        "    a.auth_method,",
        "    a.options,",
        "    a.error",
        "   FROM pg_hba_file_rules() a(line_number, type, database, user_name, address, netmask, auth_method, options, error);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_hba_file_rules OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_index; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_index (",
        "    indexrelid oid NOT NULL,",
        "    indrelid oid NOT NULL,",
        "    indnatts smallint NOT NULL,",
        "    indnkeyatts smallint NOT NULL,",
        "    indisunique boolean NOT NULL,",
        "    indisprimary boolean NOT NULL,",
        "    indisexclusion boolean NOT NULL,",
        "    indimmediate boolean NOT NULL,",
        "    indisclustered boolean NOT NULL,",
        "    indisvalid boolean NOT NULL,",
        "    indcheckxmin boolean NOT NULL,",
        "    indisready boolean NOT NULL,",
        "    indislive boolean NOT NULL,",
        "    indisreplident boolean NOT NULL,",
        "    indkey int2vector NOT NULL,",
        "    indcollation oidvector NOT NULL,",
        "    indclass oidvector NOT NULL,",
        "    indoption int2vector NOT NULL,",
        "    indexprs pg_node_tree COLLATE pg_catalog.\"C\",",
        "    indpred pg_node_tree COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_index REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_index OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_indexes AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    i.relname AS indexname,",
        "    t.spcname AS tablespace,",
        "    pg_get_indexdef(i.oid) AS indexdef",
        "   FROM ((((pg_index x",
        "     JOIN pg_class c ON ((c.oid = x.indrelid)))",
        "     JOIN pg_class i ON ((i.oid = x.indexrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "     LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))",
        "  WHERE ((c.relkind = ANY (ARRAY['r'::\"char\", 'm'::\"char\", 'p'::\"char\"])) AND (i.relkind = ANY (ARRAY['i'::\"char\", 'I'::\"char\"])));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_inherits; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_inherits (",
        "    inhrelid oid NOT NULL,",
        "    inhparent oid NOT NULL,",
        "    inhseqno integer NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_inherits REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_inherits OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_init_privs; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_init_privs (",
        "    objoid oid NOT NULL,",
        "    classoid oid NOT NULL,",
        "    objsubid integer NOT NULL,",
        "    privtype \"char\" NOT NULL,",
        "    initprivs aclitem[] NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_init_privs REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_init_privs OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_language; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_language (",
        "    oid oid NOT NULL,",
        "    lanname name NOT NULL,",
        "    lanowner oid NOT NULL,",
        "    lanispl boolean NOT NULL,",
        "    lanpltrusted boolean NOT NULL,",
        "    lanplcallfoid oid NOT NULL,",
        "    laninline oid NOT NULL,",
        "    lanvalidator oid NOT NULL,",
        "    lanacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_language REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_language OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_largeobject; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_largeobject (",
        "    loid oid NOT NULL,",
        "    pageno integer NOT NULL,",
        "    data bytea NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_largeobject REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_largeobject OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_largeobject_metadata; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_largeobject_metadata (",
        "    oid oid NOT NULL,",
        "    lomowner oid NOT NULL,",
        "    lomacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_largeobject_metadata REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_largeobject_metadata OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_locks; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_locks AS",
        " SELECT l.locktype,",
        "    l.database,",
        "    l.relation,",
        "    l.page,",
        "    l.tuple,",
        "    l.virtualxid,",
        "    l.transactionid,",
        "    l.classid,",
        "    l.objid,",
        "    l.objsubid,",
        "    l.virtualtransaction,",
        "    l.pid,",
        "    l.mode,",
        "    l.granted,",
        "    l.fastpath",
        "   FROM pg_lock_status() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_locks OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_matviews; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_matviews AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS matviewname,",
        "    pg_get_userbyid(c.relowner) AS matviewowner,",
        "    t.spcname AS tablespace,",
        "    c.relhasindex AS hasindexes,",
        "    c.relispopulated AS ispopulated,",
        "    pg_get_viewdef(c.oid) AS definition",
        "   FROM ((pg_class c",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))",
        "  WHERE (c.relkind = 'm'::\"char\");",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_matviews OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_namespace; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_namespace (",
        "    oid oid NOT NULL,",
        "    nspname name NOT NULL,",
        "    nspowner oid NOT NULL,",
        "    nspacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_namespace REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_namespace OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_opclass; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_opclass (",
        "    oid oid NOT NULL,",
        "    opcmethod oid NOT NULL,",
        "    opcname name NOT NULL,",
        "    opcnamespace oid NOT NULL,",
        "    opcowner oid NOT NULL,",
        "    opcfamily oid NOT NULL,",
        "    opcintype oid NOT NULL,",
        "    opcdefault boolean NOT NULL,",
        "    opckeytype oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_opclass REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_opclass OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_operator; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_operator (",
        "    oid oid NOT NULL,",
        "    oprname name NOT NULL,",
        "    oprnamespace oid NOT NULL,",
        "    oprowner oid NOT NULL,",
        "    oprkind \"char\" NOT NULL,",
        "    oprcanmerge boolean NOT NULL,",
        "    oprcanhash boolean NOT NULL,",
        "    oprleft oid NOT NULL,",
        "    oprright oid NOT NULL,",
        "    oprresult oid NOT NULL,",
        "    oprcom oid NOT NULL,",
        "    oprnegate oid NOT NULL,",
        "    oprcode regproc NOT NULL,",
        "    oprrest regproc NOT NULL,",
        "    oprjoin regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_operator REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_operator OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_opfamily; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_opfamily (",
        "    oid oid NOT NULL,",
        "    opfmethod oid NOT NULL,",
        "    opfname name NOT NULL,",
        "    opfnamespace oid NOT NULL,",
        "    opfowner oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_opfamily REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_opfamily OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_partitioned_table; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_partitioned_table (",
        "    partrelid oid NOT NULL,",
        "    partstrat \"char\" NOT NULL,",
        "    partnatts smallint NOT NULL,",
        "    partdefid oid NOT NULL,",
        "    partattrs int2vector NOT NULL,",
        "    partclass oidvector NOT NULL,",
        "    partcollation oidvector NOT NULL,",
        "    partexprs pg_node_tree COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_partitioned_table REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_partitioned_table OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_pltemplate; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_pltemplate (",
        "    tmplname name NOT NULL,",
        "    tmpltrusted boolean NOT NULL,",
        "    tmpldbacreate boolean NOT NULL,",
        "    tmplhandler text NOT NULL COLLATE pg_catalog.\"C\",",
        "    tmplinline text COLLATE pg_catalog.\"C\",",
        "    tmplvalidator text COLLATE pg_catalog.\"C\",",
        "    tmpllibrary text NOT NULL COLLATE pg_catalog.\"C\",",
        "    tmplacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_pltemplate REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_pltemplate OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_policies; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_policies AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    pol.polname AS policyname,",
        "        CASE",
        "            WHEN pol.polpermissive THEN 'PERMISSIVE'::text",
        "            ELSE 'RESTRICTIVE'::text",
        "        END AS permissive,",
        "        CASE",
        "            WHEN (pol.polroles = '{0}'::oid[]) THEN (string_to_array('public'::text, ''::text))::name[]",
        "            ELSE ARRAY( SELECT pg_authid.rolname",
        "               FROM pg_authid",
        "              WHERE (pg_authid.oid = ANY (pol.polroles))",
        "              ORDER BY pg_authid.rolname)",
        "        END AS roles,",
        "        CASE pol.polcmd",
        "            WHEN 'r'::\"char\" THEN 'SELECT'::text",
        "            WHEN 'a'::\"char\" THEN 'INSERT'::text",
        "            WHEN 'w'::\"char\" THEN 'UPDATE'::text",
        "            WHEN 'd'::\"char\" THEN 'DELETE'::text",
        "            WHEN '*'::\"char\" THEN 'ALL'::text",
        "            ELSE NULL::text",
        "        END AS cmd,",
        "    pg_get_expr(pol.polqual, pol.polrelid) AS qual,",
        "    pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check",
        "   FROM ((pg_policy pol",
        "     JOIN pg_class c ON ((c.oid = pol.polrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_policies OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_policy; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_policy (",
        "    oid oid NOT NULL,",
        "    polname name NOT NULL,",
        "    polrelid oid NOT NULL,",
        "    polcmd \"char\" NOT NULL,",
        "    polpermissive boolean NOT NULL,",
        "    polroles oid[] NOT NULL,",
        "    polqual pg_node_tree COLLATE pg_catalog.\"C\",",
        "    polwithcheck pg_node_tree COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_policy REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_policy OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_prepared_statements; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_prepared_statements AS",
        " SELECT p.name,",
        "    p.statement,",
        "    p.prepare_time,",
        "    p.parameter_types,",
        "    p.from_sql",
        "   FROM pg_prepared_statement() p(name, statement, prepare_time, parameter_types, from_sql);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_prepared_statements OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_prepared_xacts; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_prepared_xacts AS",
        " SELECT p.transaction,",
        "    p.gid,",
        "    p.prepared,",
        "    u.rolname AS owner,",
        "    d.datname AS database",
        "   FROM ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)",
        "     LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))",
        "     LEFT JOIN pg_database d ON ((p.dbid = d.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_prepared_xacts OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_proc; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_proc (",
        "    oid oid NOT NULL,",
        "    proname name NOT NULL,",
        "    pronamespace oid NOT NULL,",
        "    proowner oid NOT NULL,",
        "    prolang oid NOT NULL,",
        "    procost real NOT NULL,",
        "    prorows real NOT NULL,",
        "    provariadic oid NOT NULL,",
        "    prosupport regproc NOT NULL,",
        "    prokind \"char\" NOT NULL,",
        "    prosecdef boolean NOT NULL,",
        "    proleakproof boolean NOT NULL,",
        "    proisstrict boolean NOT NULL,",
        "    proretset boolean NOT NULL,",
        "    provolatile \"char\" NOT NULL,",
        "    proparallel \"char\" NOT NULL,",
        "    pronargs smallint NOT NULL,",
        "    pronargdefaults smallint NOT NULL,",
        "    prorettype oid NOT NULL,",
        "    proargtypes oidvector NOT NULL,",
        "    proallargtypes oid[],",
        "    proargmodes \"char\"[],",
        "    proargnames text[] COLLATE pg_catalog.\"C\",",
        "    proargdefaults pg_node_tree COLLATE pg_catalog.\"C\",",
        "    protrftypes oid[],",
        "    prosrc text NOT NULL COLLATE pg_catalog.\"C\",",
        "    probin text COLLATE pg_catalog.\"C\",",
        "    proconfig text[] COLLATE pg_catalog.\"C\",",
        "    proacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_proc REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_proc OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_publication; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_publication (",
        "    oid oid NOT NULL,",
        "    pubname name NOT NULL,",
        "    pubowner oid NOT NULL,",
        "    puballtables boolean NOT NULL,",
        "    pubinsert boolean NOT NULL,",
        "    pubupdate boolean NOT NULL,",
        "    pubdelete boolean NOT NULL,",
        "    pubtruncate boolean NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_publication REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_publication OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_publication_rel; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_publication_rel (",
        "    oid oid NOT NULL,",
        "    prpubid oid NOT NULL,",
        "    prrelid oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_publication_rel REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_publication_rel OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_publication_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_publication_tables AS",
        " SELECT p.pubname,",
        "    n.nspname AS schemaname,",
        "    c.relname AS tablename",
        "   FROM pg_publication p,",
        "    LATERAL pg_get_publication_tables((p.pubname)::text) gpt(relid),",
        "    (pg_class c",
        "     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.oid = gpt.relid);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_publication_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_range; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_range (",
        "    rngtypid oid NOT NULL,",
        "    rngsubtype oid NOT NULL,",
        "    rngcollation oid NOT NULL,",
        "    rngsubopc oid NOT NULL,",
        "    rngcanonical regproc NOT NULL,",
        "    rngsubdiff regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_range REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_range OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_replication_origin; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_replication_origin (",
        "    roident oid NOT NULL,",
        "    roname text NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_replication_origin REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_replication_origin OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_replication_origin_status; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_replication_origin_status AS",
        " SELECT pg_show_replication_origin_status.local_id,",
        "    pg_show_replication_origin_status.external_id,",
        "    pg_show_replication_origin_status.remote_lsn,",
        "    pg_show_replication_origin_status.local_lsn",
        "   FROM pg_show_replication_origin_status() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_replication_origin_status OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_replication_slots; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_replication_slots AS",
        " SELECT l.slot_name,",
        "    l.plugin,",
        "    l.slot_type,",
        "    l.datoid,",
        "    d.datname AS database,",
        "    l.temporary,",
        "    l.active,",
        "    l.active_pid,",
        "    l.xmin,",
        "    l.catalog_xmin,",
        "    l.restart_lsn,",
        "    l.confirmed_flush_lsn",
        "   FROM (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn)",
        "     LEFT JOIN pg_database d ON ((l.datoid = d.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_replication_slots OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_rewrite; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_rewrite (",
        "    oid oid NOT NULL,",
        "    rulename name NOT NULL,",
        "    ev_class oid NOT NULL,",
        "    ev_type \"char\" NOT NULL,",
        "    ev_enabled \"char\" NOT NULL,",
        "    is_instead boolean NOT NULL,",
        "    ev_qual pg_node_tree NOT NULL COLLATE pg_catalog.\"C\",",
        "    ev_action pg_node_tree NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_rewrite REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_rewrite OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_roles; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_roles AS",
        " SELECT pg_authid.rolname,",
        "    pg_authid.rolsuper,",
        "    pg_authid.rolinherit,",
        "    pg_authid.rolcreaterole,",
        "    pg_authid.rolcreatedb,",
        "    pg_authid.rolcanlogin,",
        "    pg_authid.rolreplication,",
        "    pg_authid.rolconnlimit,",
        "    '********'::text AS rolpassword,",
        "    pg_authid.rolvaliduntil,",
        "    pg_authid.rolbypassrls,",
        "    s.setconfig AS rolconfig,",
        "    pg_authid.oid",
        "   FROM (pg_authid",
        "     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_roles OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_rules; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_rules AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    r.rulename,",
        "    pg_get_ruledef(r.oid) AS definition",
        "   FROM ((pg_rewrite r",
        "     JOIN pg_class c ON ((c.oid = r.ev_class)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (r.rulename <> '_RETURN'::name);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_rules OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_seclabel; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_seclabel (",
        "    objoid oid NOT NULL,",
        "    classoid oid NOT NULL,",
        "    objsubid integer NOT NULL,",
        "    provider text NOT NULL COLLATE pg_catalog.\"C\",",
        "    label text NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_seclabel REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_seclabel OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_seclabels; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_seclabels AS",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "        CASE",
        "            WHEN (rel.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) THEN 'table'::text",
        "            WHEN (rel.relkind = 'v'::\"char\") THEN 'view'::text",
        "            WHEN (rel.relkind = 'm'::\"char\") THEN 'materialized view'::text",
        "            WHEN (rel.relkind = 'S'::\"char\") THEN 'sequence'::text",
        "            WHEN (rel.relkind = 'f'::\"char\") THEN 'foreign table'::text",
        "            ELSE NULL::text",
        "        END AS objtype,",
        "    rel.relnamespace AS objnamespace,",
        "        CASE",
        "            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)",
        "            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))",
        "        END AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM ((pg_seclabel l",
        "     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))",
        "     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'column'::text AS objtype,",
        "    rel.relnamespace AS objnamespace,",
        "    ((",
        "        CASE",
        "            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)",
        "            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))",
        "        END || '.'::text) || (att.attname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (((pg_seclabel l",
        "     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))",
        "     JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))",
        "     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))",
        "  WHERE (l.objsubid <> 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "        CASE pro.prokind",
        "            WHEN 'a'::\"char\" THEN 'aggregate'::text",
        "            WHEN 'f'::\"char\" THEN 'function'::text",
        "            WHEN 'p'::\"char\" THEN 'procedure'::text",
        "            WHEN 'w'::\"char\" THEN 'window'::text",
        "            ELSE NULL::text",
        "        END AS objtype,",
        "    pro.pronamespace AS objnamespace,",
        "    (((",
        "        CASE",
        "            WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)",
        "            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((pro.proname)::text))",
        "        END || '('::text) || pg_get_function_arguments(pro.oid)) || ')'::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM ((pg_seclabel l",
        "     JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))",
        "     JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "        CASE",
        "            WHEN (typ.typtype = 'd'::\"char\") THEN 'domain'::text",
        "            ELSE 'type'::text",
        "        END AS objtype,",
        "    typ.typnamespace AS objnamespace,",
        "        CASE",
        "            WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)",
        "            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((typ.typname)::text))",
        "        END AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM ((pg_seclabel l",
        "     JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))",
        "     JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'large object'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    (l.objoid)::text AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_seclabel l",
        "     JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))",
        "  WHERE ((l.classoid = ('pg_largeobject'::regclass)::oid) AND (l.objsubid = 0))",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'language'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((lan.lanname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_seclabel l",
        "     JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'schema'::text AS objtype,",
        "    nsp.oid AS objnamespace,",
        "    quote_ident((nsp.nspname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_seclabel l",
        "     JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'event trigger'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((evt.evtname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_seclabel l",
        "     JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    l.objsubid,",
        "    'publication'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((p.pubname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_seclabel l",
        "     JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))",
        "  WHERE (l.objsubid = 0)",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    0 AS objsubid,",
        "    'subscription'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((s.subname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_shseclabel l",
        "     JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid))))",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    0 AS objsubid,",
        "    'database'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((dat.datname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_shseclabel l",
        "     JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid))))",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    0 AS objsubid,",
        "    'tablespace'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((spc.spcname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_shseclabel l",
        "     JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid))))",
        "UNION ALL",
        " SELECT l.objoid,",
        "    l.classoid,",
        "    0 AS objsubid,",
        "    'role'::text AS objtype,",
        "    NULL::oid AS objnamespace,",
        "    quote_ident((rol.rolname)::text) AS objname,",
        "    l.provider,",
        "    l.label",
        "   FROM (pg_shseclabel l",
        "     JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_seclabels OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_sequence; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_sequence (",
        "    seqrelid oid NOT NULL,",
        "    seqtypid oid NOT NULL,",
        "    seqstart bigint NOT NULL,",
        "    seqincrement bigint NOT NULL,",
        "    seqmax bigint NOT NULL,",
        "    seqmin bigint NOT NULL,",
        "    seqcache bigint NOT NULL,",
        "    seqcycle boolean NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_sequence REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_sequence OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_sequences; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_sequences AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS sequencename,",
        "    pg_get_userbyid(c.relowner) AS sequenceowner,",
        "    (s.seqtypid)::regtype AS data_type,",
        "    s.seqstart AS start_value,",
        "    s.seqmin AS min_value,",
        "    s.seqmax AS max_value,",
        "    s.seqincrement AS increment_by,",
        "    s.seqcycle AS cycle,",
        "    s.seqcache AS cache_size,",
        "        CASE",
        "            WHEN has_sequence_privilege(c.oid, 'SELECT,USAGE'::text) THEN pg_sequence_last_value((c.oid)::regclass)",
        "            ELSE NULL::bigint",
        "        END AS last_value",
        "   FROM ((pg_sequence s",
        "     JOIN pg_class c ON ((c.oid = s.seqrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = 'S'::\"char\"));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_sequences OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_settings; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_settings AS",
        " SELECT a.name,",
        "    a.setting,",
        "    a.unit,",
        "    a.category,",
        "    a.short_desc,",
        "    a.extra_desc,",
        "    a.context,",
        "    a.vartype,",
        "    a.source,",
        "    a.min_val,",
        "    a.max_val,",
        "    a.enumvals,",
        "    a.boot_val,",
        "    a.reset_val,",
        "    a.sourcefile,",
        "    a.sourceline,",
        "    a.pending_restart",
        "   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_settings OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_shadow; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_shadow AS",
        " SELECT pg_authid.rolname AS usename,",
        "    pg_authid.oid AS usesysid,",
        "    pg_authid.rolcreatedb AS usecreatedb,",
        "    pg_authid.rolsuper AS usesuper,",
        "    pg_authid.rolreplication AS userepl,",
        "    pg_authid.rolbypassrls AS usebypassrls,",
        "    pg_authid.rolpassword AS passwd,",
        "    pg_authid.rolvaliduntil AS valuntil,",
        "    s.setconfig AS useconfig",
        "   FROM (pg_authid",
        "     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))",
        "  WHERE pg_authid.rolcanlogin;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_shadow OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_shdepend; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_shdepend (",
        "    dbid oid NOT NULL,",
        "    classid oid NOT NULL,",
        "    objid oid NOT NULL,",
        "    objsubid integer NOT NULL,",
        "    refclassid oid NOT NULL,",
        "    refobjid oid NOT NULL,",
        "    deptype \"char\" NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_shdepend REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_shdepend OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_shdescription; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_shdescription (",
        "    objoid oid NOT NULL,",
        "    classoid oid NOT NULL,",
        "    description text NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_shdescription REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_shdescription OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_shseclabel; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_shseclabel (",
        "    objoid oid NOT NULL,",
        "    classoid oid NOT NULL,",
        "    provider text NOT NULL COLLATE pg_catalog.\"C\",",
        "    label text NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_shseclabel REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_shseclabel OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_activity; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_activity AS",
        " SELECT s.datid,",
        "    d.datname,",
        "    s.pid,",
        "    s.usesysid,",
        "    u.rolname AS usename,",
        "    s.application_name,",
        "    s.client_addr,",
        "    s.client_hostname,",
        "    s.client_port,",
        "    s.backend_start,",
        "    s.xact_start,",
        "    s.query_start,",
        "    s.state_change,",
        "    s.wait_event_type,",
        "    s.wait_event,",
        "    s.state,",
        "    s.backend_xid,",
        "    s.backend_xmin,",
        "    s.query,",
        "    s.backend_type",
        "   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)",
        "     LEFT JOIN pg_database d ON ((s.datid = d.oid)))",
        "     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_activity OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_all_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_all_indexes AS",
        " SELECT c.oid AS relid,",
        "    i.oid AS indexrelid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    i.relname AS indexrelname,",
        "    pg_stat_get_numscans(i.oid) AS idx_scan,",
        "    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,",
        "    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch",
        "   FROM (((pg_class c",
        "     JOIN pg_index x ON ((c.oid = x.indrelid)))",
        "     JOIN pg_class i ON ((i.oid = x.indexrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"]));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_all_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_all_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_all_tables AS",
        " SELECT c.oid AS relid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    pg_stat_get_numscans(c.oid) AS seq_scan,",
        "    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,",
        "    (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,",
        "    ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,",
        "    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,",
        "    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,",
        "    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,",
        "    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,",
        "    pg_stat_get_live_tuples(c.oid) AS n_live_tup,",
        "    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,",
        "    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,",
        "    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,",
        "    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,",
        "    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,",
        "    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,",
        "    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,",
        "    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,",
        "    pg_stat_get_analyze_count(c.oid) AS analyze_count,",
        "    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count",
        "   FROM ((pg_class c",
        "     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"]))",
        "  GROUP BY c.oid, n.nspname, c.relname;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_all_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_archiver; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_archiver AS",
        " SELECT s.archived_count,",
        "    s.last_archived_wal,",
        "    s.last_archived_time,",
        "    s.failed_count,",
        "    s.last_failed_wal,",
        "    s.last_failed_time,",
        "    s.stats_reset",
        "   FROM pg_stat_get_archiver() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_archiver OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_bgwriter; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_bgwriter AS",
        " SELECT pg_stat_get_bgwriter_timed_checkpoints() AS checkpoints_timed,",
        "    pg_stat_get_bgwriter_requested_checkpoints() AS checkpoints_req,",
        "    pg_stat_get_checkpoint_write_time() AS checkpoint_write_time,",
        "    pg_stat_get_checkpoint_sync_time() AS checkpoint_sync_time,",
        "    pg_stat_get_bgwriter_buf_written_checkpoints() AS buffers_checkpoint,",
        "    pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,",
        "    pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,",
        "    pg_stat_get_buf_written_backend() AS buffers_backend,",
        "    pg_stat_get_buf_fsync_backend() AS buffers_backend_fsync,",
        "    pg_stat_get_buf_alloc() AS buffers_alloc,",
        "    pg_stat_get_bgwriter_stat_reset_time() AS stats_reset;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_bgwriter OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_database; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_database AS",
        " SELECT d.oid AS datid,",
        "    d.datname,",
        "        CASE",
        "            WHEN (d.oid = (0)::oid) THEN 0",
        "            ELSE pg_stat_get_db_numbackends(d.oid)",
        "        END AS numbackends,",
        "    pg_stat_get_db_xact_commit(d.oid) AS xact_commit,",
        "    pg_stat_get_db_xact_rollback(d.oid) AS xact_rollback,",
        "    (pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid)) AS blks_read,",
        "    pg_stat_get_db_blocks_hit(d.oid) AS blks_hit,",
        "    pg_stat_get_db_tuples_returned(d.oid) AS tup_returned,",
        "    pg_stat_get_db_tuples_fetched(d.oid) AS tup_fetched,",
        "    pg_stat_get_db_tuples_inserted(d.oid) AS tup_inserted,",
        "    pg_stat_get_db_tuples_updated(d.oid) AS tup_updated,",
        "    pg_stat_get_db_tuples_deleted(d.oid) AS tup_deleted,",
        "    pg_stat_get_db_conflict_all(d.oid) AS conflicts,",
        "    pg_stat_get_db_temp_files(d.oid) AS temp_files,",
        "    pg_stat_get_db_temp_bytes(d.oid) AS temp_bytes,",
        "    pg_stat_get_db_deadlocks(d.oid) AS deadlocks,",
        "    pg_stat_get_db_checksum_failures(d.oid) AS checksum_failures,",
        "    pg_stat_get_db_checksum_last_failure(d.oid) AS checksum_last_failure,",
        "    pg_stat_get_db_blk_read_time(d.oid) AS blk_read_time,",
        "    pg_stat_get_db_blk_write_time(d.oid) AS blk_write_time,",
        "    pg_stat_get_db_stat_reset_time(d.oid) AS stats_reset",
        "   FROM ( SELECT 0 AS oid,",
        "            NULL::name AS datname",
        "        UNION ALL",
        "         SELECT pg_database.oid,",
        "            pg_database.datname",
        "           FROM pg_database) d;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_database OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_database_conflicts; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_database_conflicts AS",
        " SELECT d.oid AS datid,",
        "    d.datname,",
        "    pg_stat_get_db_conflict_tablespace(d.oid) AS confl_tablespace,",
        "    pg_stat_get_db_conflict_lock(d.oid) AS confl_lock,",
        "    pg_stat_get_db_conflict_snapshot(d.oid) AS confl_snapshot,",
        "    pg_stat_get_db_conflict_bufferpin(d.oid) AS confl_bufferpin,",
        "    pg_stat_get_db_conflict_startup_deadlock(d.oid) AS confl_deadlock",
        "   FROM pg_database d;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_database_conflicts OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_gssapi; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_gssapi AS",
        " SELECT s.pid,",
        "    s.gss_auth AS gss_authenticated,",
        "    s.gss_princ AS principal,",
        "    s.gss_enc AS encrypted",
        "   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_gssapi OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_progress_cluster; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_progress_cluster AS",
        " SELECT s.pid,",
        "    s.datid,",
        "    d.datname,",
        "    s.relid,",
        "        CASE s.param1",
        "            WHEN 1 THEN 'CLUSTER'::text",
        "            WHEN 2 THEN 'VACUUM FULL'::text",
        "            ELSE NULL::text",
        "        END AS command,",
        "        CASE s.param2",
        "            WHEN 0 THEN 'initializing'::text",
        "            WHEN 1 THEN 'seq scanning heap'::text",
        "            WHEN 2 THEN 'index scanning heap'::text",
        "            WHEN 3 THEN 'sorting tuples'::text",
        "            WHEN 4 THEN 'writing new heap'::text",
        "            WHEN 5 THEN 'swapping relation files'::text",
        "            WHEN 6 THEN 'rebuilding index'::text",
        "            WHEN 7 THEN 'performing final cleanup'::text",
        "            ELSE NULL::text",
        "        END AS phase,",
        "    (s.param3)::oid AS cluster_index_relid,",
        "    s.param4 AS heap_tuples_scanned,",
        "    s.param5 AS heap_tuples_written,",
        "    s.param6 AS heap_blks_total,",
        "    s.param7 AS heap_blks_scanned,",
        "    s.param8 AS index_rebuild_count",
        "   FROM (pg_stat_get_progress_info('CLUSTER'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)",
        "     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_progress_cluster OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_progress_create_index; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_progress_create_index AS",
        " SELECT s.pid,",
        "    s.datid,",
        "    d.datname,",
        "    s.relid,",
        "    (s.param7)::oid AS index_relid,",
        "        CASE s.param1",
        "            WHEN 1 THEN 'CREATE INDEX'::text",
        "            WHEN 2 THEN 'CREATE INDEX CONCURRENTLY'::text",
        "            WHEN 3 THEN 'REINDEX'::text",
        "            WHEN 4 THEN 'REINDEX CONCURRENTLY'::text",
        "            ELSE NULL::text",
        "        END AS command,",
        "        CASE s.param10",
        "            WHEN 0 THEN 'initializing'::text",
        "            WHEN 1 THEN 'waiting for writers before build'::text",
        "            WHEN 2 THEN ('building index'::text || COALESCE((': '::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), ''::text))",
        "            WHEN 3 THEN 'waiting for writers before validation'::text",
        "            WHEN 4 THEN 'index validation: scanning index'::text",
        "            WHEN 5 THEN 'index validation: sorting tuples'::text",
        "            WHEN 6 THEN 'index validation: scanning table'::text",
        "            WHEN 7 THEN 'waiting for old snapshots'::text",
        "            WHEN 8 THEN 'waiting for readers before marking dead'::text",
        "            WHEN 9 THEN 'waiting for readers before dropping'::text",
        "            ELSE NULL::text",
        "        END AS phase,",
        "    s.param4 AS lockers_total,",
        "    s.param5 AS lockers_done,",
        "    s.param6 AS current_locker_pid,",
        "    s.param16 AS blocks_total,",
        "    s.param17 AS blocks_done,",
        "    s.param12 AS tuples_total,",
        "    s.param13 AS tuples_done,",
        "    s.param14 AS partitions_total,",
        "    s.param15 AS partitions_done",
        "   FROM (pg_stat_get_progress_info('CREATE INDEX'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)",
        "     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_progress_create_index OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_progress_vacuum; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_progress_vacuum AS",
        " SELECT s.pid,",
        "    s.datid,",
        "    d.datname,",
        "    s.relid,",
        "        CASE s.param1",
        "            WHEN 0 THEN 'initializing'::text",
        "            WHEN 1 THEN 'scanning heap'::text",
        "            WHEN 2 THEN 'vacuuming indexes'::text",
        "            WHEN 3 THEN 'vacuuming heap'::text",
        "            WHEN 4 THEN 'cleaning up indexes'::text",
        "            WHEN 5 THEN 'truncating heap'::text",
        "            WHEN 6 THEN 'performing final cleanup'::text",
        "            ELSE NULL::text",
        "        END AS phase,",
        "    s.param2 AS heap_blks_total,",
        "    s.param3 AS heap_blks_scanned,",
        "    s.param4 AS heap_blks_vacuumed,",
        "    s.param5 AS index_vacuum_count,",
        "    s.param6 AS max_dead_tuples,",
        "    s.param7 AS num_dead_tuples",
        "   FROM (pg_stat_get_progress_info('VACUUM'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)",
        "     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_progress_vacuum OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_replication; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_replication AS",
        " SELECT s.pid,",
        "    s.usesysid,",
        "    u.rolname AS usename,",
        "    s.application_name,",
        "    s.client_addr,",
        "    s.client_hostname,",
        "    s.client_port,",
        "    s.backend_start,",
        "    s.backend_xmin,",
        "    w.state,",
        "    w.sent_lsn,",
        "    w.write_lsn,",
        "    w.flush_lsn,",
        "    w.replay_lsn,",
        "    w.write_lag,",
        "    w.flush_lag,",
        "    w.replay_lag,",
        "    w.sync_priority,",
        "    w.sync_state,",
        "    w.reply_time",
        "   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)",
        "     JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))",
        "     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_replication OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_ssl; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_ssl AS",
        " SELECT s.pid,",
        "    s.ssl,",
        "    s.sslversion AS version,",
        "    s.sslcipher AS cipher,",
        "    s.sslbits AS bits,",
        "    s.sslcompression AS compression,",
        "    s.ssl_client_dn AS client_dn,",
        "    s.ssl_client_serial AS client_serial,",
        "    s.ssl_issuer_dn AS issuer_dn",
        "   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_ssl OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_subscription; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_subscription AS",
        " SELECT su.oid AS subid,",
        "    su.subname,",
        "    st.pid,",
        "    st.relid,",
        "    st.received_lsn,",
        "    st.last_msg_send_time,",
        "    st.last_msg_receipt_time,",
        "    st.latest_end_lsn,",
        "    st.latest_end_time",
        "   FROM (pg_subscription su",
        "     LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time) ON ((st.subid = su.oid)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_subscription OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_sys_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_sys_indexes AS",
        " SELECT pg_stat_all_indexes.relid,",
        "    pg_stat_all_indexes.indexrelid,",
        "    pg_stat_all_indexes.schemaname,",
        "    pg_stat_all_indexes.relname,",
        "    pg_stat_all_indexes.indexrelname,",
        "    pg_stat_all_indexes.idx_scan,",
        "    pg_stat_all_indexes.idx_tup_read,",
        "    pg_stat_all_indexes.idx_tup_fetch",
        "   FROM pg_stat_all_indexes",
        "  WHERE ((pg_stat_all_indexes.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_all_indexes.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_sys_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_sys_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_sys_tables AS",
        " SELECT pg_stat_all_tables.relid,",
        "    pg_stat_all_tables.schemaname,",
        "    pg_stat_all_tables.relname,",
        "    pg_stat_all_tables.seq_scan,",
        "    pg_stat_all_tables.seq_tup_read,",
        "    pg_stat_all_tables.idx_scan,",
        "    pg_stat_all_tables.idx_tup_fetch,",
        "    pg_stat_all_tables.n_tup_ins,",
        "    pg_stat_all_tables.n_tup_upd,",
        "    pg_stat_all_tables.n_tup_del,",
        "    pg_stat_all_tables.n_tup_hot_upd,",
        "    pg_stat_all_tables.n_live_tup,",
        "    pg_stat_all_tables.n_dead_tup,",
        "    pg_stat_all_tables.n_mod_since_analyze,",
        "    pg_stat_all_tables.last_vacuum,",
        "    pg_stat_all_tables.last_autovacuum,",
        "    pg_stat_all_tables.last_analyze,",
        "    pg_stat_all_tables.last_autoanalyze,",
        "    pg_stat_all_tables.vacuum_count,",
        "    pg_stat_all_tables.autovacuum_count,",
        "    pg_stat_all_tables.analyze_count,",
        "    pg_stat_all_tables.autoanalyze_count",
        "   FROM pg_stat_all_tables",
        "  WHERE ((pg_stat_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_all_tables.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_sys_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_user_functions; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_user_functions AS",
        " SELECT p.oid AS funcid,",
        "    n.nspname AS schemaname,",
        "    p.proname AS funcname,",
        "    pg_stat_get_function_calls(p.oid) AS calls,",
        "    pg_stat_get_function_total_time(p.oid) AS total_time,",
        "    pg_stat_get_function_self_time(p.oid) AS self_time",
        "   FROM (pg_proc p",
        "     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))",
        "  WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_user_functions OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_user_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_user_indexes AS",
        " SELECT pg_stat_all_indexes.relid,",
        "    pg_stat_all_indexes.indexrelid,",
        "    pg_stat_all_indexes.schemaname,",
        "    pg_stat_all_indexes.relname,",
        "    pg_stat_all_indexes.indexrelname,",
        "    pg_stat_all_indexes.idx_scan,",
        "    pg_stat_all_indexes.idx_tup_read,",
        "    pg_stat_all_indexes.idx_tup_fetch",
        "   FROM pg_stat_all_indexes",
        "  WHERE ((pg_stat_all_indexes.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_all_indexes.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_user_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_user_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_user_tables AS",
        " SELECT pg_stat_all_tables.relid,",
        "    pg_stat_all_tables.schemaname,",
        "    pg_stat_all_tables.relname,",
        "    pg_stat_all_tables.seq_scan,",
        "    pg_stat_all_tables.seq_tup_read,",
        "    pg_stat_all_tables.idx_scan,",
        "    pg_stat_all_tables.idx_tup_fetch,",
        "    pg_stat_all_tables.n_tup_ins,",
        "    pg_stat_all_tables.n_tup_upd,",
        "    pg_stat_all_tables.n_tup_del,",
        "    pg_stat_all_tables.n_tup_hot_upd,",
        "    pg_stat_all_tables.n_live_tup,",
        "    pg_stat_all_tables.n_dead_tup,",
        "    pg_stat_all_tables.n_mod_since_analyze,",
        "    pg_stat_all_tables.last_vacuum,",
        "    pg_stat_all_tables.last_autovacuum,",
        "    pg_stat_all_tables.last_analyze,",
        "    pg_stat_all_tables.last_autoanalyze,",
        "    pg_stat_all_tables.vacuum_count,",
        "    pg_stat_all_tables.autovacuum_count,",
        "    pg_stat_all_tables.analyze_count,",
        "    pg_stat_all_tables.autoanalyze_count",
        "   FROM pg_stat_all_tables",
        "  WHERE ((pg_stat_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_all_tables.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_user_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_wal_receiver; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_wal_receiver AS",
        " SELECT s.pid,",
        "    s.status,",
        "    s.receive_start_lsn,",
        "    s.receive_start_tli,",
        "    s.received_lsn,",
        "    s.received_tli,",
        "    s.last_msg_send_time,",
        "    s.last_msg_receipt_time,",
        "    s.latest_end_lsn,",
        "    s.latest_end_time,",
        "    s.slot_name,",
        "    s.sender_host,",
        "    s.sender_port,",
        "    s.conninfo",
        "   FROM pg_stat_get_wal_receiver() s(pid, status, receive_start_lsn, receive_start_tli, received_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)",
        "  WHERE (s.pid IS NOT NULL);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_wal_receiver OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_xact_all_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_xact_all_tables AS",
        " SELECT c.oid AS relid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    pg_stat_get_xact_numscans(c.oid) AS seq_scan,",
        "    pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,",
        "    (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,",
        "    ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,",
        "    pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,",
        "    pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,",
        "    pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,",
        "    pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd",
        "   FROM ((pg_class c",
        "     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"]))",
        "  GROUP BY c.oid, n.nspname, c.relname;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_xact_all_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_xact_sys_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_xact_sys_tables AS",
        " SELECT pg_stat_xact_all_tables.relid,",
        "    pg_stat_xact_all_tables.schemaname,",
        "    pg_stat_xact_all_tables.relname,",
        "    pg_stat_xact_all_tables.seq_scan,",
        "    pg_stat_xact_all_tables.seq_tup_read,",
        "    pg_stat_xact_all_tables.idx_scan,",
        "    pg_stat_xact_all_tables.idx_tup_fetch,",
        "    pg_stat_xact_all_tables.n_tup_ins,",
        "    pg_stat_xact_all_tables.n_tup_upd,",
        "    pg_stat_xact_all_tables.n_tup_del,",
        "    pg_stat_xact_all_tables.n_tup_hot_upd",
        "   FROM pg_stat_xact_all_tables",
        "  WHERE ((pg_stat_xact_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_stat_xact_all_tables.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_xact_sys_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_xact_user_functions; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_xact_user_functions AS",
        " SELECT p.oid AS funcid,",
        "    n.nspname AS schemaname,",
        "    p.proname AS funcname,",
        "    pg_stat_get_xact_function_calls(p.oid) AS calls,",
        "    pg_stat_get_xact_function_total_time(p.oid) AS total_time,",
        "    pg_stat_get_xact_function_self_time(p.oid) AS self_time",
        "   FROM (pg_proc p",
        "     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))",
        "  WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_xact_user_functions OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stat_xact_user_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stat_xact_user_tables AS",
        " SELECT pg_stat_xact_all_tables.relid,",
        "    pg_stat_xact_all_tables.schemaname,",
        "    pg_stat_xact_all_tables.relname,",
        "    pg_stat_xact_all_tables.seq_scan,",
        "    pg_stat_xact_all_tables.seq_tup_read,",
        "    pg_stat_xact_all_tables.idx_scan,",
        "    pg_stat_xact_all_tables.idx_tup_fetch,",
        "    pg_stat_xact_all_tables.n_tup_ins,",
        "    pg_stat_xact_all_tables.n_tup_upd,",
        "    pg_stat_xact_all_tables.n_tup_del,",
        "    pg_stat_xact_all_tables.n_tup_hot_upd",
        "   FROM pg_stat_xact_all_tables",
        "  WHERE ((pg_stat_xact_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_stat_xact_all_tables.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stat_xact_user_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_all_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_all_indexes AS",
        " SELECT c.oid AS relid,",
        "    i.oid AS indexrelid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    i.relname AS indexrelname,",
        "    (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,",
        "    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit",
        "   FROM (((pg_class c",
        "     JOIN pg_index x ON ((c.oid = x.indrelid)))",
        "     JOIN pg_class i ON ((i.oid = x.indexrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"]));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_all_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_all_sequences; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_all_sequences AS",
        " SELECT c.oid AS relid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,",
        "    pg_stat_get_blocks_hit(c.oid) AS blks_hit",
        "   FROM (pg_class c",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = 'S'::\"char\");",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_all_sequences OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_all_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_all_tables AS",
        " SELECT c.oid AS relid,",
        "    n.nspname AS schemaname,",
        "    c.relname,",
        "    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,",
        "    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,",
        "    (sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint AS idx_blks_read,",
        "    (sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint AS idx_blks_hit,",
        "    (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,",
        "    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,",
        "    (sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint AS tidx_blks_read,",
        "    (sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint AS tidx_blks_hit",
        "   FROM ((((pg_class c",
        "     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))",
        "     LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))",
        "     LEFT JOIN pg_index x ON ((t.oid = x.indrelid)))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 't'::\"char\", 'm'::\"char\"]))",
        "  GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_all_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_sys_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_sys_indexes AS",
        " SELECT pg_statio_all_indexes.relid,",
        "    pg_statio_all_indexes.indexrelid,",
        "    pg_statio_all_indexes.schemaname,",
        "    pg_statio_all_indexes.relname,",
        "    pg_statio_all_indexes.indexrelname,",
        "    pg_statio_all_indexes.idx_blks_read,",
        "    pg_statio_all_indexes.idx_blks_hit",
        "   FROM pg_statio_all_indexes",
        "  WHERE ((pg_statio_all_indexes.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_indexes.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_sys_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_sys_sequences; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_sys_sequences AS",
        " SELECT pg_statio_all_sequences.relid,",
        "    pg_statio_all_sequences.schemaname,",
        "    pg_statio_all_sequences.relname,",
        "    pg_statio_all_sequences.blks_read,",
        "    pg_statio_all_sequences.blks_hit",
        "   FROM pg_statio_all_sequences",
        "  WHERE ((pg_statio_all_sequences.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_sequences.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_sys_sequences OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_sys_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_sys_tables AS",
        " SELECT pg_statio_all_tables.relid,",
        "    pg_statio_all_tables.schemaname,",
        "    pg_statio_all_tables.relname,",
        "    pg_statio_all_tables.heap_blks_read,",
        "    pg_statio_all_tables.heap_blks_hit,",
        "    pg_statio_all_tables.idx_blks_read,",
        "    pg_statio_all_tables.idx_blks_hit,",
        "    pg_statio_all_tables.toast_blks_read,",
        "    pg_statio_all_tables.toast_blks_hit,",
        "    pg_statio_all_tables.tidx_blks_read,",
        "    pg_statio_all_tables.tidx_blks_hit",
        "   FROM pg_statio_all_tables",
        "  WHERE ((pg_statio_all_tables.schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (pg_statio_all_tables.schemaname ~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_sys_tables OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_user_indexes; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_user_indexes AS",
        " SELECT pg_statio_all_indexes.relid,",
        "    pg_statio_all_indexes.indexrelid,",
        "    pg_statio_all_indexes.schemaname,",
        "    pg_statio_all_indexes.relname,",
        "    pg_statio_all_indexes.indexrelname,",
        "    pg_statio_all_indexes.idx_blks_read,",
        "    pg_statio_all_indexes.idx_blks_hit",
        "   FROM pg_statio_all_indexes",
        "  WHERE ((pg_statio_all_indexes.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_indexes.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_user_indexes OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_user_sequences; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_user_sequences AS",
        " SELECT pg_statio_all_sequences.relid,",
        "    pg_statio_all_sequences.schemaname,",
        "    pg_statio_all_sequences.relname,",
        "    pg_statio_all_sequences.blks_read,",
        "    pg_statio_all_sequences.blks_hit",
        "   FROM pg_statio_all_sequences",
        "  WHERE ((pg_statio_all_sequences.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_sequences.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_user_sequences OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statio_user_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_statio_user_tables AS",
        " SELECT pg_statio_all_tables.relid,",
        "    pg_statio_all_tables.schemaname,",
        "    pg_statio_all_tables.relname,",
        "    pg_statio_all_tables.heap_blks_read,",
        "    pg_statio_all_tables.heap_blks_hit,",
        "    pg_statio_all_tables.idx_blks_read,",
        "    pg_statio_all_tables.idx_blks_hit,",
        "    pg_statio_all_tables.toast_blks_read,",
        "    pg_statio_all_tables.toast_blks_hit,",
        "    pg_statio_all_tables.tidx_blks_read,",
        "    pg_statio_all_tables.tidx_blks_hit",
        "   FROM pg_statio_all_tables",
        "  WHERE ((pg_statio_all_tables.schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (pg_statio_all_tables.schemaname !~ '^pg_toast'::text));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statio_user_tables OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_statistic; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_statistic (",
        "    starelid oid NOT NULL,",
        "    staattnum smallint NOT NULL,",
        "    stainherit boolean NOT NULL,",
        "    stanullfrac real NOT NULL,",
        "    stawidth integer NOT NULL,",
        "    stadistinct real NOT NULL,",
        "    stakind1 smallint NOT NULL,",
        "    stakind2 smallint NOT NULL,",
        "    stakind3 smallint NOT NULL,",
        "    stakind4 smallint NOT NULL,",
        "    stakind5 smallint NOT NULL,",
        "    staop1 oid NOT NULL,",
        "    staop2 oid NOT NULL,",
        "    staop3 oid NOT NULL,",
        "    staop4 oid NOT NULL,",
        "    staop5 oid NOT NULL,",
        "    stacoll1 oid NOT NULL,",
        "    stacoll2 oid NOT NULL,",
        "    stacoll3 oid NOT NULL,",
        "    stacoll4 oid NOT NULL,",
        "    stacoll5 oid NOT NULL,",
        "    stanumbers1 real[],",
        "    stanumbers2 real[],",
        "    stanumbers3 real[],",
        "    stanumbers4 real[],",
        "    stanumbers5 real[],",
        "    stavalues1 anyarray,",
        "    stavalues2 anyarray,",
        "    stavalues3 anyarray,",
        "    stavalues4 anyarray,",
        "    stavalues5 anyarray",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_statistic REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statistic OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statistic_ext; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_statistic_ext (",
        "    oid oid NOT NULL,",
        "    stxrelid oid NOT NULL,",
        "    stxname name NOT NULL,",
        "    stxnamespace oid NOT NULL,",
        "    stxowner oid NOT NULL,",
        "    stxkeys int2vector NOT NULL,",
        "    stxkind \"char\"[] NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_statistic_ext REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statistic_ext OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_statistic_ext_data; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_statistic_ext_data (",
        "    stxoid oid NOT NULL,",
        "    stxdndistinct pg_ndistinct COLLATE pg_catalog.\"C\",",
        "    stxddependencies pg_dependencies COLLATE pg_catalog.\"C\",",
        "    stxdmcv pg_mcv_list COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_statistic_ext_data REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_statistic_ext_data OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stats; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stats WITH (security_barrier='true') AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    a.attname,",
        "    s.stainherit AS inherited,",
        "    s.stanullfrac AS null_frac,",
        "    s.stawidth AS avg_width,",
        "    s.stadistinct AS n_distinct,",
        "        CASE",
        "            WHEN (s.stakind1 = 1) THEN s.stavalues1",
        "            WHEN (s.stakind2 = 1) THEN s.stavalues2",
        "            WHEN (s.stakind3 = 1) THEN s.stavalues3",
        "            WHEN (s.stakind4 = 1) THEN s.stavalues4",
        "            WHEN (s.stakind5 = 1) THEN s.stavalues5",
        "            ELSE NULL::anyarray",
        "        END AS most_common_vals,",
        "        CASE",
        "            WHEN (s.stakind1 = 1) THEN s.stanumbers1",
        "            WHEN (s.stakind2 = 1) THEN s.stanumbers2",
        "            WHEN (s.stakind3 = 1) THEN s.stanumbers3",
        "            WHEN (s.stakind4 = 1) THEN s.stanumbers4",
        "            WHEN (s.stakind5 = 1) THEN s.stanumbers5",
        "            ELSE NULL::real[]",
        "        END AS most_common_freqs,",
        "        CASE",
        "            WHEN (s.stakind1 = 2) THEN s.stavalues1",
        "            WHEN (s.stakind2 = 2) THEN s.stavalues2",
        "            WHEN (s.stakind3 = 2) THEN s.stavalues3",
        "            WHEN (s.stakind4 = 2) THEN s.stavalues4",
        "            WHEN (s.stakind5 = 2) THEN s.stavalues5",
        "            ELSE NULL::anyarray",
        "        END AS histogram_bounds,",
        "        CASE",
        "            WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]",
        "            WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]",
        "            WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]",
        "            WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]",
        "            WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]",
        "            ELSE NULL::real",
        "        END AS correlation,",
        "        CASE",
        "            WHEN (s.stakind1 = 4) THEN s.stavalues1",
        "            WHEN (s.stakind2 = 4) THEN s.stavalues2",
        "            WHEN (s.stakind3 = 4) THEN s.stavalues3",
        "            WHEN (s.stakind4 = 4) THEN s.stavalues4",
        "            WHEN (s.stakind5 = 4) THEN s.stavalues5",
        "            ELSE NULL::anyarray",
        "        END AS most_common_elems,",
        "        CASE",
        "            WHEN (s.stakind1 = 4) THEN s.stanumbers1",
        "            WHEN (s.stakind2 = 4) THEN s.stanumbers2",
        "            WHEN (s.stakind3 = 4) THEN s.stanumbers3",
        "            WHEN (s.stakind4 = 4) THEN s.stanumbers4",
        "            WHEN (s.stakind5 = 4) THEN s.stanumbers5",
        "            ELSE NULL::real[]",
        "        END AS most_common_elem_freqs,",
        "        CASE",
        "            WHEN (s.stakind1 = 5) THEN s.stanumbers1",
        "            WHEN (s.stakind2 = 5) THEN s.stanumbers2",
        "            WHEN (s.stakind3 = 5) THEN s.stanumbers3",
        "            WHEN (s.stakind4 = 5) THEN s.stanumbers4",
        "            WHEN (s.stakind5 = 5) THEN s.stanumbers5",
        "            ELSE NULL::real[]",
        "        END AS elem_count_histogram",
        "   FROM (((pg_statistic s",
        "     JOIN pg_class c ON ((c.oid = s.starelid)))",
        "     JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, 'select'::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stats OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_stats_ext; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_stats_ext WITH (security_barrier='true') AS",
        " SELECT cn.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    sn.nspname AS statistics_schemaname,",
        "    s.stxname AS statistics_name,",
        "    pg_get_userbyid(s.stxowner) AS statistics_owner,",
        "    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg",
        "           FROM (unnest(s.stxkeys) k(k)",
        "             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,",
        "    s.stxkind AS kinds,",
        "    sd.stxdndistinct AS n_distinct,",
        "    sd.stxddependencies AS dependencies,",
        "    m.most_common_vals,",
        "    m.most_common_val_nulls,",
        "    m.most_common_freqs,",
        "    m.most_common_base_freqs",
        "   FROM (((((pg_statistic_ext s",
        "     JOIN pg_class c ON ((c.oid = s.stxrelid)))",
        "     JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))",
        "     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))",
        "     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))",
        "     LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items.\"values\") AS most_common_vals,",
        "            array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,",
        "            array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,",
        "            array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs",
        "           FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, \"values\", nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))",
        "  WHERE ((NOT (EXISTS ( SELECT 1",
        "           FROM (unnest(s.stxkeys) k(k)",
        "             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))",
        "          WHERE (NOT has_column_privilege(c.oid, a.attnum, 'select'::text))))) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_stats_ext OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_subscription; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_subscription (",
        "    oid oid NOT NULL,",
        "    subdbid oid NOT NULL,",
        "    subname name NOT NULL,",
        "    subowner oid NOT NULL,",
        "    subenabled boolean NOT NULL,",
        "    subconninfo text NOT NULL COLLATE pg_catalog.\"C\",",
        "    subslotname name NOT NULL,",
        "    subsynccommit text NOT NULL COLLATE pg_catalog.\"C\",",
        "    subpublications text[] NOT NULL COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_subscription REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_subscription OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_subscription_rel; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_subscription_rel (",
        "    srsubid oid NOT NULL,",
        "    srrelid oid NOT NULL,",
        "    srsubstate \"char\" NOT NULL,",
        "    srsublsn pg_lsn NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_subscription_rel REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_subscription_rel OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_tables; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_tables AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS tablename,",
        "    pg_get_userbyid(c.relowner) AS tableowner,",
        "    t.spcname AS tablespace,",
        "    c.relhasindex AS hasindexes,",
        "    c.relhasrules AS hasrules,",
        "    c.relhastriggers AS hastriggers,",
        "    c.relrowsecurity AS rowsecurity",
        "   FROM ((pg_class c",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))",
        "  WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"]));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_tables OWNER TO postgres;",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_tablespace; Type: TABLE; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_tablespace (",
        "    oid oid NOT NULL,",
        "    spcname name NOT NULL,",
        "    spcowner oid NOT NULL,",
        "    spcacl aclitem[],",
        "    spcoptions text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_tablespace REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_tablespace OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_timezone_abbrevs; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_timezone_abbrevs AS",
        " SELECT pg_timezone_abbrevs.abbrev,",
        "    pg_timezone_abbrevs.utc_offset,",
        "    pg_timezone_abbrevs.is_dst",
        "   FROM pg_timezone_abbrevs() pg_timezone_abbrevs(abbrev, utc_offset, is_dst);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_timezone_abbrevs OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_timezone_names; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_timezone_names AS",
        " SELECT pg_timezone_names.name,",
        "    pg_timezone_names.abbrev,",
        "    pg_timezone_names.utc_offset,",
        "    pg_timezone_names.is_dst",
        "   FROM pg_timezone_names() pg_timezone_names(name, abbrev, utc_offset, is_dst);",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_timezone_names OWNER TO postgres;",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_transform; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_transform (",
        "    oid oid NOT NULL,",
        "    trftype oid NOT NULL,",
        "    trflang oid NOT NULL,",
        "    trffromsql regproc NOT NULL,",
        "    trftosql regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_transform REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_transform OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_trigger; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_trigger (",
        "    oid oid NOT NULL,",
        "    tgrelid oid NOT NULL,",
        "    tgname name NOT NULL,",
        "    tgfoid oid NOT NULL,",
        "    tgtype smallint NOT NULL,",
        "    tgenabled \"char\" NOT NULL,",
        "    tgisinternal boolean NOT NULL,",
        "    tgconstrrelid oid NOT NULL,",
        "    tgconstrindid oid NOT NULL,",
        "    tgconstraint oid NOT NULL,",
        "    tgdeferrable boolean NOT NULL,",
        "    tginitdeferred boolean NOT NULL,",
        "    tgnargs smallint NOT NULL,",
        "    tgattr int2vector NOT NULL,",
        "    tgargs bytea NOT NULL,",
        "    tgqual pg_node_tree COLLATE pg_catalog.\"C\",",
        "    tgoldtable name,",
        "    tgnewtable name",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_trigger REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_trigger OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_ts_config; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_ts_config (",
        "    oid oid NOT NULL,",
        "    cfgname name NOT NULL,",
        "    cfgnamespace oid NOT NULL,",
        "    cfgowner oid NOT NULL,",
        "    cfgparser oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_ts_config REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_ts_config OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_ts_config_map; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_ts_config_map (",
        "    mapcfg oid NOT NULL,",
        "    maptokentype integer NOT NULL,",
        "    mapseqno integer NOT NULL,",
        "    mapdict oid NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_ts_config_map REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_ts_config_map OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_ts_dict; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_ts_dict (",
        "    oid oid NOT NULL,",
        "    dictname name NOT NULL,",
        "    dictnamespace oid NOT NULL,",
        "    dictowner oid NOT NULL,",
        "    dicttemplate oid NOT NULL,",
        "    dictinitoption text COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_ts_dict REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_ts_dict OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_ts_parser; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_ts_parser (",
        "    oid oid NOT NULL,",
        "    prsname name NOT NULL,",
        "    prsnamespace oid NOT NULL,",
        "    prsstart regproc NOT NULL,",
        "    prstoken regproc NOT NULL,",
        "    prsend regproc NOT NULL,",
        "    prsheadline regproc NOT NULL,",
        "    prslextype regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_ts_parser REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_ts_parser OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_ts_template; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_ts_template (",
        "    oid oid NOT NULL,",
        "    tmplname name NOT NULL,",
        "    tmplnamespace oid NOT NULL,",
        "    tmplinit regproc NOT NULL,",
        "    tmpllexize regproc NOT NULL",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_ts_template REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_ts_template OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_type; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_type (",
        "    oid oid NOT NULL,",
        "    typname name NOT NULL,",
        "    typnamespace oid NOT NULL,",
        "    typowner oid NOT NULL,",
        "    typlen smallint NOT NULL,",
        "    typbyval boolean NOT NULL,",
        "    typtype \"char\" NOT NULL,",
        "    typcategory \"char\" NOT NULL,",
        "    typispreferred boolean NOT NULL,",
        "    typisdefined boolean NOT NULL,",
        "    typdelim \"char\" NOT NULL,",
        "    typrelid oid NOT NULL,",
        "    typelem oid NOT NULL,",
        "    typarray oid NOT NULL,",
        "    typinput regproc NOT NULL,",
        "    typoutput regproc NOT NULL,",
        "    typreceive regproc NOT NULL,",
        "    typsend regproc NOT NULL,",
        "    typmodin regproc NOT NULL,",
        "    typmodout regproc NOT NULL,",
        "    typanalyze regproc NOT NULL,",
        "    typalign \"char\" NOT NULL,",
        "    typstorage \"char\" NOT NULL,",
        "    typnotnull boolean NOT NULL,",
        "    typbasetype oid NOT NULL,",
        "    typtypmod integer NOT NULL,",
        "    typndims integer NOT NULL,",
        "    typcollation oid NOT NULL,",
        "    typdefaultbin pg_node_tree COLLATE pg_catalog.\"C\",",
        "    typdefault text COLLATE pg_catalog.\"C\",",
        "    typacl aclitem[]",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_type REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_type OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_user; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_user AS",
        " SELECT pg_shadow.usename,",
        "    pg_shadow.usesysid,",
        "    pg_shadow.usecreatedb,",
        "    pg_shadow.usesuper,",
        "    pg_shadow.userepl,",
        "    pg_shadow.usebypassrls,",
        "    '********'::text AS passwd,",
        "    pg_shadow.valuntil,",
        "    pg_shadow.useconfig",
        "   FROM pg_shadow;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_user OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_user_mapping; Type: TABLE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE TABLE pg_catalog.pg_user_mapping (",
        "    oid oid NOT NULL,",
        "    umuser oid NOT NULL,",
        "    umserver oid NOT NULL,",
        "    umoptions text[] COLLATE pg_catalog.\"C\"",
        ");",
        "",
        "ALTER TABLE ONLY pg_catalog.pg_user_mapping REPLICA IDENTITY NOTHING;",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_user_mapping OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_user_mappings; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_user_mappings AS",
        " SELECT u.oid AS umid,",
        "    s.oid AS srvid,",
        "    s.srvname,",
        "    u.umuser,",
        "        CASE",
        "            WHEN (u.umuser = (0)::oid) THEN 'public'::name",
        "            ELSE a.rolname",
        "        END AS usename,",
        "        CASE",
        "            WHEN (((u.umuser <> (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper",
        "               FROM pg_authid",
        "              WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions",
        "            ELSE NULL::text[]",
        "        END AS umoptions",
        "   FROM ((pg_user_mapping u",
        "     JOIN pg_foreign_server s ON ((u.umserver = s.oid)))",
        "     LEFT JOIN pg_authid a ON ((a.oid = u.umuser)));",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_user_mappings OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_views; Type: VIEW; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE VIEW pg_catalog.pg_views AS",
        " SELECT n.nspname AS schemaname,",
        "    c.relname AS viewname,",
        "    pg_get_userbyid(c.relowner) AS viewowner,",
        "    pg_get_viewdef(c.oid) AS definition",
        "   FROM (pg_class c",
        "     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))",
        "  WHERE (c.relkind = 'v'::\"char\");",
        "",
        "",
        "ALTER TABLE pg_catalog.pg_views OWNER TO postgres;",
        "",
        "--",
        "-- Name: pg_aggregate_fnoid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_aggregate_fnoid_index ON pg_catalog.pg_aggregate USING btree (aggfnoid);",
        "",
        "",
        "--",
        "-- Name: pg_am_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_am_name_index ON pg_catalog.pg_am USING btree (amname);",
        "",
        "",
        "--",
        "-- Name: pg_am_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_am_oid_index ON pg_catalog.pg_am USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_amop_fam_strat_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_amop_fam_strat_index ON pg_catalog.pg_amop USING btree (amopfamily, amoplefttype, amoprighttype, amopstrategy);",
        "",
        "",
        "--",
        "-- Name: pg_amop_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_amop_oid_index ON pg_catalog.pg_amop USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_amop_opr_fam_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_amop_opr_fam_index ON pg_catalog.pg_amop USING btree (amopopr, amoppurpose, amopfamily);",
        "",
        "",
        "--",
        "-- Name: pg_amproc_fam_proc_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_amproc_fam_proc_index ON pg_catalog.pg_amproc USING btree (amprocfamily, amproclefttype, amprocrighttype, amprocnum);",
        "",
        "",
        "--",
        "-- Name: pg_amproc_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_amproc_oid_index ON pg_catalog.pg_amproc USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_attrdef_adrelid_adnum_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_attrdef_adrelid_adnum_index ON pg_catalog.pg_attrdef USING btree (adrelid, adnum);",
        "",
        "",
        "--",
        "-- Name: pg_attrdef_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_attrdef_oid_index ON pg_catalog.pg_attrdef USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_attribute_relid_attnam_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_attribute_relid_attnam_index ON pg_catalog.pg_attribute USING btree (attrelid, attname);",
        "",
        "",
        "--",
        "-- Name: pg_attribute_relid_attnum_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_attribute_relid_attnum_index ON pg_catalog.pg_attribute USING btree (attrelid, attnum);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_auth_members_member_role_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_auth_members_member_role_index ON pg_catalog.pg_auth_members USING btree (member, roleid);",
        "",
        "",
        "--",
        "-- Name: pg_auth_members_role_member_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_auth_members_role_member_index ON pg_catalog.pg_auth_members USING btree (roleid, member);",
        "",
        "",
        "--",
        "-- Name: pg_authid_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_authid_oid_index ON pg_catalog.pg_authid USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_authid_rolname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_authid_rolname_index ON pg_catalog.pg_authid USING btree (rolname);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_cast_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_cast_oid_index ON pg_catalog.pg_cast USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_cast_source_target_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_cast_source_target_index ON pg_catalog.pg_cast USING btree (castsource, casttarget);",
        "",
        "",
        "--",
        "-- Name: pg_class_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_class_oid_index ON pg_catalog.pg_class USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_class_relname_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_class_relname_nsp_index ON pg_catalog.pg_class USING btree (relname, relnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_class_tblspc_relfilenode_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_class_tblspc_relfilenode_index ON pg_catalog.pg_class USING btree (reltablespace, relfilenode);",
        "",
        "",
        "--",
        "-- Name: pg_collation_name_enc_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_collation_name_enc_nsp_index ON pg_catalog.pg_collation USING btree (collname, collencoding, collnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_collation_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_collation_oid_index ON pg_catalog.pg_collation USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_constraint_conname_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_constraint_conname_nsp_index ON pg_catalog.pg_constraint USING btree (conname, connamespace);",
        "",
        "",
        "--",
        "-- Name: pg_constraint_conparentid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_constraint_conparentid_index ON pg_catalog.pg_constraint USING btree (conparentid);",
        "",
        "",
        "--",
        "-- Name: pg_constraint_conrelid_contypid_conname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_constraint_conrelid_contypid_conname_index ON pg_catalog.pg_constraint USING btree (conrelid, contypid, conname);",
        "",
        "",
        "--",
        "-- Name: pg_constraint_contypid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_constraint_contypid_index ON pg_catalog.pg_constraint USING btree (contypid);",
        "",
        "",
        "--",
        "-- Name: pg_constraint_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_constraint_oid_index ON pg_catalog.pg_constraint USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_conversion_default_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_conversion_default_index ON pg_catalog.pg_conversion USING btree (connamespace, conforencoding, contoencoding, oid);",
        "",
        "",
        "--",
        "-- Name: pg_conversion_name_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_conversion_name_nsp_index ON pg_catalog.pg_conversion USING btree (conname, connamespace);",
        "",
        "",
        "--",
        "-- Name: pg_conversion_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_conversion_oid_index ON pg_catalog.pg_conversion USING btree (oid);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_database_datname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_database_datname_index ON pg_catalog.pg_database USING btree (datname);",
        "",
        "",
        "--",
        "-- Name: pg_database_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_database_oid_index ON pg_catalog.pg_database USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_db_role_setting_databaseid_rol_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_db_role_setting_databaseid_rol_index ON pg_catalog.pg_db_role_setting USING btree (setdatabase, setrole);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_default_acl_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_default_acl_oid_index ON pg_catalog.pg_default_acl USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_default_acl_role_nsp_obj_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_default_acl_role_nsp_obj_index ON pg_catalog.pg_default_acl USING btree (defaclrole, defaclnamespace, defaclobjtype);",
        "",
        "",
        "--",
        "-- Name: pg_depend_depender_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_depend_depender_index ON pg_catalog.pg_depend USING btree (classid, objid, objsubid);",
        "",
        "",
        "--",
        "-- Name: pg_depend_reference_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_depend_reference_index ON pg_catalog.pg_depend USING btree (refclassid, refobjid, refobjsubid);",
        "",
        "",
        "--",
        "-- Name: pg_description_o_c_o_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_description_o_c_o_index ON pg_catalog.pg_description USING btree (objoid, classoid, objsubid);",
        "",
        "",
        "--",
        "-- Name: pg_enum_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_enum_oid_index ON pg_catalog.pg_enum USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_enum_typid_label_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_enum_typid_label_index ON pg_catalog.pg_enum USING btree (enumtypid, enumlabel);",
        "",
        "",
        "--",
        "-- Name: pg_enum_typid_sortorder_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_enum_typid_sortorder_index ON pg_catalog.pg_enum USING btree (enumtypid, enumsortorder);",
        "",
        "",
        "--",
        "-- Name: pg_event_trigger_evtname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_event_trigger_evtname_index ON pg_catalog.pg_event_trigger USING btree (evtname);",
        "",
        "",
        "--",
        "-- Name: pg_event_trigger_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_event_trigger_oid_index ON pg_catalog.pg_event_trigger USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_extension_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_extension_name_index ON pg_catalog.pg_extension USING btree (extname);",
        "",
        "",
        "--",
        "-- Name: pg_extension_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_extension_oid_index ON pg_catalog.pg_extension USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_foreign_data_wrapper_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_foreign_data_wrapper_name_index ON pg_catalog.pg_foreign_data_wrapper USING btree (fdwname);",
        "",
        "",
        "--",
        "-- Name: pg_foreign_data_wrapper_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_foreign_data_wrapper_oid_index ON pg_catalog.pg_foreign_data_wrapper USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_foreign_server_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_foreign_server_name_index ON pg_catalog.pg_foreign_server USING btree (srvname);",
        "",
        "",
        "--",
        "-- Name: pg_foreign_server_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_foreign_server_oid_index ON pg_catalog.pg_foreign_server USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_foreign_table_relid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_foreign_table_relid_index ON pg_catalog.pg_foreign_table USING btree (ftrelid);",
        "",
        "",
        "--",
        "-- Name: pg_index_indexrelid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_index_indexrelid_index ON pg_catalog.pg_index USING btree (indexrelid);",
        "",
        "",
        "--",
        "-- Name: pg_index_indrelid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_index_indrelid_index ON pg_catalog.pg_index USING btree (indrelid);",
        "",
        "",
        "--",
        "-- Name: pg_inherits_parent_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_inherits_parent_index ON pg_catalog.pg_inherits USING btree (inhparent);",
        "",
        "",
        "--",
        "-- Name: pg_inherits_relid_seqno_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_inherits_relid_seqno_index ON pg_catalog.pg_inherits USING btree (inhrelid, inhseqno);",
        "",
        "",
        "--",
        "-- Name: pg_init_privs_o_c_o_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_init_privs_o_c_o_index ON pg_catalog.pg_init_privs USING btree (objoid, classoid, objsubid);",
        "",
        "",
        "--",
        "-- Name: pg_language_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_language_name_index ON pg_catalog.pg_language USING btree (lanname);",
        "",
        "",
        "--",
        "-- Name: pg_language_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_language_oid_index ON pg_catalog.pg_language USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_largeobject_loid_pn_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_largeobject_loid_pn_index ON pg_catalog.pg_largeobject USING btree (loid, pageno);",
        "",
        "",
        "--",
        "-- Name: pg_largeobject_metadata_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_largeobject_metadata_oid_index ON pg_catalog.pg_largeobject_metadata USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_namespace_nspname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_namespace_nspname_index ON pg_catalog.pg_namespace USING btree (nspname);",
        "",
        "",
        "--",
        "-- Name: pg_namespace_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_namespace_oid_index ON pg_catalog.pg_namespace USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_opclass_am_name_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_opclass_am_name_nsp_index ON pg_catalog.pg_opclass USING btree (opcmethod, opcname, opcnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_opclass_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_opclass_oid_index ON pg_catalog.pg_opclass USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_operator_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_operator_oid_index ON pg_catalog.pg_operator USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_operator_oprname_l_r_n_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_operator_oprname_l_r_n_index ON pg_catalog.pg_operator USING btree (oprname, oprleft, oprright, oprnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_opfamily_am_name_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_opfamily_am_name_nsp_index ON pg_catalog.pg_opfamily USING btree (opfmethod, opfname, opfnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_opfamily_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_opfamily_oid_index ON pg_catalog.pg_opfamily USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_partitioned_table_partrelid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_partitioned_table_partrelid_index ON pg_catalog.pg_partitioned_table USING btree (partrelid);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_pltemplate_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_pltemplate_name_index ON pg_catalog.pg_pltemplate USING btree (tmplname);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_policy_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_policy_oid_index ON pg_catalog.pg_policy USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_policy_polrelid_polname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_policy_polrelid_polname_index ON pg_catalog.pg_policy USING btree (polrelid, polname);",
        "",
        "",
        "--",
        "-- Name: pg_proc_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_proc_oid_index ON pg_catalog.pg_proc USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_proc_proname_args_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_proc_proname_args_nsp_index ON pg_catalog.pg_proc USING btree (proname, proargtypes, pronamespace);",
        "",
        "",
        "--",
        "-- Name: pg_publication_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_publication_oid_index ON pg_catalog.pg_publication USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_publication_pubname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_publication_pubname_index ON pg_catalog.pg_publication USING btree (pubname);",
        "",
        "",
        "--",
        "-- Name: pg_publication_rel_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_publication_rel_oid_index ON pg_catalog.pg_publication_rel USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_publication_rel_prrelid_prpubid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_publication_rel_prrelid_prpubid_index ON pg_catalog.pg_publication_rel USING btree (prrelid, prpubid);",
        "",
        "",
        "--",
        "-- Name: pg_range_rngtypid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_range_rngtypid_index ON pg_catalog.pg_range USING btree (rngtypid);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_replication_origin_roiident_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_replication_origin_roiident_index ON pg_catalog.pg_replication_origin USING btree (roident);",
        "",
        "",
        "--",
        "-- Name: pg_replication_origin_roname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_replication_origin_roname_index ON pg_catalog.pg_replication_origin USING btree (roname);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_rewrite_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_rewrite_oid_index ON pg_catalog.pg_rewrite USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_rewrite_rel_rulename_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_rewrite_rel_rulename_index ON pg_catalog.pg_rewrite USING btree (ev_class, rulename);",
        "",
        "",
        "--",
        "-- Name: pg_seclabel_object_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_seclabel_object_index ON pg_catalog.pg_seclabel USING btree (objoid, classoid, objsubid, provider);",
        "",
        "",
        "--",
        "-- Name: pg_sequence_seqrelid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_sequence_seqrelid_index ON pg_catalog.pg_sequence USING btree (seqrelid);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_shdepend_depender_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE INDEX pg_shdepend_depender_index ON pg_catalog.pg_shdepend USING btree (dbid, classid, objid, objsubid);",
        "",
        "",
        "--",
        "-- Name: pg_shdepend_reference_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE INDEX pg_shdepend_reference_index ON pg_catalog.pg_shdepend USING btree (refclassid, refobjid);",
        "",
        "",
        "--",
        "-- Name: pg_shdescription_o_c_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_shdescription_o_c_index ON pg_catalog.pg_shdescription USING btree (objoid, classoid);",
        "",
        "",
        "--",
        "-- Name: pg_shseclabel_object_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_shseclabel_object_index ON pg_catalog.pg_shseclabel USING btree (objoid, classoid, provider);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_statistic_ext_data_stxoid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_statistic_ext_data_stxoid_index ON pg_catalog.pg_statistic_ext_data USING btree (stxoid);",
        "",
        "",
        "--",
        "-- Name: pg_statistic_ext_name_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_statistic_ext_name_index ON pg_catalog.pg_statistic_ext USING btree (stxname, stxnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_statistic_ext_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_statistic_ext_oid_index ON pg_catalog.pg_statistic_ext USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_statistic_ext_relid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_statistic_ext_relid_index ON pg_catalog.pg_statistic_ext USING btree (stxrelid);",
        "",
        "",
        "--",
        "-- Name: pg_statistic_relid_att_inh_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_statistic_relid_att_inh_index ON pg_catalog.pg_statistic USING btree (starelid, staattnum, stainherit);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_subscription_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_subscription_oid_index ON pg_catalog.pg_subscription USING btree (oid);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_subscription_rel_srrelid_srsubid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_subscription_rel_srrelid_srsubid_index ON pg_catalog.pg_subscription_rel USING btree (srrelid, srsubid);",
        "",
        "",
        "SET default_tablespace = pg_global;",
        "",
        "--",
        "-- Name: pg_subscription_subname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_subscription_subname_index ON pg_catalog.pg_subscription USING btree (subdbid, subname);",
        "",
        "",
        "--",
        "-- Name: pg_tablespace_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_tablespace_oid_index ON pg_catalog.pg_tablespace USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_tablespace_spcname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres; Tablespace: pg_global",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_tablespace_spcname_index ON pg_catalog.pg_tablespace USING btree (spcname);",
        "",
        "",
        "SET default_tablespace = '';",
        "",
        "--",
        "-- Name: pg_transform_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_transform_oid_index ON pg_catalog.pg_transform USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_transform_type_lang_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_transform_type_lang_index ON pg_catalog.pg_transform USING btree (trftype, trflang);",
        "",
        "",
        "--",
        "-- Name: pg_trigger_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_trigger_oid_index ON pg_catalog.pg_trigger USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_trigger_tgconstraint_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE INDEX pg_trigger_tgconstraint_index ON pg_catalog.pg_trigger USING btree (tgconstraint);",
        "",
        "",
        "--",
        "-- Name: pg_trigger_tgrelid_tgname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_trigger_tgrelid_tgname_index ON pg_catalog.pg_trigger USING btree (tgrelid, tgname);",
        "",
        "",
        "--",
        "-- Name: pg_ts_config_cfgname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_config_cfgname_index ON pg_catalog.pg_ts_config USING btree (cfgname, cfgnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_ts_config_map_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_config_map_index ON pg_catalog.pg_ts_config_map USING btree (mapcfg, maptokentype, mapseqno);",
        "",
        "",
        "--",
        "-- Name: pg_ts_config_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_config_oid_index ON pg_catalog.pg_ts_config USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_ts_dict_dictname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_dict_dictname_index ON pg_catalog.pg_ts_dict USING btree (dictname, dictnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_ts_dict_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_dict_oid_index ON pg_catalog.pg_ts_dict USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_ts_parser_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_parser_oid_index ON pg_catalog.pg_ts_parser USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_ts_parser_prsname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_parser_prsname_index ON pg_catalog.pg_ts_parser USING btree (prsname, prsnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_ts_template_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_template_oid_index ON pg_catalog.pg_ts_template USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_ts_template_tmplname_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_ts_template_tmplname_index ON pg_catalog.pg_ts_template USING btree (tmplname, tmplnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_type_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_type_oid_index ON pg_catalog.pg_type USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_type_typname_nsp_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_type_typname_nsp_index ON pg_catalog.pg_type USING btree (typname, typnamespace);",
        "",
        "",
        "--",
        "-- Name: pg_user_mapping_oid_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_user_mapping_oid_index ON pg_catalog.pg_user_mapping USING btree (oid);",
        "",
        "",
        "--",
        "-- Name: pg_user_mapping_user_server_index; Type: INDEX; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE UNIQUE INDEX pg_user_mapping_user_server_index ON pg_catalog.pg_user_mapping USING btree (umuser, umserver);",
        "",
        "",
        "--",
        "-- Name: pg_settings pg_settings_n; Type: RULE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE RULE pg_settings_n AS",
        "    ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING;",
        "",
        "",
        "--",
        "-- Name: pg_settings pg_settings_u; Type: RULE; Schema: pg_catalog; Owner: postgres",
        "--",
        "",
        "CREATE RULE pg_settings_u AS",
        "    ON UPDATE TO pg_catalog.pg_settings",
        "   WHERE (new.name = old.name) DO  SELECT set_config(old.name, new.setting, false) AS set_config;",
        "",
        "",
        "--",
        "-- PostgreSQL database dump complete",
        "--",
        "",
        ""
      ],
      "tables": [
        {
          "schema": "pg_catalog",
          "table": "pg_aggregate",
          "columns": [
            {
              "name": "aggfnoid",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggkind",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggnumdirectargs",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggtransfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggfinalfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggcombinefn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggserialfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggdeserialfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmtransfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggminvtransfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmfinalfn",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggfinalextra",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmfinalextra",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggfinalmodify",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmfinalmodify",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggsortop",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggtranstype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggtransspace",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmtranstype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggmtransspace",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "agginitval",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            },
            {
              "name": "aggminitval",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_aggregate_fnoid_index",
              "columns": [
                "aggfnoid"
              ],
              "definition": "USING btree (aggfnoid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3005
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_am",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    60,
                    61,
                    62,
                    63,
                    64,
                    65
                  ]
                }
              ]
            },
            {
              "name": "amname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    60,
                    61,
                    62,
                    63,
                    64,
                    65
                  ]
                }
              ]
            },
            {
              "name": "amhandler",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    60,
                    61,
                    62,
                    63,
                    64,
                    65
                  ]
                }
              ]
            },
            {
              "name": "amtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    60,
                    61,
                    62,
                    63,
                    64,
                    65
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_am_name_index",
              "columns": [
                "amname"
              ],
              "definition": "USING btree (amname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3012
                  ]
                }
              ]
            },
            {
              "name": "pg_am_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3019
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                60,
                61,
                62,
                63,
                64,
                65
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_amop",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amopfamily",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amoplefttype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amoprighttype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amopstrategy",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amoppurpose",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amopopr",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amopmethod",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            },
            {
              "name": "amopsortfamily",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_amop_fam_strat_index",
              "columns": [
                "amopfamily",
                "amoplefttype",
                "amoprighttype",
                "amopstrategy"
              ],
              "definition": "USING btree (amopfamily, amoplefttype, amoprighttype, amopstrategy)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3026
                  ]
                }
              ]
            },
            {
              "name": "pg_amop_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3033
                  ]
                }
              ]
            },
            {
              "name": "pg_amop_opr_fam_index",
              "columns": [
                "amopopr",
                "amoppurpose",
                "amopfamily"
              ],
              "definition": "USING btree (amopopr, amoppurpose, amopfamily)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3040
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_amproc",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            },
            {
              "name": "amprocfamily",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            },
            {
              "name": "amproclefttype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            },
            {
              "name": "amprocrighttype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            },
            {
              "name": "amprocnum",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            },
            {
              "name": "amproc",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_amproc_fam_proc_index",
              "columns": [
                "amprocfamily",
                "amproclefttype",
                "amprocrighttype",
                "amprocnum"
              ],
              "definition": "USING btree (amprocfamily, amproclefttype, amprocrighttype, amprocnum)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3047
                  ]
                }
              ]
            },
            {
              "name": "pg_amproc_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3054
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_attrdef",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    115,
                    116,
                    117,
                    118,
                    119,
                    120
                  ]
                }
              ]
            },
            {
              "name": "adrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    115,
                    116,
                    117,
                    118,
                    119,
                    120
                  ]
                }
              ]
            },
            {
              "name": "adnum",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    115,
                    116,
                    117,
                    118,
                    119,
                    120
                  ]
                }
              ]
            },
            {
              "name": "adbin",
              "type": "pg_node_tree",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    115,
                    116,
                    117,
                    118,
                    119,
                    120
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_attrdef_adrelid_adnum_index",
              "columns": [
                "adrelid",
                "adnum"
              ],
              "definition": "USING btree (adrelid, adnum)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3061
                  ]
                }
              ]
            },
            {
              "name": "pg_attrdef_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3068
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                115,
                116,
                117,
                118,
                119,
                120
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_attribute",
          "columns": [
            {
              "name": "attrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "atttypid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attstattarget",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attlen",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attnum",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attndims",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attcacheoff",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "atttypmod",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attbyval",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attstorage",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attalign",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attnotnull",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "atthasdef",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "atthasmissing",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attidentity",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attgenerated",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attisdropped",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attislocal",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attinhcount",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attcollation",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attfdwoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            },
            {
              "name": "attmissingval",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_attribute_relid_attnam_index",
              "columns": [
                "attrelid",
                "attname"
              ],
              "definition": "USING btree (attrelid, attname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3075
                  ]
                }
              ]
            },
            {
              "name": "pg_attribute_relid_attnum_index",
              "columns": [
                "attrelid",
                "attnum"
              ],
              "definition": "USING btree (attrelid, attnum)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3082
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_auth_members",
          "columns": [
            {
              "name": "roleid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175
                  ]
                }
              ]
            },
            {
              "name": "member",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175
                  ]
                }
              ]
            },
            {
              "name": "grantor",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175
                  ]
                }
              ]
            },
            {
              "name": "admin_option",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_auth_members_member_role_index",
              "columns": [
                "member",
                "roleid"
              ],
              "definition": "USING btree (member, roleid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3091
                  ]
                }
              ]
            },
            {
              "name": "pg_auth_members_role_member_index",
              "columns": [
                "roleid",
                "member"
              ],
              "definition": "USING btree (roleid, member)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3098
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                170,
                171,
                172,
                173,
                174,
                175
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_authid",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolsuper",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolinherit",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolcreaterole",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolcreatedb",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolcanlogin",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolreplication",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolbypassrls",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolconnlimit",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolpassword",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            },
            {
              "name": "rolvaliduntil",
              "type": "timestamp with time zone",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195,
                    196,
                    197,
                    198,
                    199
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_authid_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3105
                  ]
                }
              ]
            },
            {
              "name": "pg_authid_rolname_index",
              "columns": [
                "rolname"
              ],
              "definition": "USING btree (rolname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3112
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_available_extension_versions",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "e.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "version",
              "type": "unknown",
              "default": "e.version",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "installed",
              "type": "unknown",
              "default": "(x.extname IS NOT NULL)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "superuser",
              "type": "unknown",
              "default": "e.superuser",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "relocatable",
              "type": "unknown",
              "default": "e.relocatable",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "schema",
              "type": "unknown",
              "default": "e.schema",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "requires",
              "type": "unknown",
              "default": "e.requires",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            },
            {
              "name": "comment",
              "type": "unknown",
              "default": "e.comment",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    210,
                    211,
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219,
                    220
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_available_extensions",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "e.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235
                  ]
                }
              ]
            },
            {
              "name": "default_version",
              "type": "unknown",
              "default": "e.default_version",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235
                  ]
                }
              ]
            },
            {
              "name": "installed_version",
              "type": "unknown",
              "default": "x.extversion",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235
                  ]
                }
              ]
            },
            {
              "name": "comment",
              "type": "unknown",
              "default": "e.comment",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    229,
                    230,
                    231,
                    232,
                    233,
                    234,
                    235
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                229,
                230,
                231,
                232,
                233,
                234,
                235
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_cast",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            },
            {
              "name": "castsource",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            },
            {
              "name": "casttarget",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            },
            {
              "name": "castfunc",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            },
            {
              "name": "castcontext",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            },
            {
              "name": "castmethod",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    246,
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_cast_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3121
                  ]
                }
              ]
            },
            {
              "name": "pg_cast_source_target_index",
              "columns": [
                "castsource",
                "casttarget"
              ],
              "definition": "USING btree (castsource, casttarget)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3128
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                246,
                247,
                248,
                249,
                250,
                251,
                252,
                253
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_class",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reltype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reloftype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relam",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relfilenode",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reltablespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relpages",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reltuples",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relallvisible",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reltoastrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relhasindex",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relisshared",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relpersistence",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relkind",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relnatts",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relchecks",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relhasrules",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relhastriggers",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relhassubclass",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relrowsecurity",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relforcerowsecurity",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relispopulated",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relreplident",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relispartition",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relrewrite",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relfrozenxid",
              "type": "xid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relminmxid",
              "type": "xid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "reloptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            },
            {
              "name": "relpartbound",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    264,
                    265,
                    266,
                    267,
                    268,
                    269,
                    270,
                    271,
                    272,
                    273,
                    274,
                    275,
                    276,
                    277,
                    278,
                    279,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    286,
                    287,
                    288,
                    289,
                    290,
                    291,
                    292,
                    293,
                    294,
                    295,
                    296,
                    297,
                    298
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_class_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3135
                  ]
                }
              ]
            },
            {
              "name": "pg_class_relname_nsp_index",
              "columns": [
                "relname",
                "relnamespace"
              ],
              "definition": "USING btree (relname, relnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3142
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_class_tblspc_relfilenode_index",
              "columns": [
                "reltablespace",
                "relfilenode"
              ],
              "definition": "USING btree (reltablespace, relfilenode)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3149
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_collation",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collprovider",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collisdeterministic",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collencoding",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collcollate",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collctype",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            },
            {
              "name": "collversion",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    309,
                    310,
                    311,
                    312,
                    313,
                    314,
                    315,
                    316,
                    317,
                    318,
                    319,
                    320
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_collation_name_enc_nsp_index",
              "columns": [
                "collname",
                "collencoding",
                "collnamespace"
              ],
              "definition": "USING btree (collname, collencoding, collnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3156
                  ]
                }
              ]
            },
            {
              "name": "pg_collation_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3163
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                309,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319,
                320
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_config",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "pg_config.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    331,
                    332,
                    333,
                    334
                  ]
                }
              ]
            },
            {
              "name": "setting",
              "type": "unknown",
              "default": "pg_config.setting",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    331,
                    332,
                    333,
                    334
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                331,
                332,
                333,
                334
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_constraint",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "connamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "contype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "condeferrable",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "condeferred",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "convalidated",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "contypid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conindid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conparentid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "confrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "confupdtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "confdeltype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "confmatchtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conislocal",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "coninhcount",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "connoinherit",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conkey",
              "type": "smallint[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "confkey",
              "type": "smallint[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conpfeqop",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conppeqop",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conffeqop",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conexclop",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            },
            {
              "name": "conbin",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361,
                    362,
                    363,
                    364,
                    365,
                    366,
                    367,
                    368,
                    369
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_constraint_conrelid_contypid_conname_index",
              "columns": [
                "conrelid",
                "contypid",
                "conname"
              ],
              "definition": "USING btree (conrelid, contypid, conname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3184
                  ]
                }
              ]
            },
            {
              "name": "pg_constraint_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3198
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_constraint_conname_nsp_index",
              "columns": [
                "conname",
                "connamespace"
              ],
              "definition": "USING btree (conname, connamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3170
                  ]
                }
              ]
            },
            {
              "name": "pg_constraint_conparentid_index",
              "columns": [
                "conparentid"
              ],
              "definition": "USING btree (conparentid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3177
                  ]
                }
              ]
            },
            {
              "name": "pg_constraint_contypid_index",
              "columns": [
                "contypid"
              ],
              "definition": "USING btree (contypid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3191
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                350,
                351,
                352,
                353,
                354,
                355,
                356,
                357,
                358,
                359,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367,
                368,
                369
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_conversion",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "conname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "connamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "conowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "conforencoding",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "contoencoding",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "conproc",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            },
            {
              "name": "condefault",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    380,
                    381,
                    382,
                    383,
                    384,
                    385,
                    386,
                    387,
                    388,
                    389
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_conversion_default_index",
              "columns": [
                "connamespace",
                "conforencoding",
                "contoencoding",
                "oid"
              ],
              "definition": "USING btree (connamespace, conforencoding, contoencoding, oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3205
                  ]
                }
              ]
            },
            {
              "name": "pg_conversion_name_nsp_index",
              "columns": [
                "conname",
                "connamespace"
              ],
              "definition": "USING btree (conname, connamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3212
                  ]
                }
              ]
            },
            {
              "name": "pg_conversion_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3219
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                380,
                381,
                382,
                383,
                384,
                385,
                386,
                387,
                388,
                389
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_cursors",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "c.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            },
            {
              "name": "statement",
              "type": "unknown",
              "default": "c.statement",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            },
            {
              "name": "is_holdable",
              "type": "unknown",
              "default": "c.is_holdable",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            },
            {
              "name": "is_binary",
              "type": "unknown",
              "default": "c.is_binary",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            },
            {
              "name": "is_scrollable",
              "type": "unknown",
              "default": "c.is_scrollable",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            },
            {
              "name": "creation_time",
              "type": "unknown",
              "default": "c.creation_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    400,
                    401,
                    402,
                    403,
                    404,
                    405,
                    406,
                    407
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                400,
                401,
                402,
                403,
                404,
                405,
                406,
                407
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_database",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datdba",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "encoding",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datcollate",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datctype",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datistemplate",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datallowconn",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datconnlimit",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datlastsysoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datfrozenxid",
              "type": "xid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datminmxid",
              "type": "xid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "dattablespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            },
            {
              "name": "datacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_database_datname_index",
              "columns": [
                "datname"
              ],
              "definition": "USING btree (datname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3228
                  ]
                }
              ]
            },
            {
              "name": "pg_database_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3235
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                418,
                419,
                420,
                421,
                422,
                423,
                424,
                425,
                426,
                427,
                428,
                429,
                430,
                431,
                432,
                433
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_db_role_setting",
          "columns": [
            {
              "name": "setdatabase",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    444,
                    445,
                    446,
                    447,
                    448
                  ]
                }
              ]
            },
            {
              "name": "setrole",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    444,
                    445,
                    446,
                    447,
                    448
                  ]
                }
              ]
            },
            {
              "name": "setconfig",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    444,
                    445,
                    446,
                    447,
                    448
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_db_role_setting_databaseid_rol_index",
              "columns": [
                "setdatabase",
                "setrole"
              ],
              "definition": "USING btree (setdatabase, setrole)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3242
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                444,
                445,
                446,
                447,
                448
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_default_acl",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467
                  ]
                }
              ]
            },
            {
              "name": "defaclrole",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467
                  ]
                }
              ]
            },
            {
              "name": "defaclnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467
                  ]
                }
              ]
            },
            {
              "name": "defaclobjtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467
                  ]
                }
              ]
            },
            {
              "name": "defaclacl",
              "type": "aclitem[]",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_default_acl_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3251
                  ]
                }
              ]
            },
            {
              "name": "pg_default_acl_role_nsp_obj_index",
              "columns": [
                "defaclrole",
                "defaclnamespace",
                "defaclobjtype"
              ],
              "definition": "USING btree (defaclrole, defaclnamespace, defaclobjtype)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3258
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                461,
                462,
                463,
                464,
                465,
                466,
                467
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_depend",
          "columns": [
            {
              "name": "classid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "objid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "refclassid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "refobjid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "refobjsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            },
            {
              "name": "deptype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    478,
                    479,
                    480,
                    481,
                    482,
                    483,
                    484,
                    485,
                    486
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_depend_depender_index",
              "columns": [
                "classid",
                "objid",
                "objsubid"
              ],
              "definition": "USING btree (classid, objid, objsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3265
                  ]
                }
              ]
            },
            {
              "name": "pg_depend_reference_index",
              "columns": [
                "refclassid",
                "refobjid",
                "refobjsubid"
              ],
              "definition": "USING btree (refclassid, refobjid, refobjsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3272
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                478,
                479,
                480,
                481,
                482,
                483,
                484,
                485,
                486
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_description",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    497,
                    498,
                    499,
                    500,
                    501,
                    502
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    497,
                    498,
                    499,
                    500,
                    501,
                    502
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    497,
                    498,
                    499,
                    500,
                    501,
                    502
                  ]
                }
              ]
            },
            {
              "name": "description",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    497,
                    498,
                    499,
                    500,
                    501,
                    502
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_description_o_c_o_index",
              "columns": [
                "objoid",
                "classoid",
                "objsubid"
              ],
              "definition": "USING btree (objoid, classoid, objsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3279
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                497,
                498,
                499,
                500,
                501,
                502
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_enum",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    513,
                    514,
                    515,
                    516,
                    517,
                    518
                  ]
                }
              ]
            },
            {
              "name": "enumtypid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    513,
                    514,
                    515,
                    516,
                    517,
                    518
                  ]
                }
              ]
            },
            {
              "name": "enumsortorder",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    513,
                    514,
                    515,
                    516,
                    517,
                    518
                  ]
                }
              ]
            },
            {
              "name": "enumlabel",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    513,
                    514,
                    515,
                    516,
                    517,
                    518
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_enum_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3286
                  ]
                }
              ]
            },
            {
              "name": "pg_enum_typid_label_index",
              "columns": [
                "enumtypid",
                "enumlabel"
              ],
              "definition": "USING btree (enumtypid, enumlabel)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3293
                  ]
                }
              ]
            },
            {
              "name": "pg_enum_typid_sortorder_index",
              "columns": [
                "enumtypid",
                "enumsortorder"
              ],
              "definition": "USING btree (enumtypid, enumsortorder)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3300
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                513,
                514,
                515,
                516,
                517,
                518
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_event_trigger",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evtname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evtevent",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evtowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evtfoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evtenabled",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            },
            {
              "name": "evttags",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    529,
                    530,
                    531,
                    532,
                    533,
                    534,
                    535,
                    536,
                    537
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_event_trigger_evtname_index",
              "columns": [
                "evtname"
              ],
              "definition": "USING btree (evtname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3307
                  ]
                }
              ]
            },
            {
              "name": "pg_event_trigger_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3314
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                529,
                530,
                531,
                532,
                533,
                534,
                535,
                536,
                537
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_extension",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extrelocatable",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extversion",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extconfig",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            },
            {
              "name": "extcondition",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    548,
                    549,
                    550,
                    551,
                    552,
                    553,
                    554,
                    555,
                    556,
                    557
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_extension_name_index",
              "columns": [
                "extname"
              ],
              "definition": "USING btree (extname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3321
                  ]
                }
              ]
            },
            {
              "name": "pg_extension_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3328
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                548,
                549,
                550,
                551,
                552,
                553,
                554,
                555,
                556,
                557
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_file_settings",
          "view": true,
          "columns": [
            {
              "name": "sourcefile",
              "type": "unknown",
              "default": "a.sourcefile",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "sourceline",
              "type": "unknown",
              "default": "a.sourceline",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "seqno",
              "type": "unknown",
              "default": "a.seqno",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "name",
              "type": "unknown",
              "default": "a.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "setting",
              "type": "unknown",
              "default": "a.setting",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "applied",
              "type": "unknown",
              "default": "a.applied",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            },
            {
              "name": "error",
              "type": "unknown",
              "default": "a.error",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    568,
                    569,
                    570,
                    571,
                    572,
                    573,
                    574,
                    575,
                    576
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                568,
                569,
                570,
                571,
                572,
                573,
                574,
                575,
                576
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_data_wrapper",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwhandler",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwvalidator",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            },
            {
              "name": "fdwoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    585,
                    586,
                    587,
                    588,
                    589,
                    590,
                    591,
                    592,
                    593
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_foreign_data_wrapper_name_index",
              "columns": [
                "fdwname"
              ],
              "definition": "USING btree (fdwname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3335
                  ]
                }
              ]
            },
            {
              "name": "pg_foreign_data_wrapper_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3342
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                585,
                586,
                587,
                588,
                589,
                590,
                591,
                592,
                593
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_server",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvfdw",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvtype",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvversion",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            },
            {
              "name": "srvoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    604,
                    605,
                    606,
                    607,
                    608,
                    609,
                    610,
                    611,
                    612,
                    613
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_foreign_server_name_index",
              "columns": [
                "srvname"
              ],
              "definition": "USING btree (srvname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3349
                  ]
                }
              ]
            },
            {
              "name": "pg_foreign_server_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3356
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                604,
                605,
                606,
                607,
                608,
                609,
                610,
                611,
                612,
                613
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_table",
          "columns": [
            {
              "name": "ftrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    624,
                    625,
                    626,
                    627,
                    628
                  ]
                }
              ]
            },
            {
              "name": "ftserver",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    624,
                    625,
                    626,
                    627,
                    628
                  ]
                }
              ]
            },
            {
              "name": "ftoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    624,
                    625,
                    626,
                    627,
                    628
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_foreign_table_relid_index",
              "columns": [
                "ftrelid"
              ],
              "definition": "USING btree (ftrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3363
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                624,
                625,
                626,
                627,
                628
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_group",
          "view": true,
          "columns": [
            {
              "name": "groname",
              "type": "unknown",
              "default": "pg_authid.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646
                  ]
                }
              ]
            },
            {
              "name": "grosysid",
              "type": "unknown",
              "default": "pg_authid.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646
                  ]
                }
              ]
            },
            {
              "name": "grolist",
              "type": "unknown",
              "default": "ARRAY( SELECT pg_auth_members.member FROM pg_auth_members WHERE (pg_auth_members.roleid = pg_authid.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    639,
                    640,
                    641,
                    642,
                    643,
                    644,
                    645,
                    646
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                639,
                640,
                641,
                642,
                643,
                644,
                645,
                646
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_hba_file_rules",
          "view": true,
          "columns": [
            {
              "name": "line_number",
              "type": "unknown",
              "default": "a.line_number",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "type",
              "type": "unknown",
              "default": "a.type",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "database",
              "type": "unknown",
              "default": "a.database",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "user_name",
              "type": "unknown",
              "default": "a.user_name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "address",
              "type": "unknown",
              "default": "a.address",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "netmask",
              "type": "unknown",
              "default": "a.netmask",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "auth_method",
              "type": "unknown",
              "default": "a.auth_method",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "options",
              "type": "unknown",
              "default": "a.options",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            },
            {
              "name": "error",
              "type": "unknown",
              "default": "a.error",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    655,
                    656,
                    657,
                    658,
                    659,
                    660,
                    661,
                    662,
                    663,
                    664,
                    665
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                655,
                656,
                657,
                658,
                659,
                660,
                661,
                662,
                663,
                664,
                665
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_index",
          "columns": [
            {
              "name": "indexrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indnatts",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indnkeyatts",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisunique",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisprimary",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisexclusion",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indimmediate",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisclustered",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisvalid",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indcheckxmin",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisready",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indislive",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indisreplident",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indkey",
              "type": "int2vector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indcollation",
              "type": "oidvector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indclass",
              "type": "oidvector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indoption",
              "type": "int2vector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indexprs",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            },
            {
              "name": "indpred",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    674,
                    675,
                    676,
                    677,
                    678,
                    679,
                    680,
                    681,
                    682,
                    683,
                    684,
                    685,
                    686,
                    687,
                    688,
                    689,
                    690,
                    691,
                    692,
                    693,
                    694,
                    695
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_index_indexrelid_index",
              "columns": [
                "indexrelid"
              ],
              "definition": "USING btree (indexrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3370
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_index_indrelid_index",
              "columns": [
                "indrelid"
              ],
              "definition": "USING btree (indrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3377
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                674,
                675,
                676,
                677,
                678,
                679,
                680,
                681,
                682,
                683,
                684,
                685,
                686,
                687,
                688,
                689,
                690,
                691,
                692,
                693,
                694,
                695
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_indexes",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717
                  ]
                }
              ]
            },
            {
              "name": "indexname",
              "type": "unknown",
              "default": "i.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717
                  ]
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "unknown",
              "default": "t.spcname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717
                  ]
                }
              ]
            },
            {
              "name": "indexdef",
              "type": "unknown",
              "default": "pg_get_indexdef(i.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    706,
                    707,
                    708,
                    709,
                    710,
                    711,
                    712,
                    713,
                    714,
                    715,
                    716,
                    717
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                706,
                707,
                708,
                709,
                710,
                711,
                712,
                713,
                714,
                715,
                716,
                717
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_inherits",
          "columns": [
            {
              "name": "inhrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    726,
                    727,
                    728,
                    729,
                    730
                  ]
                }
              ]
            },
            {
              "name": "inhparent",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    726,
                    727,
                    728,
                    729,
                    730
                  ]
                }
              ]
            },
            {
              "name": "inhseqno",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    726,
                    727,
                    728,
                    729,
                    730
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_inherits_relid_seqno_index",
              "columns": [
                "inhrelid",
                "inhseqno"
              ],
              "definition": "USING btree (inhrelid, inhseqno)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3391
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_inherits_parent_index",
              "columns": [
                "inhparent"
              ],
              "definition": "USING btree (inhparent)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3384
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                726,
                727,
                728,
                729,
                730
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_init_privs",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747
                  ]
                }
              ]
            },
            {
              "name": "privtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747
                  ]
                }
              ]
            },
            {
              "name": "initprivs",
              "type": "aclitem[]",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    741,
                    742,
                    743,
                    744,
                    745,
                    746,
                    747
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_init_privs_o_c_o_index",
              "columns": [
                "objoid",
                "classoid",
                "objsubid"
              ],
              "definition": "USING btree (objoid, classoid, objsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3398
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                741,
                742,
                743,
                744,
                745,
                746,
                747
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_language",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanispl",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanpltrusted",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanplcallfoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "laninline",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanvalidator",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            },
            {
              "name": "lanacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    758,
                    759,
                    760,
                    761,
                    762,
                    763,
                    764,
                    765,
                    766,
                    767,
                    768
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_language_name_index",
              "columns": [
                "lanname"
              ],
              "definition": "USING btree (lanname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3405
                  ]
                }
              ]
            },
            {
              "name": "pg_language_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3412
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                758,
                759,
                760,
                761,
                762,
                763,
                764,
                765,
                766,
                767,
                768
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_largeobject",
          "columns": [
            {
              "name": "loid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    779,
                    780,
                    781,
                    782,
                    783
                  ]
                }
              ]
            },
            {
              "name": "pageno",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    779,
                    780,
                    781,
                    782,
                    783
                  ]
                }
              ]
            },
            {
              "name": "data",
              "type": "bytea",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    779,
                    780,
                    781,
                    782,
                    783
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_largeobject_loid_pn_index",
              "columns": [
                "loid",
                "pageno"
              ],
              "definition": "USING btree (loid, pageno)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3419
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                779,
                780,
                781,
                782,
                783
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_largeobject_metadata",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    794,
                    795,
                    796,
                    797,
                    798
                  ]
                }
              ]
            },
            {
              "name": "lomowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    794,
                    795,
                    796,
                    797,
                    798
                  ]
                }
              ]
            },
            {
              "name": "lomacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    794,
                    795,
                    796,
                    797,
                    798
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_largeobject_metadata_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3426
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                794,
                795,
                796,
                797,
                798
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_locks",
          "view": true,
          "columns": [
            {
              "name": "locktype",
              "type": "unknown",
              "default": "l.locktype",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "database",
              "type": "unknown",
              "default": "l.database",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "relation",
              "type": "unknown",
              "default": "l.relation",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "page",
              "type": "unknown",
              "default": "l.page",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "tuple",
              "type": "unknown",
              "default": "l.tuple",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "virtualxid",
              "type": "unknown",
              "default": "l.virtualxid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "transactionid",
              "type": "unknown",
              "default": "l.transactionid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "classid",
              "type": "unknown",
              "default": "l.classid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "objid",
              "type": "unknown",
              "default": "l.objid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "unknown",
              "default": "l.objsubid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "virtualtransaction",
              "type": "unknown",
              "default": "l.virtualtransaction",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "pid",
              "type": "unknown",
              "default": "l.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "mode",
              "type": "unknown",
              "default": "l.mode",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "granted",
              "type": "unknown",
              "default": "l.granted",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            },
            {
              "name": "fastpath",
              "type": "unknown",
              "default": "l.fastpath",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    809,
                    810,
                    811,
                    812,
                    813,
                    814,
                    815,
                    816,
                    817,
                    818,
                    819,
                    820,
                    821,
                    822,
                    823,
                    824,
                    825
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                809,
                810,
                811,
                812,
                813,
                814,
                815,
                816,
                817,
                818,
                819,
                820,
                821,
                822,
                823,
                824,
                825
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_matviews",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "matviewname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "matviewowner",
              "type": "unknown",
              "default": "pg_get_userbyid(c.relowner)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "unknown",
              "default": "t.spcname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "hasindexes",
              "type": "unknown",
              "default": "c.relhasindex",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "ispopulated",
              "type": "unknown",
              "default": "c.relispopulated",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            },
            {
              "name": "definition",
              "type": "unknown",
              "default": "pg_get_viewdef(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    834,
                    835,
                    836,
                    837,
                    838,
                    839,
                    840,
                    841,
                    842,
                    843,
                    844,
                    845
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                834,
                835,
                836,
                837,
                838,
                839,
                840,
                841,
                842,
                843,
                844,
                845
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_namespace",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    854,
                    855,
                    856,
                    857,
                    858,
                    859
                  ]
                }
              ]
            },
            {
              "name": "nspname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    854,
                    855,
                    856,
                    857,
                    858,
                    859
                  ]
                }
              ]
            },
            {
              "name": "nspowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    854,
                    855,
                    856,
                    857,
                    858,
                    859
                  ]
                }
              ]
            },
            {
              "name": "nspacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    854,
                    855,
                    856,
                    857,
                    858,
                    859
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_namespace_nspname_index",
              "columns": [
                "nspname"
              ],
              "definition": "USING btree (nspname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3433
                  ]
                }
              ]
            },
            {
              "name": "pg_namespace_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3440
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                854,
                855,
                856,
                857,
                858,
                859
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_opclass",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcmethod",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcfamily",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcintype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opcdefault",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            },
            {
              "name": "opckeytype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    870,
                    871,
                    872,
                    873,
                    874,
                    875,
                    876,
                    877,
                    878,
                    879,
                    880
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_opclass_am_name_nsp_index",
              "columns": [
                "opcmethod",
                "opcname",
                "opcnamespace"
              ],
              "definition": "USING btree (opcmethod, opcname, opcnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3447
                  ]
                }
              ]
            },
            {
              "name": "pg_opclass_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3454
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                870,
                871,
                872,
                873,
                874,
                875,
                876,
                877,
                878,
                879,
                880
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_operator",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprkind",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprcanmerge",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprcanhash",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprleft",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprright",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprresult",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprcom",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprnegate",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprcode",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprrest",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            },
            {
              "name": "oprjoin",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    898,
                    899,
                    900,
                    901,
                    902,
                    903,
                    904,
                    905,
                    906,
                    907
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_operator_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3461
                  ]
                }
              ]
            },
            {
              "name": "pg_operator_oprname_l_r_n_index",
              "columns": [
                "oprname",
                "oprleft",
                "oprright",
                "oprnamespace"
              ],
              "definition": "USING btree (oprname, oprleft, oprright, oprnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3468
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                891,
                892,
                893,
                894,
                895,
                896,
                897,
                898,
                899,
                900,
                901,
                902,
                903,
                904,
                905,
                906,
                907
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_opfamily",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924
                  ]
                }
              ]
            },
            {
              "name": "opfmethod",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924
                  ]
                }
              ]
            },
            {
              "name": "opfname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924
                  ]
                }
              ]
            },
            {
              "name": "opfnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924
                  ]
                }
              ]
            },
            {
              "name": "opfowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    918,
                    919,
                    920,
                    921,
                    922,
                    923,
                    924
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_opfamily_am_name_nsp_index",
              "columns": [
                "opfmethod",
                "opfname",
                "opfnamespace"
              ],
              "definition": "USING btree (opfmethod, opfname, opfnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3475
                  ]
                }
              ]
            },
            {
              "name": "pg_opfamily_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3482
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                918,
                919,
                920,
                921,
                922,
                923,
                924
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_partitioned_table",
          "columns": [
            {
              "name": "partrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partstrat",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partnatts",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partdefid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partattrs",
              "type": "int2vector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partclass",
              "type": "oidvector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partcollation",
              "type": "oidvector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            },
            {
              "name": "partexprs",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    935,
                    936,
                    937,
                    938,
                    939,
                    940,
                    941,
                    942,
                    943,
                    944
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_partitioned_table_partrelid_index",
              "columns": [
                "partrelid"
              ],
              "definition": "USING btree (partrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3489
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                935,
                936,
                937,
                938,
                939,
                940,
                941,
                942,
                943,
                944
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_pltemplate",
          "columns": [
            {
              "name": "tmplname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmpltrusted",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmpldbacreate",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmplhandler",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmplinline",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmplvalidator",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmpllibrary",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            },
            {
              "name": "tmplacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    957,
                    958,
                    959,
                    960,
                    961,
                    962,
                    963,
                    964,
                    965,
                    966
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_pltemplate_name_index",
              "columns": [
                "tmplname"
              ],
              "definition": "USING btree (tmplname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3498
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                957,
                958,
                959,
                960,
                961,
                962,
                963,
                964,
                965,
                966
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_policies",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "policyname",
              "type": "unknown",
              "default": "pol.polname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "permissive",
              "type": "unknown",
              "default": "CASE WHEN pol.polpermissive THEN 'PERMISSIVE'::text ELSE 'RESTRICTIVE'::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "roles",
              "type": "unknown",
              "default": "CASE WHEN (pol.polroles = '{0}'::oid[]) THEN (string_to_array('public'::text, ''::text))::name[] ELSE ARRAY( SELECT pg_authid.rolname FROM pg_authid WHERE (pg_authid.oid = ANY (pol.polroles)) ORDER BY pg_authid.rolname) END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "cmd",
              "type": "unknown",
              "default": "CASE pol.polcmd WHEN 'r'::\"char\" THEN 'SELECT'::text WHEN 'a'::\"char\" THEN 'INSERT'::text WHEN 'w'::\"char\" THEN 'UPDATE'::text WHEN 'd'::\"char\" THEN 'DELETE'::text WHEN '*'::\"char\" THEN 'ALL'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "qual",
              "type": "unknown",
              "default": "pg_get_expr(pol.polqual, pol.polrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            },
            {
              "name": "with_check",
              "type": "unknown",
              "default": "pg_get_expr(pol.polwithcheck, pol.polrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    977,
                    978,
                    979,
                    980,
                    981,
                    982,
                    983,
                    984,
                    985,
                    986,
                    987,
                    988,
                    989,
                    990,
                    991,
                    992,
                    993,
                    994,
                    995,
                    996,
                    997,
                    998,
                    999,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                977,
                978,
                979,
                980,
                981,
                982,
                983,
                984,
                985,
                986,
                987,
                988,
                989,
                990,
                991,
                992,
                993,
                994,
                995,
                996,
                997,
                998,
                999,
                1000,
                1001,
                1002,
                1003,
                1004
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_policy",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polcmd",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polpermissive",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polroles",
              "type": "oid[]",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polqual",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            },
            {
              "name": "polwithcheck",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    1020,
                    1021,
                    1022,
                    1023,
                    1024
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_policy_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3507
                  ]
                }
              ]
            },
            {
              "name": "pg_policy_polrelid_polname_index",
              "columns": [
                "polrelid",
                "polname"
              ],
              "definition": "USING btree (polrelid, polname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3514
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1015,
                1016,
                1017,
                1018,
                1019,
                1020,
                1021,
                1022,
                1023,
                1024
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_prepared_statements",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "p.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041
                  ]
                }
              ]
            },
            {
              "name": "statement",
              "type": "unknown",
              "default": "p.statement",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041
                  ]
                }
              ]
            },
            {
              "name": "prepare_time",
              "type": "unknown",
              "default": "p.prepare_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041
                  ]
                }
              ]
            },
            {
              "name": "parameter_types",
              "type": "unknown",
              "default": "p.parameter_types",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041
                  ]
                }
              ]
            },
            {
              "name": "from_sql",
              "type": "unknown",
              "default": "p.from_sql",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1035,
                    1036,
                    1037,
                    1038,
                    1039,
                    1040,
                    1041
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1035,
                1036,
                1037,
                1038,
                1039,
                1040,
                1041
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_prepared_xacts",
          "view": true,
          "columns": [
            {
              "name": "transaction",
              "type": "unknown",
              "default": "p.transaction",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058
                  ]
                }
              ]
            },
            {
              "name": "gid",
              "type": "unknown",
              "default": "p.gid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058
                  ]
                }
              ]
            },
            {
              "name": "prepared",
              "type": "unknown",
              "default": "p.prepared",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058
                  ]
                }
              ]
            },
            {
              "name": "owner",
              "type": "unknown",
              "default": "u.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058
                  ]
                }
              ]
            },
            {
              "name": "database",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1050,
                    1051,
                    1052,
                    1053,
                    1054,
                    1055,
                    1056,
                    1057,
                    1058
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1050,
                1051,
                1052,
                1053,
                1054,
                1055,
                1056,
                1057,
                1058
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_proc",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "pronamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prolang",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "procost",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prorows",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "provariadic",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prosupport",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prokind",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prosecdef",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proleakproof",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proisstrict",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proretset",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "provolatile",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proparallel",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "pronargs",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "pronargdefaults",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prorettype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proargtypes",
              "type": "oidvector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proallargtypes",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proargmodes",
              "type": "char",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proargnames",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proargdefaults",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "protrftypes",
              "type": "oid[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "prosrc",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "probin",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proconfig",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            },
            {
              "name": "proacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1067,
                    1068,
                    1069,
                    1070,
                    1071,
                    1072,
                    1073,
                    1074,
                    1075,
                    1076,
                    1077,
                    1078,
                    1079,
                    1080,
                    1081,
                    1082,
                    1083,
                    1084,
                    1085,
                    1086,
                    1087,
                    1088,
                    1089,
                    1090,
                    1091,
                    1092,
                    1093,
                    1094,
                    1095,
                    1096,
                    1097
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_proc_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3521
                  ]
                }
              ]
            },
            {
              "name": "pg_proc_proname_args_nsp_index",
              "columns": [
                "proname",
                "proargtypes",
                "pronamespace"
              ],
              "definition": "USING btree (proname, proargtypes, pronamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3528
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1067,
                1068,
                1069,
                1070,
                1071,
                1072,
                1073,
                1074,
                1075,
                1076,
                1077,
                1078,
                1079,
                1080,
                1081,
                1082,
                1083,
                1084,
                1085,
                1086,
                1087,
                1088,
                1089,
                1090,
                1091,
                1092,
                1093,
                1094,
                1095,
                1096,
                1097
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "puballtables",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubinsert",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubupdate",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubdelete",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            },
            {
              "name": "pubtruncate",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1108,
                    1109,
                    1110,
                    1111,
                    1112,
                    1113,
                    1114,
                    1115,
                    1116,
                    1117
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_publication_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3535
                  ]
                }
              ]
            },
            {
              "name": "pg_publication_pubname_index",
              "columns": [
                "pubname"
              ],
              "definition": "USING btree (pubname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3542
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1108,
                1109,
                1110,
                1111,
                1112,
                1113,
                1114,
                1115,
                1116,
                1117
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication_rel",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1128,
                    1129,
                    1130,
                    1131,
                    1132
                  ]
                }
              ]
            },
            {
              "name": "prpubid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1128,
                    1129,
                    1130,
                    1131,
                    1132
                  ]
                }
              ]
            },
            {
              "name": "prrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1128,
                    1129,
                    1130,
                    1131,
                    1132
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_publication_rel_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3549
                  ]
                }
              ]
            },
            {
              "name": "pg_publication_rel_prrelid_prpubid_index",
              "columns": [
                "prrelid",
                "prpubid"
              ],
              "definition": "USING btree (prrelid, prpubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3556
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1128,
                1129,
                1130,
                1131,
                1132
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication_tables",
          "view": true,
          "columns": [
            {
              "name": "pubname",
              "type": "unknown",
              "default": "p.pubname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1143,
                    1144,
                    1145,
                    1146,
                    1147,
                    1148,
                    1149,
                    1150,
                    1151
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1143,
                    1144,
                    1145,
                    1146,
                    1147,
                    1148,
                    1149,
                    1150,
                    1151
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1143,
                    1144,
                    1145,
                    1146,
                    1147,
                    1148,
                    1149,
                    1150,
                    1151
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1143,
                1144,
                1145,
                1146,
                1147,
                1148,
                1149,
                1150,
                1151
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_range",
          "columns": [
            {
              "name": "rngtypid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            },
            {
              "name": "rngsubtype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            },
            {
              "name": "rngcollation",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            },
            {
              "name": "rngsubopc",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            },
            {
              "name": "rngcanonical",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            },
            {
              "name": "rngsubdiff",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1160,
                    1161,
                    1162,
                    1163,
                    1164,
                    1165,
                    1166,
                    1167
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_range_rngtypid_index",
              "columns": [
                "rngtypid"
              ],
              "definition": "USING btree (rngtypid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3563
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1160,
                1161,
                1162,
                1163,
                1164,
                1165,
                1166,
                1167
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_origin",
          "columns": [
            {
              "name": "roident",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1180,
                    1181,
                    1182,
                    1183
                  ]
                }
              ]
            },
            {
              "name": "roname",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1180,
                    1181,
                    1182,
                    1183
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_replication_origin_roiident_index",
              "columns": [
                "roident"
              ],
              "definition": "USING btree (roident)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3572
                  ]
                }
              ]
            },
            {
              "name": "pg_replication_origin_roname_index",
              "columns": [
                "roname"
              ],
              "definition": "USING btree (roname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3579
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1180,
                1181,
                1182,
                1183
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_origin_status",
          "view": true,
          "columns": [
            {
              "name": "local_id",
              "type": "unknown",
              "default": "pg_show_replication_origin_status.local_id",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1194,
                    1195,
                    1196,
                    1197,
                    1198,
                    1199
                  ]
                }
              ]
            },
            {
              "name": "external_id",
              "type": "unknown",
              "default": "pg_show_replication_origin_status.external_id",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1194,
                    1195,
                    1196,
                    1197,
                    1198,
                    1199
                  ]
                }
              ]
            },
            {
              "name": "remote_lsn",
              "type": "unknown",
              "default": "pg_show_replication_origin_status.remote_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1194,
                    1195,
                    1196,
                    1197,
                    1198,
                    1199
                  ]
                }
              ]
            },
            {
              "name": "local_lsn",
              "type": "unknown",
              "default": "pg_show_replication_origin_status.local_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1194,
                    1195,
                    1196,
                    1197,
                    1198,
                    1199
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1194,
                1195,
                1196,
                1197,
                1198,
                1199
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_slots",
          "view": true,
          "columns": [
            {
              "name": "slot_name",
              "type": "unknown",
              "default": "l.slot_name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "plugin",
              "type": "unknown",
              "default": "l.plugin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "slot_type",
              "type": "unknown",
              "default": "l.slot_type",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "datoid",
              "type": "unknown",
              "default": "l.datoid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "database",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "temporary",
              "type": "unknown",
              "default": "l.temporary",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "active",
              "type": "unknown",
              "default": "l.active",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "active_pid",
              "type": "unknown",
              "default": "l.active_pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "xmin",
              "type": "unknown",
              "default": "l.xmin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "catalog_xmin",
              "type": "unknown",
              "default": "l.catalog_xmin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "restart_lsn",
              "type": "unknown",
              "default": "l.restart_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            },
            {
              "name": "confirmed_flush_lsn",
              "type": "unknown",
              "default": "l.confirmed_flush_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1208,
                    1209,
                    1210,
                    1211,
                    1212,
                    1213,
                    1214,
                    1215,
                    1216,
                    1217,
                    1218,
                    1219,
                    1220,
                    1221,
                    1222
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1208,
                1209,
                1210,
                1211,
                1212,
                1213,
                1214,
                1215,
                1216,
                1217,
                1218,
                1219,
                1220,
                1221,
                1222
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_rewrite",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "rulename",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "ev_class",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "ev_type",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "ev_enabled",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "is_instead",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "ev_qual",
              "type": "pg_node_tree",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            },
            {
              "name": "ev_action",
              "type": "pg_node_tree",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1233,
                    1234,
                    1235,
                    1236,
                    1237,
                    1238,
                    1239,
                    1240,
                    1241,
                    1242
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_rewrite_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3588
                  ]
                }
              ]
            },
            {
              "name": "pg_rewrite_rel_rulename_index",
              "columns": [
                "ev_class",
                "rulename"
              ],
              "definition": "USING btree (ev_class, rulename)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3595
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1233,
                1234,
                1235,
                1236,
                1237,
                1238,
                1239,
                1240,
                1241,
                1242
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_roles",
          "view": true,
          "columns": [
            {
              "name": "rolname",
              "type": "unknown",
              "default": "pg_authid.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolsuper",
              "type": "unknown",
              "default": "pg_authid.rolsuper",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolinherit",
              "type": "unknown",
              "default": "pg_authid.rolinherit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolcreaterole",
              "type": "unknown",
              "default": "pg_authid.rolcreaterole",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolcreatedb",
              "type": "unknown",
              "default": "pg_authid.rolcreatedb",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolcanlogin",
              "type": "unknown",
              "default": "pg_authid.rolcanlogin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolreplication",
              "type": "unknown",
              "default": "pg_authid.rolreplication",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolconnlimit",
              "type": "unknown",
              "default": "pg_authid.rolconnlimit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolpassword",
              "type": "unknown",
              "default": "'********'::text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolvaliduntil",
              "type": "unknown",
              "default": "pg_authid.rolvaliduntil",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolbypassrls",
              "type": "unknown",
              "default": "pg_authid.rolbypassrls",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "rolconfig",
              "type": "unknown",
              "default": "s.setconfig",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            },
            {
              "name": "oid",
              "type": "unknown",
              "default": "pg_authid.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1253,
                    1254,
                    1255,
                    1256,
                    1257,
                    1258,
                    1259,
                    1260,
                    1261,
                    1262,
                    1263,
                    1264,
                    1265,
                    1266,
                    1267,
                    1268
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1253,
                1254,
                1255,
                1256,
                1257,
                1258,
                1259,
                1260,
                1261,
                1262,
                1263,
                1264,
                1265,
                1266,
                1267,
                1268
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_rules",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285
                  ]
                }
              ]
            },
            {
              "name": "rulename",
              "type": "unknown",
              "default": "r.rulename",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285
                  ]
                }
              ]
            },
            {
              "name": "definition",
              "type": "unknown",
              "default": "pg_get_ruledef(r.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1277,
                    1278,
                    1279,
                    1280,
                    1281,
                    1282,
                    1283,
                    1284,
                    1285
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1277,
                1278,
                1279,
                1280,
                1281,
                1282,
                1283,
                1284,
                1285
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_seclabel",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1294,
                    1295,
                    1296,
                    1297,
                    1298,
                    1299,
                    1300
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1294,
                    1295,
                    1296,
                    1297,
                    1298,
                    1299,
                    1300
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1294,
                    1295,
                    1296,
                    1297,
                    1298,
                    1299,
                    1300
                  ]
                }
              ]
            },
            {
              "name": "provider",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1294,
                    1295,
                    1296,
                    1297,
                    1298,
                    1299,
                    1300
                  ]
                }
              ]
            },
            {
              "name": "label",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1294,
                    1295,
                    1296,
                    1297,
                    1298,
                    1299,
                    1300
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_seclabel_object_index",
              "columns": [
                "objoid",
                "classoid",
                "objsubid",
                "provider"
              ],
              "definition": "USING btree (objoid, classoid, objsubid, provider)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3602
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1294,
                1295,
                1296,
                1297,
                1298,
                1299,
                1300
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_seclabels",
          "view": true,
          "columns": [
            {
              "name": "objoid",
              "type": "unknown",
              "default": "l.objoid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "unknown",
              "default": "l.classoid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "unknown",
              "default": "l.objsubid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "objtype",
              "type": "unknown",
              "default": "CASE WHEN (rel.relkind = ANY (ARRAY['r'::\"char\", 'p'::\"char\"])) THEN 'table'::text WHEN (rel.relkind = 'v'::\"char\") THEN 'view'::text WHEN (rel.relkind = 'm'::\"char\") THEN 'materialized view'::text WHEN (rel.relkind = 'S'::\"char\") THEN 'sequence'::text WHEN (rel.relkind = 'f'::\"char\") THEN 'foreign table'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "objnamespace",
              "type": "unknown",
              "default": "rel.relnamespace",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "objname",
              "type": "unknown",
              "default": "CASE WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text) ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text)) END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "provider",
              "type": "unknown",
              "default": "l.provider",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            },
            {
              "name": "label",
              "type": "unknown",
              "default": "l.label",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1311,
                    1312,
                    1313,
                    1314,
                    1315,
                    1316,
                    1317,
                    1318,
                    1319,
                    1320,
                    1321,
                    1322,
                    1323,
                    1324,
                    1325,
                    1326,
                    1327,
                    1328,
                    1329,
                    1330,
                    1331,
                    1332,
                    1333,
                    1334,
                    1335,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1350,
                    1351,
                    1352,
                    1353,
                    1354,
                    1355,
                    1356,
                    1357,
                    1358,
                    1359,
                    1360,
                    1361,
                    1362,
                    1363,
                    1364,
                    1365,
                    1366,
                    1367,
                    1368,
                    1369,
                    1370,
                    1371,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1377,
                    1378,
                    1379,
                    1380,
                    1381,
                    1382,
                    1383,
                    1384,
                    1385,
                    1386,
                    1387,
                    1388,
                    1389,
                    1390,
                    1391,
                    1392,
                    1393,
                    1394,
                    1395,
                    1396,
                    1397,
                    1398,
                    1399,
                    1400,
                    1401,
                    1402,
                    1403,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1409,
                    1410,
                    1411,
                    1412,
                    1413,
                    1414,
                    1415,
                    1416,
                    1417,
                    1418,
                    1419,
                    1420,
                    1421,
                    1422,
                    1423,
                    1424,
                    1425,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1431,
                    1432,
                    1433,
                    1434,
                    1435,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1451,
                    1452,
                    1453,
                    1454,
                    1455,
                    1456,
                    1457,
                    1458,
                    1459,
                    1460,
                    1461,
                    1462,
                    1463,
                    1464,
                    1465,
                    1466,
                    1467,
                    1468,
                    1469,
                    1470,
                    1471,
                    1472,
                    1473,
                    1474,
                    1475,
                    1476,
                    1477,
                    1478,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487,
                    1488,
                    1489,
                    1490,
                    1491,
                    1492,
                    1493,
                    1494,
                    1495,
                    1496,
                    1497
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1311,
                1312,
                1313,
                1314,
                1315,
                1316,
                1317,
                1318,
                1319,
                1320,
                1321,
                1322,
                1323,
                1324,
                1325,
                1326,
                1327,
                1328,
                1329,
                1330,
                1331,
                1332,
                1333,
                1334,
                1335,
                1336,
                1337,
                1338,
                1339,
                1340,
                1341,
                1342,
                1343,
                1344,
                1345,
                1346,
                1347,
                1348,
                1349,
                1350,
                1351,
                1352,
                1353,
                1354,
                1355,
                1356,
                1357,
                1358,
                1359,
                1360,
                1361,
                1362,
                1363,
                1364,
                1365,
                1366,
                1367,
                1368,
                1369,
                1370,
                1371,
                1372,
                1373,
                1374,
                1375,
                1376,
                1377,
                1378,
                1379,
                1380,
                1381,
                1382,
                1383,
                1384,
                1385,
                1386,
                1387,
                1388,
                1389,
                1390,
                1391,
                1392,
                1393,
                1394,
                1395,
                1396,
                1397,
                1398,
                1399,
                1400,
                1401,
                1402,
                1403,
                1404,
                1405,
                1406,
                1407,
                1408,
                1409,
                1410,
                1411,
                1412,
                1413,
                1414,
                1415,
                1416,
                1417,
                1418,
                1419,
                1420,
                1421,
                1422,
                1423,
                1424,
                1425,
                1426,
                1427,
                1428,
                1429,
                1430,
                1431,
                1432,
                1433,
                1434,
                1435,
                1436,
                1437,
                1438,
                1439,
                1440,
                1441,
                1442,
                1443,
                1444,
                1445,
                1446,
                1447,
                1448,
                1449,
                1450,
                1451,
                1452,
                1453,
                1454,
                1455,
                1456,
                1457,
                1458,
                1459,
                1460,
                1461,
                1462,
                1463,
                1464,
                1465,
                1466,
                1467,
                1468,
                1469,
                1470,
                1471,
                1472,
                1473,
                1474,
                1475,
                1476,
                1477,
                1478,
                1479,
                1480,
                1481,
                1482,
                1483,
                1484,
                1485,
                1486,
                1487,
                1488,
                1489,
                1490,
                1491,
                1492,
                1493,
                1494,
                1495,
                1496,
                1497
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_sequence",
          "columns": [
            {
              "name": "seqrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqtypid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqstart",
              "type": "bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqincrement",
              "type": "bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqmax",
              "type": "bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqmin",
              "type": "bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqcache",
              "type": "bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            },
            {
              "name": "seqcycle",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1506,
                    1507,
                    1508,
                    1509,
                    1510,
                    1511,
                    1512,
                    1513,
                    1514,
                    1515
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_sequence_seqrelid_index",
              "columns": [
                "seqrelid"
              ],
              "definition": "USING btree (seqrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3609
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1506,
                1507,
                1508,
                1509,
                1510,
                1511,
                1512,
                1513,
                1514,
                1515
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_sequences",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "sequencename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "sequenceowner",
              "type": "unknown",
              "default": "pg_get_userbyid(c.relowner)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "data_type",
              "type": "unknown",
              "default": "(s.seqtypid)::regtype",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "start_value",
              "type": "unknown",
              "default": "s.seqstart",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "min_value",
              "type": "unknown",
              "default": "s.seqmin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "max_value",
              "type": "unknown",
              "default": "s.seqmax",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "increment_by",
              "type": "unknown",
              "default": "s.seqincrement",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "cycle",
              "type": "unknown",
              "default": "s.seqcycle",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "cache_size",
              "type": "unknown",
              "default": "s.seqcache",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            },
            {
              "name": "last_value",
              "type": "unknown",
              "default": "CASE WHEN has_sequence_privilege(c.oid, 'SELECT,USAGE'::text) THEN pg_sequence_last_value((c.oid)::regclass) ELSE NULL::bigint END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1526,
                    1527,
                    1528,
                    1529,
                    1530,
                    1531,
                    1532,
                    1533,
                    1534,
                    1535,
                    1536,
                    1537,
                    1538,
                    1539,
                    1540,
                    1541,
                    1542,
                    1543,
                    1544
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1526,
                1527,
                1528,
                1529,
                1530,
                1531,
                1532,
                1533,
                1534,
                1535,
                1536,
                1537,
                1538,
                1539,
                1540,
                1541,
                1542,
                1543,
                1544
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_settings",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "a.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "setting",
              "type": "unknown",
              "default": "a.setting",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "unit",
              "type": "unknown",
              "default": "a.unit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "category",
              "type": "unknown",
              "default": "a.category",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "short_desc",
              "type": "unknown",
              "default": "a.short_desc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "extra_desc",
              "type": "unknown",
              "default": "a.extra_desc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "context",
              "type": "unknown",
              "default": "a.context",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "vartype",
              "type": "unknown",
              "default": "a.vartype",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "source",
              "type": "unknown",
              "default": "a.source",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "min_val",
              "type": "unknown",
              "default": "a.min_val",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "max_val",
              "type": "unknown",
              "default": "a.max_val",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "enumvals",
              "type": "unknown",
              "default": "a.enumvals",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "boot_val",
              "type": "unknown",
              "default": "a.boot_val",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "reset_val",
              "type": "unknown",
              "default": "a.reset_val",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "sourcefile",
              "type": "unknown",
              "default": "a.sourcefile",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "sourceline",
              "type": "unknown",
              "default": "a.sourceline",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            },
            {
              "name": "pending_restart",
              "type": "unknown",
              "default": "a.pending_restart",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1553,
                    1554,
                    1555,
                    1556,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1563,
                    1564,
                    1565,
                    1566,
                    1567,
                    1568,
                    1569,
                    1570,
                    1571
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1553,
                1554,
                1555,
                1556,
                1557,
                1558,
                1559,
                1560,
                1561,
                1562,
                1563,
                1564,
                1565,
                1566,
                1567,
                1568,
                1569,
                1570,
                1571
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shadow",
          "view": true,
          "columns": [
            {
              "name": "usename",
              "type": "unknown",
              "default": "pg_authid.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "unknown",
              "default": "pg_authid.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "usecreatedb",
              "type": "unknown",
              "default": "pg_authid.rolcreatedb",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "usesuper",
              "type": "unknown",
              "default": "pg_authid.rolsuper",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "userepl",
              "type": "unknown",
              "default": "pg_authid.rolreplication",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "usebypassrls",
              "type": "unknown",
              "default": "pg_authid.rolbypassrls",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "passwd",
              "type": "unknown",
              "default": "pg_authid.rolpassword",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "valuntil",
              "type": "unknown",
              "default": "pg_authid.rolvaliduntil",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            },
            {
              "name": "useconfig",
              "type": "unknown",
              "default": "s.setconfig",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1580,
                    1581,
                    1582,
                    1583,
                    1584,
                    1585,
                    1586,
                    1587,
                    1588,
                    1589,
                    1590,
                    1591,
                    1592
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1580,
                1581,
                1582,
                1583,
                1584,
                1585,
                1586,
                1587,
                1588,
                1589,
                1590,
                1591,
                1592
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shdepend",
          "columns": [
            {
              "name": "dbid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "classid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "objid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "refclassid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "refobjid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            },
            {
              "name": "deptype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1603,
                    1604,
                    1605,
                    1606,
                    1607,
                    1608,
                    1609,
                    1610,
                    1611
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_shdepend_depender_index",
              "columns": [
                "dbid",
                "classid",
                "objid",
                "objsubid"
              ],
              "definition": "USING btree (dbid, classid, objid, objsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3618
                  ]
                }
              ]
            },
            {
              "name": "pg_shdepend_reference_index",
              "columns": [
                "refclassid",
                "refobjid"
              ],
              "definition": "USING btree (refclassid, refobjid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3625
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1603,
                1604,
                1605,
                1606,
                1607,
                1608,
                1609,
                1610,
                1611
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shdescription",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1622,
                    1623,
                    1624,
                    1625,
                    1626
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1622,
                    1623,
                    1624,
                    1625,
                    1626
                  ]
                }
              ]
            },
            {
              "name": "description",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1622,
                    1623,
                    1624,
                    1625,
                    1626
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_shdescription_o_c_index",
              "columns": [
                "objoid",
                "classoid"
              ],
              "definition": "USING btree (objoid, classoid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3632
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1622,
                1623,
                1624,
                1625,
                1626
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shseclabel",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642
                  ]
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642
                  ]
                }
              ]
            },
            {
              "name": "provider",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642
                  ]
                }
              ]
            },
            {
              "name": "label",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1637,
                    1638,
                    1639,
                    1640,
                    1641,
                    1642
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_shseclabel_object_index",
              "columns": [
                "objoid",
                "classoid",
                "provider"
              ],
              "definition": "USING btree (objoid, classoid, provider)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3639
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1637,
                1638,
                1639,
                1640,
                1641,
                1642
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_activity",
          "view": true,
          "columns": [
            {
              "name": "datid",
              "type": "unknown",
              "default": "s.datid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "unknown",
              "default": "s.usesysid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "usename",
              "type": "unknown",
              "default": "u.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "application_name",
              "type": "unknown",
              "default": "s.application_name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "client_addr",
              "type": "unknown",
              "default": "s.client_addr",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "client_hostname",
              "type": "unknown",
              "default": "s.client_hostname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "client_port",
              "type": "unknown",
              "default": "s.client_port",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "backend_start",
              "type": "unknown",
              "default": "s.backend_start",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "xact_start",
              "type": "unknown",
              "default": "s.xact_start",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "query_start",
              "type": "unknown",
              "default": "s.query_start",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "state_change",
              "type": "unknown",
              "default": "s.state_change",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "wait_event_type",
              "type": "unknown",
              "default": "s.wait_event_type",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "wait_event",
              "type": "unknown",
              "default": "s.wait_event",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "state",
              "type": "unknown",
              "default": "s.state",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "backend_xid",
              "type": "unknown",
              "default": "s.backend_xid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "backend_xmin",
              "type": "unknown",
              "default": "s.backend_xmin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "query",
              "type": "unknown",
              "default": "s.query",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            },
            {
              "name": "backend_type",
              "type": "unknown",
              "default": "s.backend_type",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1653,
                    1654,
                    1655,
                    1656,
                    1657,
                    1658,
                    1659,
                    1660,
                    1661,
                    1662,
                    1663,
                    1664,
                    1665,
                    1666,
                    1667,
                    1668,
                    1669,
                    1670,
                    1671,
                    1672,
                    1673,
                    1674,
                    1675,
                    1676
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1653,
                1654,
                1655,
                1656,
                1657,
                1658,
                1659,
                1660,
                1661,
                1662,
                1663,
                1664,
                1665,
                1666,
                1667,
                1668,
                1669,
                1670,
                1671,
                1672,
                1673,
                1674,
                1675,
                1676
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_all_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "i.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "i.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_get_numscans(i.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_read",
              "type": "unknown",
              "default": "pg_stat_get_tuples_returned(i.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_get_tuples_fetched(i.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1685,
                    1686,
                    1687,
                    1688,
                    1689,
                    1690,
                    1691,
                    1692,
                    1693,
                    1694,
                    1695,
                    1696,
                    1697,
                    1698
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1685,
                1686,
                1687,
                1688,
                1689,
                1690,
                1691,
                1692,
                1693,
                1694,
                1695,
                1696,
                1697,
                1698
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_all_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_get_numscans(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_get_tuples_returned(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "(sum(pg_stat_get_numscans(i.indexrelid)))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_get_tuples_inserted(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_get_tuples_updated(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_get_tuples_deleted(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_get_tuples_hot_updated(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_live_tup",
              "type": "unknown",
              "default": "pg_stat_get_live_tuples(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_dead_tup",
              "type": "unknown",
              "default": "pg_stat_get_dead_tuples(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "n_mod_since_analyze",
              "type": "unknown",
              "default": "pg_stat_get_mod_since_analyze(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "last_vacuum",
              "type": "unknown",
              "default": "pg_stat_get_last_vacuum_time(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "last_autovacuum",
              "type": "unknown",
              "default": "pg_stat_get_last_autovacuum_time(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "last_analyze",
              "type": "unknown",
              "default": "pg_stat_get_last_analyze_time(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "last_autoanalyze",
              "type": "unknown",
              "default": "pg_stat_get_last_autoanalyze_time(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "vacuum_count",
              "type": "unknown",
              "default": "pg_stat_get_vacuum_count(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "autovacuum_count",
              "type": "unknown",
              "default": "pg_stat_get_autovacuum_count(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "analyze_count",
              "type": "unknown",
              "default": "pg_stat_get_analyze_count(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            },
            {
              "name": "autoanalyze_count",
              "type": "unknown",
              "default": "pg_stat_get_autoanalyze_count(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1707,
                    1708,
                    1709,
                    1710,
                    1711,
                    1712,
                    1713,
                    1714,
                    1715,
                    1716,
                    1717,
                    1718,
                    1719,
                    1720,
                    1721,
                    1722,
                    1723,
                    1724,
                    1725,
                    1726,
                    1727,
                    1728,
                    1729,
                    1730,
                    1731,
                    1732,
                    1733,
                    1734
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1707,
                1708,
                1709,
                1710,
                1711,
                1712,
                1713,
                1714,
                1715,
                1716,
                1717,
                1718,
                1719,
                1720,
                1721,
                1722,
                1723,
                1724,
                1725,
                1726,
                1727,
                1728,
                1729,
                1730,
                1731,
                1732,
                1733,
                1734
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_archiver",
          "view": true,
          "columns": [
            {
              "name": "archived_count",
              "type": "unknown",
              "default": "s.archived_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "last_archived_wal",
              "type": "unknown",
              "default": "s.last_archived_wal",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "last_archived_time",
              "type": "unknown",
              "default": "s.last_archived_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "failed_count",
              "type": "unknown",
              "default": "s.failed_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "last_failed_wal",
              "type": "unknown",
              "default": "s.last_failed_wal",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "last_failed_time",
              "type": "unknown",
              "default": "s.last_failed_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            },
            {
              "name": "stats_reset",
              "type": "unknown",
              "default": "s.stats_reset",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1743,
                    1744,
                    1745,
                    1746,
                    1747,
                    1748,
                    1749,
                    1750,
                    1751
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1743,
                1744,
                1745,
                1746,
                1747,
                1748,
                1749,
                1750,
                1751
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_bgwriter",
          "view": true,
          "columns": [
            {
              "name": "checkpoints_timed",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_timed_checkpoints()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "checkpoints_req",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_requested_checkpoints()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "checkpoint_write_time",
              "type": "unknown",
              "default": "pg_stat_get_checkpoint_write_time()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "checkpoint_sync_time",
              "type": "unknown",
              "default": "pg_stat_get_checkpoint_sync_time()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "buffers_checkpoint",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_buf_written_checkpoints()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "buffers_clean",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_buf_written_clean()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "maxwritten_clean",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_maxwritten_clean()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "buffers_backend",
              "type": "unknown",
              "default": "pg_stat_get_buf_written_backend()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "buffers_backend_fsync",
              "type": "unknown",
              "default": "pg_stat_get_buf_fsync_backend()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "buffers_alloc",
              "type": "unknown",
              "default": "pg_stat_get_buf_alloc()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            },
            {
              "name": "stats_reset",
              "type": "unknown",
              "default": "pg_stat_get_bgwriter_stat_reset_time()",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1760,
                    1761,
                    1762,
                    1763,
                    1764,
                    1765,
                    1766,
                    1767,
                    1768,
                    1769,
                    1770,
                    1771
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1760,
                1761,
                1762,
                1763,
                1764,
                1765,
                1766,
                1767,
                1768,
                1769,
                1770,
                1771
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_database",
          "view": true,
          "columns": [
            {
              "name": "datid",
              "type": "unknown",
              "default": "d.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "numbackends",
              "type": "unknown",
              "default": "CASE WHEN (d.oid = (0)::oid) THEN 0 ELSE pg_stat_get_db_numbackends(d.oid) END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "xact_commit",
              "type": "unknown",
              "default": "pg_stat_get_db_xact_commit(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "xact_rollback",
              "type": "unknown",
              "default": "pg_stat_get_db_xact_rollback(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "blks_read",
              "type": "unknown",
              "default": "(pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "blks_hit",
              "type": "unknown",
              "default": "pg_stat_get_db_blocks_hit(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "tup_returned",
              "type": "unknown",
              "default": "pg_stat_get_db_tuples_returned(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "tup_fetched",
              "type": "unknown",
              "default": "pg_stat_get_db_tuples_fetched(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "tup_inserted",
              "type": "unknown",
              "default": "pg_stat_get_db_tuples_inserted(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "tup_updated",
              "type": "unknown",
              "default": "pg_stat_get_db_tuples_updated(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "tup_deleted",
              "type": "unknown",
              "default": "pg_stat_get_db_tuples_deleted(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "conflicts",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_all(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "temp_files",
              "type": "unknown",
              "default": "pg_stat_get_db_temp_files(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "temp_bytes",
              "type": "unknown",
              "default": "pg_stat_get_db_temp_bytes(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "deadlocks",
              "type": "unknown",
              "default": "pg_stat_get_db_deadlocks(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "checksum_failures",
              "type": "unknown",
              "default": "pg_stat_get_db_checksum_failures(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "checksum_last_failure",
              "type": "unknown",
              "default": "pg_stat_get_db_checksum_last_failure(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "blk_read_time",
              "type": "unknown",
              "default": "pg_stat_get_db_blk_read_time(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "blk_write_time",
              "type": "unknown",
              "default": "pg_stat_get_db_blk_write_time(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            },
            {
              "name": "stats_reset",
              "type": "unknown",
              "default": "pg_stat_get_db_stat_reset_time(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1780,
                    1781,
                    1782,
                    1783,
                    1784,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789,
                    1790,
                    1791,
                    1792,
                    1793,
                    1794,
                    1795,
                    1796,
                    1797,
                    1798,
                    1799,
                    1800,
                    1801,
                    1802,
                    1803,
                    1804,
                    1805,
                    1806,
                    1807,
                    1808,
                    1809,
                    1810
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1780,
                1781,
                1782,
                1783,
                1784,
                1785,
                1786,
                1787,
                1788,
                1789,
                1790,
                1791,
                1792,
                1793,
                1794,
                1795,
                1796,
                1797,
                1798,
                1799,
                1800,
                1801,
                1802,
                1803,
                1804,
                1805,
                1806,
                1807,
                1808,
                1809,
                1810
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_database_conflicts",
          "view": true,
          "columns": [
            {
              "name": "datid",
              "type": "unknown",
              "default": "d.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "confl_tablespace",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_tablespace(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "confl_lock",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_lock(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "confl_snapshot",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_snapshot(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "confl_bufferpin",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_bufferpin(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            },
            {
              "name": "confl_deadlock",
              "type": "unknown",
              "default": "pg_stat_get_db_conflict_startup_deadlock(d.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1819,
                    1820,
                    1821,
                    1822,
                    1823,
                    1824,
                    1825,
                    1826,
                    1827
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1819,
                1820,
                1821,
                1822,
                1823,
                1824,
                1825,
                1826,
                1827
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_gssapi",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1836,
                    1837,
                    1838,
                    1839,
                    1840,
                    1841
                  ]
                }
              ]
            },
            {
              "name": "gss_authenticated",
              "type": "unknown",
              "default": "s.gss_auth",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1836,
                    1837,
                    1838,
                    1839,
                    1840,
                    1841
                  ]
                }
              ]
            },
            {
              "name": "principal",
              "type": "unknown",
              "default": "s.gss_princ",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1836,
                    1837,
                    1838,
                    1839,
                    1840,
                    1841
                  ]
                }
              ]
            },
            {
              "name": "encrypted",
              "type": "unknown",
              "default": "s.gss_enc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1836,
                    1837,
                    1838,
                    1839,
                    1840,
                    1841
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1836,
                1837,
                1838,
                1839,
                1840,
                1841
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_progress_cluster",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "datid",
              "type": "unknown",
              "default": "s.datid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "relid",
              "type": "unknown",
              "default": "s.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "command",
              "type": "unknown",
              "default": "CASE s.param1 WHEN 1 THEN 'CLUSTER'::text WHEN 2 THEN 'VACUUM FULL'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "phase",
              "type": "unknown",
              "default": "CASE s.param2 WHEN 0 THEN 'initializing'::text WHEN 1 THEN 'seq scanning heap'::text WHEN 2 THEN 'index scanning heap'::text WHEN 3 THEN 'sorting tuples'::text WHEN 4 THEN 'writing new heap'::text WHEN 5 THEN 'swapping relation files'::text WHEN 6 THEN 'rebuilding index'::text WHEN 7 THEN 'performing final cleanup'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "cluster_index_relid",
              "type": "unknown",
              "default": "(s.param3)::oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "heap_tuples_scanned",
              "type": "unknown",
              "default": "s.param4",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "heap_tuples_written",
              "type": "unknown",
              "default": "s.param5",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_total",
              "type": "unknown",
              "default": "s.param6",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_scanned",
              "type": "unknown",
              "default": "s.param7",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            },
            {
              "name": "index_rebuild_count",
              "type": "unknown",
              "default": "s.param8",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1850,
                    1851,
                    1852,
                    1853,
                    1854,
                    1855,
                    1856,
                    1857,
                    1858,
                    1859,
                    1860,
                    1861,
                    1862,
                    1863,
                    1864,
                    1865,
                    1866,
                    1867,
                    1868,
                    1869,
                    1870,
                    1871,
                    1872,
                    1873,
                    1874,
                    1875,
                    1876,
                    1877,
                    1878
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1850,
                1851,
                1852,
                1853,
                1854,
                1855,
                1856,
                1857,
                1858,
                1859,
                1860,
                1861,
                1862,
                1863,
                1864,
                1865,
                1866,
                1867,
                1868,
                1869,
                1870,
                1871,
                1872,
                1873,
                1874,
                1875,
                1876,
                1877,
                1878
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_progress_create_index",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "datid",
              "type": "unknown",
              "default": "s.datid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "relid",
              "type": "unknown",
              "default": "s.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "index_relid",
              "type": "unknown",
              "default": "(s.param7)::oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "command",
              "type": "unknown",
              "default": "CASE s.param1 WHEN 1 THEN 'CREATE INDEX'::text WHEN 2 THEN 'CREATE INDEX CONCURRENTLY'::text WHEN 3 THEN 'REINDEX'::text WHEN 4 THEN 'REINDEX CONCURRENTLY'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "phase",
              "type": "unknown",
              "default": "CASE s.param10 WHEN 0 THEN 'initializing'::text WHEN 1 THEN 'waiting for writers before build'::text WHEN 2 THEN ('building index'::text || COALESCE((': '::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), ''::text)) WHEN 3 THEN 'waiting for writers before validation'::text WHEN 4 THEN 'index validation: scanning index'::text WHEN 5 THEN 'index validation: sorting tuples'::text WHEN 6 THEN 'index validation: scanning table'::text WHEN 7 THEN 'waiting for old snapshots'::text WHEN 8 THEN 'waiting for readers before marking dead'::text WHEN 9 THEN 'waiting for readers before dropping'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "lockers_total",
              "type": "unknown",
              "default": "s.param4",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "lockers_done",
              "type": "unknown",
              "default": "s.param5",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "current_locker_pid",
              "type": "unknown",
              "default": "s.param6",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "blocks_total",
              "type": "unknown",
              "default": "s.param16",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "blocks_done",
              "type": "unknown",
              "default": "s.param17",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "tuples_total",
              "type": "unknown",
              "default": "s.param12",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "tuples_done",
              "type": "unknown",
              "default": "s.param13",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "partitions_total",
              "type": "unknown",
              "default": "s.param14",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            },
            {
              "name": "partitions_done",
              "type": "unknown",
              "default": "s.param15",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1887,
                    1888,
                    1889,
                    1890,
                    1891,
                    1892,
                    1893,
                    1894,
                    1895,
                    1896,
                    1897,
                    1898,
                    1899,
                    1900,
                    1901,
                    1902,
                    1903,
                    1904,
                    1905,
                    1906,
                    1907,
                    1908,
                    1909,
                    1910,
                    1911,
                    1912,
                    1913,
                    1914,
                    1915,
                    1916,
                    1917,
                    1918,
                    1919,
                    1920,
                    1921,
                    1922,
                    1923
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1887,
                1888,
                1889,
                1890,
                1891,
                1892,
                1893,
                1894,
                1895,
                1896,
                1897,
                1898,
                1899,
                1900,
                1901,
                1902,
                1903,
                1904,
                1905,
                1906,
                1907,
                1908,
                1909,
                1910,
                1911,
                1912,
                1913,
                1914,
                1915,
                1916,
                1917,
                1918,
                1919,
                1920,
                1921,
                1922,
                1923
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_progress_vacuum",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "datid",
              "type": "unknown",
              "default": "s.datid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "datname",
              "type": "unknown",
              "default": "d.datname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "relid",
              "type": "unknown",
              "default": "s.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "phase",
              "type": "unknown",
              "default": "CASE s.param1 WHEN 0 THEN 'initializing'::text WHEN 1 THEN 'scanning heap'::text WHEN 2 THEN 'vacuuming indexes'::text WHEN 3 THEN 'vacuuming heap'::text WHEN 4 THEN 'cleaning up indexes'::text WHEN 5 THEN 'truncating heap'::text WHEN 6 THEN 'performing final cleanup'::text ELSE NULL::text END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_total",
              "type": "unknown",
              "default": "s.param2",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_scanned",
              "type": "unknown",
              "default": "s.param3",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_vacuumed",
              "type": "unknown",
              "default": "s.param4",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "index_vacuum_count",
              "type": "unknown",
              "default": "s.param5",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "max_dead_tuples",
              "type": "unknown",
              "default": "s.param6",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            },
            {
              "name": "num_dead_tuples",
              "type": "unknown",
              "default": "s.param7",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1932,
                    1933,
                    1934,
                    1935,
                    1936,
                    1937,
                    1938,
                    1939,
                    1940,
                    1941,
                    1942,
                    1943,
                    1944,
                    1945,
                    1946,
                    1947,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1954
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1932,
                1933,
                1934,
                1935,
                1936,
                1937,
                1938,
                1939,
                1940,
                1941,
                1942,
                1943,
                1944,
                1945,
                1946,
                1947,
                1948,
                1949,
                1950,
                1951,
                1952,
                1953,
                1954
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_replication",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "unknown",
              "default": "s.usesysid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "usename",
              "type": "unknown",
              "default": "u.rolname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "application_name",
              "type": "unknown",
              "default": "s.application_name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "client_addr",
              "type": "unknown",
              "default": "s.client_addr",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "client_hostname",
              "type": "unknown",
              "default": "s.client_hostname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "client_port",
              "type": "unknown",
              "default": "s.client_port",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "backend_start",
              "type": "unknown",
              "default": "s.backend_start",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "backend_xmin",
              "type": "unknown",
              "default": "s.backend_xmin",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "state",
              "type": "unknown",
              "default": "w.state",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "sent_lsn",
              "type": "unknown",
              "default": "w.sent_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "write_lsn",
              "type": "unknown",
              "default": "w.write_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "flush_lsn",
              "type": "unknown",
              "default": "w.flush_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "replay_lsn",
              "type": "unknown",
              "default": "w.replay_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "write_lag",
              "type": "unknown",
              "default": "w.write_lag",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "flush_lag",
              "type": "unknown",
              "default": "w.flush_lag",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "replay_lag",
              "type": "unknown",
              "default": "w.replay_lag",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "sync_priority",
              "type": "unknown",
              "default": "w.sync_priority",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "sync_state",
              "type": "unknown",
              "default": "w.sync_state",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            },
            {
              "name": "reply_time",
              "type": "unknown",
              "default": "w.reply_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1963,
                    1964,
                    1965,
                    1966,
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1963,
                1964,
                1965,
                1966,
                1967,
                1968,
                1969,
                1970,
                1971,
                1972,
                1973,
                1974,
                1975,
                1976,
                1977,
                1978,
                1979,
                1980,
                1981,
                1982,
                1983,
                1984,
                1985,
                1986
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_ssl",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "ssl",
              "type": "unknown",
              "default": "s.ssl",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "version",
              "type": "unknown",
              "default": "s.sslversion",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "cipher",
              "type": "unknown",
              "default": "s.sslcipher",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "bits",
              "type": "unknown",
              "default": "s.sslbits",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "compression",
              "type": "unknown",
              "default": "s.sslcompression",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "client_dn",
              "type": "unknown",
              "default": "s.ssl_client_dn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "client_serial",
              "type": "unknown",
              "default": "s.ssl_client_serial",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            },
            {
              "name": "issuer_dn",
              "type": "unknown",
              "default": "s.ssl_issuer_dn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                1995,
                1996,
                1997,
                1998,
                1999,
                2000,
                2001,
                2002,
                2003,
                2004,
                2005
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_subscription",
          "view": true,
          "columns": [
            {
              "name": "subid",
              "type": "unknown",
              "default": "su.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "subname",
              "type": "unknown",
              "default": "su.subname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "pid",
              "type": "unknown",
              "default": "st.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "relid",
              "type": "unknown",
              "default": "st.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "received_lsn",
              "type": "unknown",
              "default": "st.received_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "last_msg_send_time",
              "type": "unknown",
              "default": "st.last_msg_send_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "last_msg_receipt_time",
              "type": "unknown",
              "default": "st.last_msg_receipt_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "latest_end_lsn",
              "type": "unknown",
              "default": "st.latest_end_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            },
            {
              "name": "latest_end_time",
              "type": "unknown",
              "default": "st.latest_end_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2014,
                    2015,
                    2016,
                    2017,
                    2018,
                    2019,
                    2020,
                    2021,
                    2022,
                    2023,
                    2024,
                    2025
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2014,
                2015,
                2016,
                2017,
                2018,
                2019,
                2020,
                2021,
                2022,
                2023,
                2024,
                2025
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_sys_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_all_indexes.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "pg_stat_all_indexes.indexrelid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.indexrelname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_read",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2034,
                    2035,
                    2036,
                    2037,
                    2038,
                    2039,
                    2040,
                    2041,
                    2042,
                    2043,
                    2044
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2034,
                2035,
                2036,
                2037,
                2038,
                2039,
                2040,
                2041,
                2042,
                2043,
                2044
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_sys_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_all_tables.seq_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_all_tables.seq_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_all_tables.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_all_tables.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_ins",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_del",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_hot_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_live_tup",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_live_tup",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_dead_tup",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_dead_tup",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "n_mod_since_analyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_mod_since_analyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "last_vacuum",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_vacuum",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "last_autovacuum",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_autovacuum",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "last_analyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_analyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "last_autoanalyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_autoanalyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "vacuum_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.vacuum_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "autovacuum_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.autovacuum_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "analyze_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.analyze_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            },
            {
              "name": "autoanalyze_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.autoanalyze_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2053,
                    2054,
                    2055,
                    2056,
                    2057,
                    2058,
                    2059,
                    2060,
                    2061,
                    2062,
                    2063,
                    2064,
                    2065,
                    2066,
                    2067,
                    2068,
                    2069,
                    2070,
                    2071,
                    2072,
                    2073,
                    2074,
                    2075,
                    2076,
                    2077
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2053,
                2054,
                2055,
                2056,
                2057,
                2058,
                2059,
                2060,
                2061,
                2062,
                2063,
                2064,
                2065,
                2066,
                2067,
                2068,
                2069,
                2070,
                2071,
                2072,
                2073,
                2074,
                2075,
                2076,
                2077
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_user_functions",
          "view": true,
          "columns": [
            {
              "name": "funcid",
              "type": "unknown",
              "default": "p.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            },
            {
              "name": "funcname",
              "type": "unknown",
              "default": "p.proname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            },
            {
              "name": "calls",
              "type": "unknown",
              "default": "pg_stat_get_function_calls(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            },
            {
              "name": "total_time",
              "type": "unknown",
              "default": "pg_stat_get_function_total_time(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            },
            {
              "name": "self_time",
              "type": "unknown",
              "default": "pg_stat_get_function_self_time(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2086,
                    2087,
                    2088,
                    2089,
                    2090,
                    2091,
                    2092,
                    2093,
                    2094,
                    2095
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2086,
                2087,
                2088,
                2089,
                2090,
                2091,
                2092,
                2093,
                2094,
                2095
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_user_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_all_indexes.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "pg_stat_all_indexes.indexrelid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "pg_stat_all_indexes.indexrelname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_read",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_all_indexes.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2104,
                    2105,
                    2106,
                    2107,
                    2108,
                    2109,
                    2110,
                    2111,
                    2112,
                    2113,
                    2114
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2104,
                2105,
                2106,
                2107,
                2108,
                2109,
                2110,
                2111,
                2112,
                2113,
                2114
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_user_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_all_tables.seq_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_all_tables.seq_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_all_tables.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_all_tables.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_ins",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_del",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_tup_hot_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_live_tup",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_live_tup",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_dead_tup",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_dead_tup",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "n_mod_since_analyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.n_mod_since_analyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "last_vacuum",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_vacuum",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "last_autovacuum",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_autovacuum",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "last_analyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_analyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "last_autoanalyze",
              "type": "unknown",
              "default": "pg_stat_all_tables.last_autoanalyze",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "vacuum_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.vacuum_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "autovacuum_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.autovacuum_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "analyze_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.analyze_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            },
            {
              "name": "autoanalyze_count",
              "type": "unknown",
              "default": "pg_stat_all_tables.autoanalyze_count",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2123,
                    2124,
                    2125,
                    2126,
                    2127,
                    2128,
                    2129,
                    2130,
                    2131,
                    2132,
                    2133,
                    2134,
                    2135,
                    2136,
                    2137,
                    2138,
                    2139,
                    2140,
                    2141,
                    2142,
                    2143,
                    2144,
                    2145,
                    2146,
                    2147
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2123,
                2124,
                2125,
                2126,
                2127,
                2128,
                2129,
                2130,
                2131,
                2132,
                2133,
                2134,
                2135,
                2136,
                2137,
                2138,
                2139,
                2140,
                2141,
                2142,
                2143,
                2144,
                2145,
                2146,
                2147
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_wal_receiver",
          "view": true,
          "columns": [
            {
              "name": "pid",
              "type": "unknown",
              "default": "s.pid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "status",
              "type": "unknown",
              "default": "s.status",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "receive_start_lsn",
              "type": "unknown",
              "default": "s.receive_start_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "receive_start_tli",
              "type": "unknown",
              "default": "s.receive_start_tli",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "received_lsn",
              "type": "unknown",
              "default": "s.received_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "received_tli",
              "type": "unknown",
              "default": "s.received_tli",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "last_msg_send_time",
              "type": "unknown",
              "default": "s.last_msg_send_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "last_msg_receipt_time",
              "type": "unknown",
              "default": "s.last_msg_receipt_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "latest_end_lsn",
              "type": "unknown",
              "default": "s.latest_end_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "latest_end_time",
              "type": "unknown",
              "default": "s.latest_end_time",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "slot_name",
              "type": "unknown",
              "default": "s.slot_name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "sender_host",
              "type": "unknown",
              "default": "s.sender_host",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "sender_port",
              "type": "unknown",
              "default": "s.sender_port",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            },
            {
              "name": "conninfo",
              "type": "unknown",
              "default": "s.conninfo",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2156,
                    2157,
                    2158,
                    2159,
                    2160,
                    2161,
                    2162,
                    2163,
                    2164,
                    2165,
                    2166,
                    2167,
                    2168,
                    2169,
                    2170,
                    2171,
                    2172
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2156,
                2157,
                2158,
                2159,
                2160,
                2161,
                2162,
                2163,
                2164,
                2165,
                2166,
                2167,
                2168,
                2169,
                2170,
                2171,
                2172
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_xact_all_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_get_xact_numscans(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_get_xact_tuples_returned(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "(sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_get_xact_tuples_inserted(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_get_xact_tuples_updated(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_get_xact_tuples_deleted(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_get_xact_tuples_hot_updated(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2181,
                    2182,
                    2183,
                    2184,
                    2185,
                    2186,
                    2187,
                    2188,
                    2189,
                    2190,
                    2191,
                    2192,
                    2193,
                    2194,
                    2195,
                    2196,
                    2197
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2181,
                2182,
                2183,
                2184,
                2185,
                2186,
                2187,
                2188,
                2189,
                2190,
                2191,
                2192,
                2193,
                2194,
                2195,
                2196,
                2197
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_xact_sys_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.seq_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.seq_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_ins",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_del",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_hot_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2206,
                    2207,
                    2208,
                    2209,
                    2210,
                    2211,
                    2212,
                    2213,
                    2214,
                    2215,
                    2216,
                    2217,
                    2218,
                    2219
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2206,
                2207,
                2208,
                2209,
                2210,
                2211,
                2212,
                2213,
                2214,
                2215,
                2216,
                2217,
                2218,
                2219
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_xact_user_functions",
          "view": true,
          "columns": [
            {
              "name": "funcid",
              "type": "unknown",
              "default": "p.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            },
            {
              "name": "funcname",
              "type": "unknown",
              "default": "p.proname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            },
            {
              "name": "calls",
              "type": "unknown",
              "default": "pg_stat_get_xact_function_calls(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            },
            {
              "name": "total_time",
              "type": "unknown",
              "default": "pg_stat_get_xact_function_total_time(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            },
            {
              "name": "self_time",
              "type": "unknown",
              "default": "pg_stat_get_xact_function_self_time(p.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2228,
                    2229,
                    2230,
                    2231,
                    2232,
                    2233,
                    2234,
                    2235,
                    2236,
                    2237
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2228,
                2229,
                2230,
                2231,
                2232,
                2233,
                2234,
                2235,
                2236,
                2237
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stat_xact_user_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "seq_scan",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.seq_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "seq_tup_read",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.seq_tup_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "idx_scan",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.idx_scan",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "idx_tup_fetch",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.idx_tup_fetch",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "n_tup_ins",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_ins",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "n_tup_upd",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "n_tup_del",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_del",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            },
            {
              "name": "n_tup_hot_upd",
              "type": "unknown",
              "default": "pg_stat_xact_all_tables.n_tup_hot_upd",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2246,
                    2247,
                    2248,
                    2249,
                    2250,
                    2251,
                    2252,
                    2253,
                    2254,
                    2255,
                    2256,
                    2257,
                    2258,
                    2259
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2246,
                2247,
                2248,
                2249,
                2250,
                2251,
                2252,
                2253,
                2254,
                2255,
                2256,
                2257,
                2258,
                2259
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_all_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "i.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "i.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "(pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "pg_stat_get_blocks_hit(i.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2268,
                    2269,
                    2270,
                    2271,
                    2272,
                    2273,
                    2274,
                    2275,
                    2276,
                    2277,
                    2278,
                    2279,
                    2280
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2268,
                2269,
                2270,
                2271,
                2272,
                2273,
                2274,
                2275,
                2276,
                2277,
                2278,
                2279,
                2280
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_all_sequences",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2289,
                    2290,
                    2291,
                    2292,
                    2293,
                    2294,
                    2295,
                    2296,
                    2297
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2289,
                    2290,
                    2291,
                    2292,
                    2293,
                    2294,
                    2295,
                    2296,
                    2297
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2289,
                    2290,
                    2291,
                    2292,
                    2293,
                    2294,
                    2295,
                    2296,
                    2297
                  ]
                }
              ]
            },
            {
              "name": "blks_read",
              "type": "unknown",
              "default": "(pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2289,
                    2290,
                    2291,
                    2292,
                    2293,
                    2294,
                    2295,
                    2296,
                    2297
                  ]
                }
              ]
            },
            {
              "name": "blks_hit",
              "type": "unknown",
              "default": "pg_stat_get_blocks_hit(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2289,
                    2290,
                    2291,
                    2292,
                    2293,
                    2294,
                    2295,
                    2296,
                    2297
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2289,
                2290,
                2291,
                2292,
                2293,
                2294,
                2295,
                2296,
                2297
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_all_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "c.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_read",
              "type": "unknown",
              "default": "(pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_hit",
              "type": "unknown",
              "default": "pg_stat_get_blocks_hit(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "(sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "(sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_read",
              "type": "unknown",
              "default": "(pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_hit",
              "type": "unknown",
              "default": "pg_stat_get_blocks_hit(t.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_read",
              "type": "unknown",
              "default": "(sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_hit",
              "type": "unknown",
              "default": "(sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2306,
                    2307,
                    2308,
                    2309,
                    2310,
                    2311,
                    2312,
                    2313,
                    2314,
                    2315,
                    2316,
                    2317,
                    2318,
                    2319,
                    2320,
                    2321,
                    2322,
                    2323,
                    2324
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2306,
                2307,
                2308,
                2309,
                2310,
                2311,
                2312,
                2313,
                2314,
                2315,
                2316,
                2317,
                2318,
                2319,
                2320,
                2321,
                2322,
                2323,
                2324
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_sys_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_indexes.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "pg_statio_all_indexes.indexrelid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.indexrelname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_indexes.idx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_indexes.idx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2333,
                    2334,
                    2335,
                    2336,
                    2337,
                    2338,
                    2339,
                    2340,
                    2341,
                    2342
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2333,
                2334,
                2335,
                2336,
                2337,
                2338,
                2339,
                2340,
                2341,
                2342
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_sys_sequences",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_sequences.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2351,
                    2352,
                    2353,
                    2354,
                    2355,
                    2356,
                    2357,
                    2358
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_sequences.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2351,
                    2352,
                    2353,
                    2354,
                    2355,
                    2356,
                    2357,
                    2358
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_sequences.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2351,
                    2352,
                    2353,
                    2354,
                    2355,
                    2356,
                    2357,
                    2358
                  ]
                }
              ]
            },
            {
              "name": "blks_read",
              "type": "unknown",
              "default": "pg_statio_all_sequences.blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2351,
                    2352,
                    2353,
                    2354,
                    2355,
                    2356,
                    2357,
                    2358
                  ]
                }
              ]
            },
            {
              "name": "blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_sequences.blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2351,
                    2352,
                    2353,
                    2354,
                    2355,
                    2356,
                    2357,
                    2358
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2351,
                2352,
                2353,
                2354,
                2355,
                2356,
                2357,
                2358
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_sys_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.heap_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.heap_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.idx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.idx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.toast_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.toast_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.tidx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.tidx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2367,
                    2368,
                    2369,
                    2370,
                    2371,
                    2372,
                    2373,
                    2374,
                    2375,
                    2376,
                    2377,
                    2378,
                    2379,
                    2380
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2367,
                2368,
                2369,
                2370,
                2371,
                2372,
                2373,
                2374,
                2375,
                2376,
                2377,
                2378,
                2379,
                2380
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_user_indexes",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_indexes.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "indexrelid",
              "type": "unknown",
              "default": "pg_statio_all_indexes.indexrelid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "indexrelname",
              "type": "unknown",
              "default": "pg_statio_all_indexes.indexrelname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_indexes.idx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_indexes.idx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2389,
                    2390,
                    2391,
                    2392,
                    2393,
                    2394,
                    2395,
                    2396,
                    2397,
                    2398
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2389,
                2390,
                2391,
                2392,
                2393,
                2394,
                2395,
                2396,
                2397,
                2398
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_user_sequences",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_sequences.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2407,
                    2408,
                    2409,
                    2410,
                    2411,
                    2412,
                    2413,
                    2414
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_sequences.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2407,
                    2408,
                    2409,
                    2410,
                    2411,
                    2412,
                    2413,
                    2414
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_sequences.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2407,
                    2408,
                    2409,
                    2410,
                    2411,
                    2412,
                    2413,
                    2414
                  ]
                }
              ]
            },
            {
              "name": "blks_read",
              "type": "unknown",
              "default": "pg_statio_all_sequences.blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2407,
                    2408,
                    2409,
                    2410,
                    2411,
                    2412,
                    2413,
                    2414
                  ]
                }
              ]
            },
            {
              "name": "blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_sequences.blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2407,
                    2408,
                    2409,
                    2410,
                    2411,
                    2412,
                    2413,
                    2414
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2407,
                2408,
                2409,
                2410,
                2411,
                2412,
                2413,
                2414
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statio_user_tables",
          "view": true,
          "columns": [
            {
              "name": "relid",
              "type": "unknown",
              "default": "pg_statio_all_tables.relid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "pg_statio_all_tables.schemaname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "relname",
              "type": "unknown",
              "default": "pg_statio_all_tables.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.heap_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "heap_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.heap_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.idx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "idx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.idx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.toast_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "toast_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.toast_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_read",
              "type": "unknown",
              "default": "pg_statio_all_tables.tidx_blks_read",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            },
            {
              "name": "tidx_blks_hit",
              "type": "unknown",
              "default": "pg_statio_all_tables.tidx_blks_hit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2423,
                    2424,
                    2425,
                    2426,
                    2427,
                    2428,
                    2429,
                    2430,
                    2431,
                    2432,
                    2433,
                    2434,
                    2435,
                    2436
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2423,
                2424,
                2425,
                2426,
                2427,
                2428,
                2429,
                2430,
                2431,
                2432,
                2433,
                2434,
                2435,
                2436
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic",
          "columns": [
            {
              "name": "starelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staattnum",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stainherit",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanullfrac",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stawidth",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stadistinct",
              "type": "real",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stakind1",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stakind2",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stakind3",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stakind4",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stakind5",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staop1",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staop2",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staop3",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staop4",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "staop5",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stacoll1",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stacoll2",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stacoll3",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stacoll4",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stacoll5",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanumbers1",
              "type": "real[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanumbers2",
              "type": "real[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanumbers3",
              "type": "real[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanumbers4",
              "type": "real[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stanumbers5",
              "type": "real[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stavalues1",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stavalues2",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stavalues3",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stavalues4",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            },
            {
              "name": "stavalues5",
              "type": "anyarray",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2447,
                    2448,
                    2449,
                    2450,
                    2451,
                    2452,
                    2453,
                    2454,
                    2455,
                    2456,
                    2457,
                    2458,
                    2459,
                    2460,
                    2461,
                    2462,
                    2463,
                    2464,
                    2465,
                    2466,
                    2467,
                    2468,
                    2469,
                    2470,
                    2471,
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477,
                    2478,
                    2479
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_statistic_relid_att_inh_index",
              "columns": [
                "starelid",
                "staattnum",
                "stainherit"
              ],
              "definition": "USING btree (starelid, staattnum, stainherit)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3676
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2447,
                2448,
                2449,
                2450,
                2451,
                2452,
                2453,
                2454,
                2455,
                2456,
                2457,
                2458,
                2459,
                2460,
                2461,
                2462,
                2463,
                2464,
                2465,
                2466,
                2467,
                2468,
                2469,
                2470,
                2471,
                2472,
                2473,
                2474,
                2475,
                2476,
                2477,
                2478,
                2479
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic_ext",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxkeys",
              "type": "int2vector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            },
            {
              "name": "stxkind",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2490,
                    2491,
                    2492,
                    2493,
                    2494,
                    2495,
                    2496,
                    2497,
                    2498
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_statistic_ext_name_index",
              "columns": [
                "stxname",
                "stxnamespace"
              ],
              "definition": "USING btree (stxname, stxnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3655
                  ]
                }
              ]
            },
            {
              "name": "pg_statistic_ext_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3662
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_statistic_ext_relid_index",
              "columns": [
                "stxrelid"
              ],
              "definition": "USING btree (stxrelid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3669
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2490,
                2491,
                2492,
                2493,
                2494,
                2495,
                2496,
                2497,
                2498
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic_ext_data",
          "columns": [
            {
              "name": "stxoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2509,
                    2510,
                    2511,
                    2512,
                    2513,
                    2514
                  ]
                }
              ]
            },
            {
              "name": "stxdndistinct",
              "type": "pg_ndistinct",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2509,
                    2510,
                    2511,
                    2512,
                    2513,
                    2514
                  ]
                }
              ]
            },
            {
              "name": "stxddependencies",
              "type": "pg_dependencies",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2509,
                    2510,
                    2511,
                    2512,
                    2513,
                    2514
                  ]
                }
              ]
            },
            {
              "name": "stxdmcv",
              "type": "pg_mcv_list",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2509,
                    2510,
                    2511,
                    2512,
                    2513,
                    2514
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_statistic_ext_data_stxoid_index",
              "columns": [
                "stxoid"
              ],
              "definition": "USING btree (stxoid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3648
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2509,
                2510,
                2511,
                2512,
                2513,
                2514
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stats",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "attname",
              "type": "unknown",
              "default": "a.attname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "inherited",
              "type": "unknown",
              "default": "s.stainherit",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "null_frac",
              "type": "unknown",
              "default": "s.stanullfrac",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "avg_width",
              "type": "unknown",
              "default": "s.stawidth",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "n_distinct",
              "type": "unknown",
              "default": "s.stadistinct",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "most_common_vals",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 1) THEN s.stavalues1 WHEN (s.stakind2 = 1) THEN s.stavalues2 WHEN (s.stakind3 = 1) THEN s.stavalues3 WHEN (s.stakind4 = 1) THEN s.stavalues4 WHEN (s.stakind5 = 1) THEN s.stavalues5 ELSE NULL::anyarray END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "most_common_freqs",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 1) THEN s.stanumbers1 WHEN (s.stakind2 = 1) THEN s.stanumbers2 WHEN (s.stakind3 = 1) THEN s.stanumbers3 WHEN (s.stakind4 = 1) THEN s.stanumbers4 WHEN (s.stakind5 = 1) THEN s.stanumbers5 ELSE NULL::real[] END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "histogram_bounds",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 2) THEN s.stavalues1 WHEN (s.stakind2 = 2) THEN s.stavalues2 WHEN (s.stakind3 = 2) THEN s.stavalues3 WHEN (s.stakind4 = 2) THEN s.stavalues4 WHEN (s.stakind5 = 2) THEN s.stavalues5 ELSE NULL::anyarray END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "correlation",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 3) THEN s.stanumbers1[1] WHEN (s.stakind2 = 3) THEN s.stanumbers2[1] WHEN (s.stakind3 = 3) THEN s.stanumbers3[1] WHEN (s.stakind4 = 3) THEN s.stanumbers4[1] WHEN (s.stakind5 = 3) THEN s.stanumbers5[1] ELSE NULL::real END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "most_common_elems",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 4) THEN s.stavalues1 WHEN (s.stakind2 = 4) THEN s.stavalues2 WHEN (s.stakind3 = 4) THEN s.stavalues3 WHEN (s.stakind4 = 4) THEN s.stavalues4 WHEN (s.stakind5 = 4) THEN s.stavalues5 ELSE NULL::anyarray END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "most_common_elem_freqs",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 4) THEN s.stanumbers1 WHEN (s.stakind2 = 4) THEN s.stanumbers2 WHEN (s.stakind3 = 4) THEN s.stanumbers3 WHEN (s.stakind4 = 4) THEN s.stanumbers4 WHEN (s.stakind5 = 4) THEN s.stanumbers5 ELSE NULL::real[] END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            },
            {
              "name": "elem_count_histogram",
              "type": "unknown",
              "default": "CASE WHEN (s.stakind1 = 5) THEN s.stanumbers1 WHEN (s.stakind2 = 5) THEN s.stanumbers2 WHEN (s.stakind3 = 5) THEN s.stanumbers3 WHEN (s.stakind4 = 5) THEN s.stanumbers4 WHEN (s.stakind5 = 5) THEN s.stanumbers5 ELSE NULL::real[] END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2525,
                    2526,
                    2527,
                    2528,
                    2529,
                    2530,
                    2531,
                    2532,
                    2533,
                    2534,
                    2535,
                    2536,
                    2537,
                    2538,
                    2539,
                    2540,
                    2541,
                    2542,
                    2543,
                    2544,
                    2545,
                    2546,
                    2547,
                    2548,
                    2549,
                    2550,
                    2551,
                    2552,
                    2553,
                    2554,
                    2555,
                    2556,
                    2557,
                    2558,
                    2559,
                    2560,
                    2561,
                    2562,
                    2563,
                    2564,
                    2565,
                    2566,
                    2567,
                    2568,
                    2569,
                    2570,
                    2571,
                    2572,
                    2573,
                    2574,
                    2575,
                    2576,
                    2577,
                    2578,
                    2579,
                    2580,
                    2581,
                    2582,
                    2583,
                    2584,
                    2585,
                    2586,
                    2587,
                    2588,
                    2589,
                    2590,
                    2591,
                    2592,
                    2593
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2525,
                2526,
                2527,
                2528,
                2529,
                2530,
                2531,
                2532,
                2533,
                2534,
                2535,
                2536,
                2537,
                2538,
                2539,
                2540,
                2541,
                2542,
                2543,
                2544,
                2545,
                2546,
                2547,
                2548,
                2549,
                2550,
                2551,
                2552,
                2553,
                2554,
                2555,
                2556,
                2557,
                2558,
                2559,
                2560,
                2561,
                2562,
                2563,
                2564,
                2565,
                2566,
                2567,
                2568,
                2569,
                2570,
                2571,
                2572,
                2573,
                2574,
                2575,
                2576,
                2577,
                2578,
                2579,
                2580,
                2581,
                2582,
                2583,
                2584,
                2585,
                2586,
                2587,
                2588,
                2589,
                2590,
                2591,
                2592,
                2593
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stats_ext",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "cn.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "statistics_schemaname",
              "type": "unknown",
              "default": "sn.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "statistics_name",
              "type": "unknown",
              "default": "s.stxname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "statistics_owner",
              "type": "unknown",
              "default": "pg_get_userbyid(s.stxowner)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "attnames",
              "type": "unknown",
              "default": "( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg FROM (unnest(s.stxkeys) k(k) JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k)))))",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "kinds",
              "type": "unknown",
              "default": "s.stxkind",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "n_distinct",
              "type": "unknown",
              "default": "sd.stxdndistinct",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "dependencies",
              "type": "unknown",
              "default": "sd.stxddependencies",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "most_common_vals",
              "type": "unknown",
              "default": "m.most_common_vals",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "most_common_val_nulls",
              "type": "unknown",
              "default": "m.most_common_val_nulls",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "most_common_freqs",
              "type": "unknown",
              "default": "m.most_common_freqs",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            },
            {
              "name": "most_common_base_freqs",
              "type": "unknown",
              "default": "m.most_common_base_freqs",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2602,
                    2603,
                    2604,
                    2605,
                    2606,
                    2607,
                    2608,
                    2609,
                    2610,
                    2611,
                    2612,
                    2613,
                    2614,
                    2615,
                    2616,
                    2617,
                    2618,
                    2619,
                    2620,
                    2621,
                    2622,
                    2623,
                    2624,
                    2625,
                    2626,
                    2627,
                    2628,
                    2629,
                    2630,
                    2631
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2602,
                2603,
                2604,
                2605,
                2606,
                2607,
                2608,
                2609,
                2610,
                2611,
                2612,
                2613,
                2614,
                2615,
                2616,
                2617,
                2618,
                2619,
                2620,
                2621,
                2622,
                2623,
                2624,
                2625,
                2626,
                2627,
                2628,
                2629,
                2630,
                2631
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_subscription",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subdbid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subenabled",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subconninfo",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subslotname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subsynccommit",
              "type": "text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            },
            {
              "name": "subpublications",
              "type": "text[]",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2642,
                    2643,
                    2644,
                    2645,
                    2646,
                    2647,
                    2648,
                    2649,
                    2650,
                    2651,
                    2652
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_subscription_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3685
                  ]
                }
              ]
            },
            {
              "name": "pg_subscription_subname_index",
              "columns": [
                "subdbid",
                "subname"
              ],
              "definition": "USING btree (subdbid, subname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3703
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2642,
                2643,
                2644,
                2645,
                2646,
                2647,
                2648,
                2649,
                2650,
                2651,
                2652
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_subscription_rel",
          "columns": [
            {
              "name": "srsubid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2665,
                    2666,
                    2667,
                    2668,
                    2669,
                    2670
                  ]
                }
              ]
            },
            {
              "name": "srrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2665,
                    2666,
                    2667,
                    2668,
                    2669,
                    2670
                  ]
                }
              ]
            },
            {
              "name": "srsubstate",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2665,
                    2666,
                    2667,
                    2668,
                    2669,
                    2670
                  ]
                }
              ]
            },
            {
              "name": "srsublsn",
              "type": "pg_lsn",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2665,
                    2666,
                    2667,
                    2668,
                    2669,
                    2670
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_subscription_rel_srrelid_srsubid_index",
              "columns": [
                "srrelid",
                "srsubid"
              ],
              "definition": "USING btree (srrelid, srsubid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3694
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2665,
                2666,
                2667,
                2668,
                2669,
                2670
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_tables",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "tablename",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "tableowner",
              "type": "unknown",
              "default": "pg_get_userbyid(c.relowner)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "unknown",
              "default": "t.spcname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "hasindexes",
              "type": "unknown",
              "default": "c.relhasindex",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "hasrules",
              "type": "unknown",
              "default": "c.relhasrules",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "hastriggers",
              "type": "unknown",
              "default": "c.relhastriggers",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            },
            {
              "name": "rowsecurity",
              "type": "unknown",
              "default": "c.relrowsecurity",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2681,
                    2682,
                    2683,
                    2684,
                    2685,
                    2686,
                    2687,
                    2688,
                    2689,
                    2690,
                    2691,
                    2692,
                    2693
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2681,
                2682,
                2683,
                2684,
                2685,
                2686,
                2687,
                2688,
                2689,
                2690,
                2691,
                2692,
                2693
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_tablespace",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2704,
                    2705,
                    2706,
                    2707,
                    2708,
                    2709,
                    2710
                  ]
                }
              ]
            },
            {
              "name": "spcname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2704,
                    2705,
                    2706,
                    2707,
                    2708,
                    2709,
                    2710
                  ]
                }
              ]
            },
            {
              "name": "spcowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2704,
                    2705,
                    2706,
                    2707,
                    2708,
                    2709,
                    2710
                  ]
                }
              ]
            },
            {
              "name": "spcacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2704,
                    2705,
                    2706,
                    2707,
                    2708,
                    2709,
                    2710
                  ]
                }
              ]
            },
            {
              "name": "spcoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2704,
                    2705,
                    2706,
                    2707,
                    2708,
                    2709,
                    2710
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_tablespace_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3710
                  ]
                }
              ]
            },
            {
              "name": "pg_tablespace_spcname_index",
              "columns": [
                "spcname"
              ],
              "definition": "USING btree (spcname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3717
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2704,
                2705,
                2706,
                2707,
                2708,
                2709,
                2710
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_timezone_abbrevs",
          "view": true,
          "columns": [
            {
              "name": "abbrev",
              "type": "unknown",
              "default": "pg_timezone_abbrevs.abbrev",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2721,
                    2722,
                    2723,
                    2724,
                    2725
                  ]
                }
              ]
            },
            {
              "name": "utc_offset",
              "type": "unknown",
              "default": "pg_timezone_abbrevs.utc_offset",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2721,
                    2722,
                    2723,
                    2724,
                    2725
                  ]
                }
              ]
            },
            {
              "name": "is_dst",
              "type": "unknown",
              "default": "pg_timezone_abbrevs.is_dst",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2721,
                    2722,
                    2723,
                    2724,
                    2725
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2721,
                2722,
                2723,
                2724,
                2725
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_timezone_names",
          "view": true,
          "columns": [
            {
              "name": "name",
              "type": "unknown",
              "default": "pg_timezone_names.name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2734,
                    2735,
                    2736,
                    2737,
                    2738,
                    2739
                  ]
                }
              ]
            },
            {
              "name": "abbrev",
              "type": "unknown",
              "default": "pg_timezone_names.abbrev",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2734,
                    2735,
                    2736,
                    2737,
                    2738,
                    2739
                  ]
                }
              ]
            },
            {
              "name": "utc_offset",
              "type": "unknown",
              "default": "pg_timezone_names.utc_offset",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2734,
                    2735,
                    2736,
                    2737,
                    2738,
                    2739
                  ]
                }
              ]
            },
            {
              "name": "is_dst",
              "type": "unknown",
              "default": "pg_timezone_names.is_dst",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2734,
                    2735,
                    2736,
                    2737,
                    2738,
                    2739
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2734,
                2735,
                2736,
                2737,
                2738,
                2739
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_transform",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2750,
                    2751,
                    2752,
                    2753,
                    2754,
                    2755,
                    2756
                  ]
                }
              ]
            },
            {
              "name": "trftype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2750,
                    2751,
                    2752,
                    2753,
                    2754,
                    2755,
                    2756
                  ]
                }
              ]
            },
            {
              "name": "trflang",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2750,
                    2751,
                    2752,
                    2753,
                    2754,
                    2755,
                    2756
                  ]
                }
              ]
            },
            {
              "name": "trffromsql",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2750,
                    2751,
                    2752,
                    2753,
                    2754,
                    2755,
                    2756
                  ]
                }
              ]
            },
            {
              "name": "trftosql",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2750,
                    2751,
                    2752,
                    2753,
                    2754,
                    2755,
                    2756
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_transform_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3726
                  ]
                }
              ]
            },
            {
              "name": "pg_transform_type_lang_index",
              "columns": [
                "trftype",
                "trflang"
              ],
              "definition": "USING btree (trftype, trflang)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3733
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2750,
                2751,
                2752,
                2753,
                2754,
                2755,
                2756
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_trigger",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgfoid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgtype",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgenabled",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgisinternal",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgconstrrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgconstrindid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgconstraint",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgdeferrable",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tginitdeferred",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgnargs",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgattr",
              "type": "int2vector",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgargs",
              "type": "bytea",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgqual",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgoldtable",
              "type": "name",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            },
            {
              "name": "tgnewtable",
              "type": "name",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2767,
                    2768,
                    2769,
                    2770,
                    2771,
                    2772,
                    2773,
                    2774,
                    2775,
                    2776,
                    2777,
                    2778,
                    2779,
                    2780,
                    2781,
                    2782,
                    2783,
                    2784,
                    2785,
                    2786
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_trigger_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3740
                  ]
                }
              ]
            },
            {
              "name": "pg_trigger_tgrelid_tgname_index",
              "columns": [
                "tgrelid",
                "tgname"
              ],
              "definition": "USING btree (tgrelid, tgname)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3754
                  ]
                }
              ]
            }
          ],
          "indexes": [
            {
              "name": "pg_trigger_tgconstraint_index",
              "columns": [
                "tgconstraint"
              ],
              "definition": "USING btree (tgconstraint)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3747
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2767,
                2768,
                2769,
                2770,
                2771,
                2772,
                2773,
                2774,
                2775,
                2776,
                2777,
                2778,
                2779,
                2780,
                2781,
                2782,
                2783,
                2784,
                2785,
                2786
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_config",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2797,
                    2798,
                    2799,
                    2800,
                    2801,
                    2802,
                    2803
                  ]
                }
              ]
            },
            {
              "name": "cfgname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2797,
                    2798,
                    2799,
                    2800,
                    2801,
                    2802,
                    2803
                  ]
                }
              ]
            },
            {
              "name": "cfgnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2797,
                    2798,
                    2799,
                    2800,
                    2801,
                    2802,
                    2803
                  ]
                }
              ]
            },
            {
              "name": "cfgowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2797,
                    2798,
                    2799,
                    2800,
                    2801,
                    2802,
                    2803
                  ]
                }
              ]
            },
            {
              "name": "cfgparser",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2797,
                    2798,
                    2799,
                    2800,
                    2801,
                    2802,
                    2803
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_ts_config_cfgname_index",
              "columns": [
                "cfgname",
                "cfgnamespace"
              ],
              "definition": "USING btree (cfgname, cfgnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3761
                  ]
                }
              ]
            },
            {
              "name": "pg_ts_config_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3775
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2797,
                2798,
                2799,
                2800,
                2801,
                2802,
                2803
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_config_map",
          "columns": [
            {
              "name": "mapcfg",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2814,
                    2815,
                    2816,
                    2817,
                    2818,
                    2819
                  ]
                }
              ]
            },
            {
              "name": "maptokentype",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2814,
                    2815,
                    2816,
                    2817,
                    2818,
                    2819
                  ]
                }
              ]
            },
            {
              "name": "mapseqno",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2814,
                    2815,
                    2816,
                    2817,
                    2818,
                    2819
                  ]
                }
              ]
            },
            {
              "name": "mapdict",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2814,
                    2815,
                    2816,
                    2817,
                    2818,
                    2819
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_ts_config_map_index",
              "columns": [
                "mapcfg",
                "maptokentype",
                "mapseqno"
              ],
              "definition": "USING btree (mapcfg, maptokentype, mapseqno)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3768
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2814,
                2815,
                2816,
                2817,
                2818,
                2819
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_dict",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            },
            {
              "name": "dictname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            },
            {
              "name": "dictnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            },
            {
              "name": "dictowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            },
            {
              "name": "dicttemplate",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            },
            {
              "name": "dictinitoption",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2830,
                    2831,
                    2832,
                    2833,
                    2834,
                    2835,
                    2836,
                    2837
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_ts_dict_dictname_index",
              "columns": [
                "dictname",
                "dictnamespace"
              ],
              "definition": "USING btree (dictname, dictnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3782
                  ]
                }
              ]
            },
            {
              "name": "pg_ts_dict_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3789
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2830,
                2831,
                2832,
                2833,
                2834,
                2835,
                2836,
                2837
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_parser",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prsname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prsnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prsstart",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prstoken",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prsend",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prsheadline",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            },
            {
              "name": "prslextype",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2848,
                    2849,
                    2850,
                    2851,
                    2852,
                    2853,
                    2854,
                    2855,
                    2856,
                    2857
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_ts_parser_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3796
                  ]
                }
              ]
            },
            {
              "name": "pg_ts_parser_prsname_index",
              "columns": [
                "prsname",
                "prsnamespace"
              ],
              "definition": "USING btree (prsname, prsnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3803
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2848,
                2849,
                2850,
                2851,
                2852,
                2853,
                2854,
                2855,
                2856,
                2857
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_template",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2868,
                    2869,
                    2870,
                    2871,
                    2872,
                    2873,
                    2874
                  ]
                }
              ]
            },
            {
              "name": "tmplname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2868,
                    2869,
                    2870,
                    2871,
                    2872,
                    2873,
                    2874
                  ]
                }
              ]
            },
            {
              "name": "tmplnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2868,
                    2869,
                    2870,
                    2871,
                    2872,
                    2873,
                    2874
                  ]
                }
              ]
            },
            {
              "name": "tmplinit",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2868,
                    2869,
                    2870,
                    2871,
                    2872,
                    2873,
                    2874
                  ]
                }
              ]
            },
            {
              "name": "tmpllexize",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2868,
                    2869,
                    2870,
                    2871,
                    2872,
                    2873,
                    2874
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_ts_template_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3810
                  ]
                }
              ]
            },
            {
              "name": "pg_ts_template_tmplname_index",
              "columns": [
                "tmplname",
                "tmplnamespace"
              ],
              "definition": "USING btree (tmplname, tmplnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3817
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2868,
                2869,
                2870,
                2871,
                2872,
                2873,
                2874
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_type",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typname",
              "type": "name",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typnamespace",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typowner",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typlen",
              "type": "smallint",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typbyval",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typtype",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typcategory",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typispreferred",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typisdefined",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typdelim",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typrelid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typelem",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typarray",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typinput",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typoutput",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typreceive",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typsend",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typmodin",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typmodout",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typanalyze",
              "type": "regproc",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typalign",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typstorage",
              "type": "char",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typnotnull",
              "type": "boolean",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typbasetype",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typtypmod",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typndims",
              "type": "integer",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typcollation",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typdefaultbin",
              "type": "pg_node_tree",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typdefault",
              "type": "text",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            },
            {
              "name": "typacl",
              "type": "aclitem[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2885,
                    2886,
                    2887,
                    2888,
                    2889,
                    2890,
                    2891,
                    2892,
                    2893,
                    2894,
                    2895,
                    2896,
                    2897,
                    2898,
                    2899,
                    2900,
                    2901,
                    2902,
                    2903,
                    2904,
                    2905,
                    2906,
                    2907,
                    2908,
                    2909,
                    2910,
                    2911,
                    2912,
                    2913,
                    2914,
                    2915,
                    2916,
                    2917
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_type_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3824
                  ]
                }
              ]
            },
            {
              "name": "pg_type_typname_nsp_index",
              "columns": [
                "typname",
                "typnamespace"
              ],
              "definition": "USING btree (typname, typnamespace)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3831
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2885,
                2886,
                2887,
                2888,
                2889,
                2890,
                2891,
                2892,
                2893,
                2894,
                2895,
                2896,
                2897,
                2898,
                2899,
                2900,
                2901,
                2902,
                2903,
                2904,
                2905,
                2906,
                2907,
                2908,
                2909,
                2910,
                2911,
                2912,
                2913,
                2914,
                2915,
                2916,
                2917
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user",
          "view": true,
          "columns": [
            {
              "name": "usename",
              "type": "unknown",
              "default": "pg_shadow.usename",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "unknown",
              "default": "pg_shadow.usesysid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "usecreatedb",
              "type": "unknown",
              "default": "pg_shadow.usecreatedb",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "usesuper",
              "type": "unknown",
              "default": "pg_shadow.usesuper",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "userepl",
              "type": "unknown",
              "default": "pg_shadow.userepl",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "usebypassrls",
              "type": "unknown",
              "default": "pg_shadow.usebypassrls",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "passwd",
              "type": "unknown",
              "default": "'********'::text",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "valuntil",
              "type": "unknown",
              "default": "pg_shadow.valuntil",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            },
            {
              "name": "useconfig",
              "type": "unknown",
              "default": "pg_shadow.useconfig",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2928,
                    2929,
                    2930,
                    2931,
                    2932,
                    2933,
                    2934,
                    2935,
                    2936,
                    2937,
                    2938
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2928,
                2929,
                2930,
                2931,
                2932,
                2933,
                2934,
                2935,
                2936,
                2937,
                2938
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user_mapping",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2947,
                    2948,
                    2949,
                    2950,
                    2951,
                    2952
                  ]
                }
              ]
            },
            {
              "name": "umuser",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2947,
                    2948,
                    2949,
                    2950,
                    2951,
                    2952
                  ]
                }
              ]
            },
            {
              "name": "umserver",
              "type": "oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2947,
                    2948,
                    2949,
                    2950,
                    2951,
                    2952
                  ]
                }
              ]
            },
            {
              "name": "umoptions",
              "type": "text[]",
              "nullable": true,
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2947,
                    2948,
                    2949,
                    2950,
                    2951,
                    2952
                  ]
                }
              ]
            }
          ],
          "uniques": [
            {
              "name": "pg_user_mapping_oid_index",
              "columns": [
                "oid"
              ],
              "definition": "USING btree (oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3838
                  ]
                }
              ]
            },
            {
              "name": "pg_user_mapping_user_server_index",
              "columns": [
                "umuser",
                "umserver"
              ],
              "definition": "USING btree (umuser, umserver)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    3845
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2947,
                2948,
                2949,
                2950,
                2951,
                2952
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user_mappings",
          "view": true,
          "columns": [
            {
              "name": "umid",
              "type": "unknown",
              "default": "u.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            },
            {
              "name": "srvid",
              "type": "unknown",
              "default": "s.oid",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            },
            {
              "name": "srvname",
              "type": "unknown",
              "default": "s.srvname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            },
            {
              "name": "umuser",
              "type": "unknown",
              "default": "u.umuser",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            },
            {
              "name": "usename",
              "type": "unknown",
              "default": "CASE WHEN (u.umuser = (0)::oid) THEN 'public'::name ELSE a.rolname END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            },
            {
              "name": "umoptions",
              "type": "unknown",
              "default": "CASE WHEN (((u.umuser <> (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper FROM pg_authid WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions ELSE NULL::text[] END",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2963,
                    2964,
                    2965,
                    2966,
                    2967,
                    2968,
                    2969,
                    2970,
                    2971,
                    2972,
                    2973,
                    2974,
                    2975,
                    2976,
                    2977,
                    2978,
                    2979,
                    2980
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2963,
                2964,
                2965,
                2966,
                2967,
                2968,
                2969,
                2970,
                2971,
                2972,
                2973,
                2974,
                2975,
                2976,
                2977,
                2978,
                2979,
                2980
              ]
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_views",
          "view": true,
          "columns": [
            {
              "name": "schemaname",
              "type": "unknown",
              "default": "n.nspname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2989,
                    2990,
                    2991,
                    2992,
                    2993,
                    2994,
                    2995,
                    2996
                  ]
                }
              ]
            },
            {
              "name": "viewname",
              "type": "unknown",
              "default": "c.relname",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2989,
                    2990,
                    2991,
                    2992,
                    2993,
                    2994,
                    2995,
                    2996
                  ]
                }
              ]
            },
            {
              "name": "viewowner",
              "type": "unknown",
              "default": "pg_get_userbyid(c.relowner)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2989,
                    2990,
                    2991,
                    2992,
                    2993,
                    2994,
                    2995,
                    2996
                  ]
                }
              ]
            },
            {
              "name": "definition",
              "type": "unknown",
              "default": "pg_get_viewdef(c.oid)",
              "origins": [
                {
                  "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
                  "lines": [
                    2989,
                    2990,
                    2991,
                    2992,
                    2993,
                    2994,
                    2995,
                    2996
                  ]
                }
              ]
            }
          ],
          "origins": [
            {
              "id": "369bd71a-b4e5-4913-a1e6-4347f6ba7bfa",
              "lines": [
                2989,
                2990,
                2991,
                2992,
                2993,
                2994,
                2995,
                2996
              ]
            }
          ]
        }
      ],
      "relations": [],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    },
    {
      "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
      "name": "pg_catalog doc",
      "kind": {
        "kind": "AmlEditor"
      },
      "content": [
        "pg_catalog.pg_aggregate | The catalog pg_aggregate stores information about aggregate functions. An aggregate function is a function that operates on a set of values (typically one column from each row that matches a query condition) and returns a single value computed from all these values. Typical aggregate functions are sum, count, and max. Each entry in pg_aggregate is an extension of an entry in pg_proc. The pg_proc entry carries the aggregate's name, input and output data types, and other information that is similar to ordinary functions.\\nhttps://www.postgresql.org/docs/current/catalog-pg-aggregate.html",
        "  aggfnoid regproc | pg_proc OID of the aggregate function",
        "  aggkind char | Aggregate kind: n for “normal” aggregates, o for “ordered-set” aggregates, or h for “hypothetical-set” aggregates",
        "  aggnumdirectargs int2 | Number of direct (non-aggregated) arguments of an ordered-set or hypothetical-set aggregate, counting a variadic array as one argument. If equal to pronargs, the aggregate must be variadic and the variadic array describes the aggregated arguments as well as the final direct arguments. Always zero for normal aggregates.",
        "  aggtransfn regproc | Transition function",
        "  aggfinalfn regproc | Final function (zero if none)",
        "  aggcombinefn regproc | Combine function (zero if none)",
        "  aggserialfn regproc | Serialization function (zero if none)",
        "  aggdeserialfn regproc | Deserialization function (zero if none)",
        "  aggmtransfn regproc | Forward transition function for moving-aggregate mode (zero if none)",
        "  aggminvtransfn regproc | Inverse transition function for moving-aggregate mode (zero if none)",
        "  aggmfinalfn regproc | Final function for moving-aggregate mode (zero if none)",
        "  aggfinalextra bool | True to pass extra dummy arguments to aggfinalfn",
        "  aggmfinalextra bool | True to pass extra dummy arguments to aggmfinalfn",
        "  aggfinalmodify char | Whether aggfinalfn modifies the transition state value: r if it is read-only, s if the aggtransfn cannot be applied after the aggfinalfn, or w if it writes on the value",
        "  aggmfinalmodify char | Like aggfinalmodify, but for the aggmfinalfn",
        "  aggsortop oid | Associated sort operator (zero if none)",
        "  aggtranstype oid | Data type of the aggregate function's internal transition (state) data",
        "  aggtransspace int4 | Approximate average size (in bytes) of the transition state data, or zero to use a default estimate",
        "  aggmtranstype oid | Data type of the aggregate function's internal transition (state) data for moving-aggregate mode (zero if none)",
        "  aggmtransspace int4 | Approximate average size (in bytes) of the transition state data for moving-aggregate mode, or zero to use a default estimate",
        "  agginitval text | The initial value of the transition state. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null.",
        "  aggminitval text | The initial value of the transition state for moving-aggregate mode. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null.",
        "fk pg_catalog.pg_aggregate.aggfnoid -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggtransfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggfinalfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggcombinefn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggserialfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggdeserialfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggmtransfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggminvtransfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggmfinalfn -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_aggregate.aggsortop -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_aggregate.aggtranstype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_aggregate.aggmtranstype -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_am | The catalog pg_am stores information about relation access methods. There is one row for each access method supported by the system. Currently, only tables and indexes have access methods. The requirements for table and index access methods are discussed in detail in Chapter 61 and Chapter 62 respectively.\\nhttps://www.postgresql.org/docs/current/catalog-pg-am.html",
        "  oid oid | Row identifier",
        "  amname name | Name of the access method",
        "  amhandler regproc | OID of a handler function that is responsible for supplying information about the access method",
        "  amtype char | t = table (including materialized views), i = index.",
        "fk pg_catalog.pg_am.amhandler -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_amop | The catalog pg_amop stores information about operators associated with access method operator families. There is one row for each operator that is a member of an operator family. A family member can be either a search operator or an ordering operator. An operator can appear in more than one family, but cannot appear in more than one search position nor more than one ordering position within a family. (It is allowed, though unlikely, for an operator to be used for both search and ordering purposes.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-amop.html",
        "  oid oid | Row identifier",
        "  amopfamily oid | The operator family this entry is for",
        "  amoplefttype oid | Left-hand input data type of operator",
        "  amoprighttype oid | Right-hand input data type of operator",
        "  amopstrategy int2 | Operator strategy number",
        "  amoppurpose char | Operator purpose, either s for search or o for ordering",
        "  amopopr oid | OID of the operator",
        "  amopmethod oid | Index access method operator family is for",
        "  amopsortfamily oid | The B-tree operator family this entry sorts according to, if an ordering operator; zero if a search operator",
        "fk pg_catalog.pg_amop.amopfamily -> pg_catalog.pg_opfamily.oid",
        "fk pg_catalog.pg_amop.amoplefttype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_amop.amoprighttype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_amop.amopopr -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_amop.amopmethod -> pg_catalog.pg_am.oid",
        "fk pg_catalog.pg_amop.amopsortfamily -> pg_catalog.pg_opfamily.oid",
        "",
        "pg_catalog.pg_amproc | The catalog pg_amproc stores information about support functions associated with access method operator families. There is one row for each support function belonging to an operator family.\\nhttps://www.postgresql.org/docs/current/catalog-pg-amproc.html",
        "  oid oid | Row identifier",
        "  amprocfamily oid | The operator family this entry is for",
        "  amproclefttype oid | Left-hand input data type of associated operator",
        "  amprocrighttype oid | Right-hand input data type of associated operator",
        "  amprocnum int2 | Support function number",
        "  amproc regproc | OID of the function",
        "fk pg_catalog.pg_amproc.amprocfamily -> pg_catalog.pg_opfamily.oid",
        "fk pg_catalog.pg_amproc.amproclefttype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_amproc.amprocrighttype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_amproc.amproc -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_attrdef | The catalog pg_attrdef stores column default values. The main information about columns is stored in pg_attribute. Only columns for which a default value has been explicitly set will have an entry here.\\nhttps://www.postgresql.org/docs/current/catalog-pg-attrdef.html",
        "  oid oid | Row identifier",
        "  adrelid oid | The table this column belongs to",
        "  adnum int2 | The number of the column",
        "  adbin pg_node_tree | The column default value, in nodeToString() representation. Use pg_get_expr(adbin, adrelid) to convert it to an SQL expression.",
        "fk pg_catalog.pg_attrdef.adrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_attrdef.adnum -> pg_catalog.pg_attribute.attnum",
        "",
        "pg_catalog.pg_attribute | The catalog pg_attribute stores information about table columns. There will be exactly one pg_attribute row for every column in every table in the database. (There will also be attribute entries for indexes, and indeed all objects that have pg_class entries.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-attribute.html",
        "  attrelid oid | The table this column belongs to",
        "  attname name | The column name",
        "  atttypid oid | The data type of this column (zero for a dropped column)",
        "  attstattarget int4 | attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is data type-dependent. For scalar data types, attstattarget is both the target number of “most common values” to collect, and the target number of histogram bins to create.",
        "  attlen int2 | A copy of pg_type.typlen of this column's type",
        "  attnum int2 | The number of the column. Ordinary columns are numbered from 1 up. System columns, such as ctid, have (arbitrary) negative numbers.",
        "  attndims int4 | Number of dimensions, if the column is an array type; otherwise 0. (Presently, the number of dimensions of an array is not enforced, so any nonzero value effectively means “it's an array”.)",
        "  attcacheoff int4 | Always -1 in storage, but when loaded into a row descriptor in memory this might be updated to cache the offset of the attribute within the row",
        "  atttypmod int4 | atttypmod records type-specific data supplied at table creation time (for example, the maximum length of a varchar column). It is passed to type-specific input functions and length coercion functions. The value will generally be -1 for types that do not need atttypmod.",
        "  attbyval bool | A copy of pg_type.typbyval of this column's type",
        "  attalign char | A copy of pg_type.typalign of this column's type",
        "  attstorage char | Normally a copy of pg_type.typstorage of this column's type. For TOAST-able data types, this can be altered after column creation to control storage policy.",
        "  attcompression char | The current compression method of the column. Typically this is '\\0' to specify use of the current default setting (see default_toast_compression). Otherwise, 'p' selects pglz compression, while 'l' selects LZ4 compression. However, this field is ignored whenever attstorage does not allow compression.",
        "  attnotnull bool | This represents a not-null constraint.",
        "  atthasdef bool | This column has a default expression or generation expression, in which case there will be a corresponding entry in the pg_attrdef catalog that actually defines the expression. (Check attgenerated to determine whether this is a default or a generation expression.)",
        "  atthasmissing bool | This column has a value which is used where the column is entirely missing from the row, as happens when a column is added with a non-volatile DEFAULT value after the row is created. The actual value used is stored in the attmissingval column.",
        "  attidentity char | If a zero byte (''), then not an identity column. Otherwise, a = generated always, d = generated by default.",
        "  attgenerated char | If a zero byte (''), then not a generated column. Otherwise, s = stored. (Other values might be added in the future.)",
        "  attisdropped bool | This column has been dropped and is no longer valid. A dropped column is still physically present in the table, but is ignored by the parser and so cannot be accessed via SQL.",
        "  attislocal bool | This column is defined locally in the relation. Note that a column can be locally defined and inherited simultaneously.",
        "  attinhcount int4 | The number of direct ancestors this column has. A column with a nonzero number of ancestors cannot be dropped nor renamed.",
        "  attcollation oid | The defined collation of the column, or zero if the column is not of a collatable data type",
        "  attacl aclitem[] | Column-level access privileges, if any have been granted specifically on this column",
        "  attoptions text[] | Attribute-level options, as “keyword=value” strings",
        "  attfdwoptions text[] | Attribute-level foreign data wrapper options, as “keyword=value” strings",
        "  attmissingval anyarray | This column has a one element array containing the value used when the column is entirely missing from the row, as happens when the column is added with a non-volatile DEFAULT value after the row is created. The value is only used when atthasmissing is true. If there is no value the column is null.",
        "fk pg_catalog.pg_attribute.attrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_attribute.atttypid -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_attribute.attcollation -> pg_catalog.pg_collation.oid",
        "",
        "pg_catalog.pg_authid | The catalog pg_authid contains information about database authorization identifiers (roles). A role subsumes the concepts of “users” and “groups”. A user is essentially just a role with the rolcanlogin flag set. Any role (with or without rolcanlogin) can have other roles as members; see pg_auth_members.\\nhttps://www.postgresql.org/docs/current/catalog-pg-authid.html",
        "  oid oid | Row identifier",
        "  rolname name | Role name",
        "  rolsuper bool | Role has superuser privileges",
        "  rolinherit bool | Role automatically inherits privileges of roles it is a member of",
        "  rolcreaterole bool | Role can create more roles",
        "  rolcreatedb bool | Role can create databases",
        "  rolcanlogin bool | Role can log in. That is, this role can be given as the initial session authorization identifier.",
        "  rolreplication bool | Role is a replication role. A replication role can initiate replication connections and create and drop replication slots.",
        "  rolbypassrls bool | Role bypasses every row-level security policy, see Section 5.8 for more information.",
        "  rolconnlimit int4 | For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit.",
        "  rolpassword text | Password (possibly encrypted); null if none. The format depends on the form of encryption used.",
        "  rolvaliduntil timestamptz | Password expiry time (only used for password authentication); null if no expiration",
        "",
        "pg_catalog.pg_auth_members | The catalog pg_auth_members shows the membership relations between roles. Any non-circular set of relationships is allowed.\\nhttps://www.postgresql.org/docs/current/catalog-pg-auth-members.html",
        "  roleid oid | ID of a role that has a member",
        "  member oid | ID of a role that is a member of roleid",
        "  grantor oid | ID of the role that granted this membership",
        "  admin_option bool | True if member can grant membership in roleid to others",
        "fk pg_catalog.pg_auth_members.roleid -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_auth_members.member -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_auth_members.grantor -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_cast | The catalog pg_cast stores data type conversion paths, both built-in and user-defined.\\nhttps://www.postgresql.org/docs/current/catalog-pg-cast.html",
        "  oid oid | Row identifier",
        "  castsource oid | OID of the source data type",
        "  casttarget oid | OID of the target data type",
        "  castfunc oid | The OID of the function to use to perform this cast. Zero is stored if the cast method doesn't require a function.",
        "  castcontext char | Indicates what contexts the cast can be invoked in. e means only as an explicit cast (using CAST or :: syntax). a means implicitly in assignment to a target column, as well as explicitly. i means implicitly in expressions, as well as the other cases.",
        "  castmethod char | Indicates how the cast is performed. f means that the function specified in the castfunc field is used. i means that the input/output functions are used. b means that the types are binary-coercible, thus no conversion is required.",
        "fk pg_catalog.pg_cast.castsource -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_cast.casttarget -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_cast.castfunc -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_class | The catalog pg_class catalogs tables and most everything else that has columns or is otherwise similar to a table. This includes indexes (but see also pg_index), sequences (but see also pg_sequence), views, materialized views, composite types, and TOAST tables; see relkind. Below, when we mean all of these kinds of objects we speak of “relations”. Not all columns are meaningful for all relation types.\\nhttps://www.postgresql.org/docs/current/catalog-pg-class.html",
        "  oid oid | Row identifier",
        "  relname name | Name of the table, index, view, etc.",
        "  relnamespace oid | The OID of the namespace that contains this relation",
        "  reltype oid | The OID of the data type that corresponds to this table's row type, if any; zero for indexes, sequences, and toast tables, which have no pg_type entry",
        "  reloftype oid | For typed tables, the OID of the underlying composite type; zero for all other relations",
        "  relowner oid | Owner of the relation",
        "  relam oid | If this is a table or an index, the access method used (heap, B-tree, hash, etc.); otherwise zero (zero occurs for sequences, as well as relations without storage, such as views)",
        "  relfilenode oid | Name of the on-disk file of this relation; zero means this is a “mapped” relation whose disk file name is determined by low-level state",
        "  reltablespace oid | The tablespace in which this relation is stored. If zero, the database's default tablespace is implied. (Not meaningful if the relation has no on-disk file.)",
        "  relpages int4 | Size of the on-disk representation of this table in pages (of size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.",
        "  reltuples float4 | Number of live rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX. If the table has never yet been vacuumed or analyzed, reltuples contains -1 indicating that the row count is unknown.",
        "  relallvisible int4 | Number of pages that are marked all-visible in the table's visibility map. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.",
        "  reltoastrelid oid | OID of the TOAST table associated with this table, zero if none. The TOAST table stores large attributes “out of line” in a secondary table.",
        "  relhasindex bool | True if this is a table and it has (or recently had) any indexes",
        "  relisshared bool | True if this table is shared across all databases in the cluster. Only certain system catalogs (such as pg_database) are shared.",
        "  relpersistence char | p = permanent table, u = unlogged table, t = temporary table",
        "  relkind char | r = ordinary table, i = index, S = sequence, t = TOAST table, v = view, m = materialized view, c = composite type, f = foreign table, p = partitioned table, I = partitioned index",
        "  relnatts int2 | Number of user columns in the relation (system columns not counted). There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum.",
        "  relchecks int2 | Number of CHECK constraints on the table; see pg_constraint catalog",
        "  relhasrules bool | True if table has (or once had) rules; see pg_rewrite catalog",
        "  relhastriggers bool | True if table has (or once had) triggers; see pg_trigger catalog",
        "  relhassubclass bool | True if table or index has (or once had) any inheritance children",
        "  relrowsecurity bool | True if table has row-level security enabled; see pg_policy catalog",
        "  relforcerowsecurity bool | True if row-level security (when enabled) will also apply to table owner; see pg_policy catalog",
        "  relispopulated bool | True if relation is populated (this is true for all relations other than some materialized views)",
        "  relreplident char | Columns used to form “replica identity” for rows: d = default (primary key, if any), n = nothing, f = all columns, i = index with indisreplident set (same as nothing if the index used has been dropped)",
        "  relispartition bool | True if table or index is a partition",
        "  relrewrite oid | For new relations being written during a DDL operation that requires a table rewrite, this contains the OID of the original relation; otherwise zero. That state is only visible internally; this field should never contain anything other than zero for a user-visible relation.",
        "  relfrozenxid xid | All transaction IDs before this one have been replaced with a permanent (“frozen”) transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. Zero (InvalidTransactionId) if the relation is not a table.",
        "  relminmxid xid | All multixact IDs before this one have been replaced by a transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. Zero (InvalidMultiXactId) if the relation is not a table.",
        "  relacl aclitem[] | Access privileges; see Section 5.7 for details",
        "  reloptions text[] | Access-method-specific options, as “keyword=value” strings",
        "  relpartbound pg_node_tree | If table is a partition (see relispartition), internal representation of the partition bound",
        "fk pg_catalog.pg_class.relnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_class.reltype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_class.reloftype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_class.relowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_class.relam -> pg_catalog.pg_am.oid",
        "fk pg_catalog.pg_class.reltablespace -> pg_catalog.pg_tablespace.oid",
        "fk pg_catalog.pg_class.reltoastrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_class.relrewrite -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_collation | The catalog pg_collation describes the available collations, which are essentially mappings from an SQL name to operating system locale categories. See Section 24.2 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-collation.html",
        "  oid oid | Row identifier",
        "  collname name | Collation name (unique per namespace and encoding)",
        "  collnamespace oid | The OID of the namespace that contains this collation",
        "  collowner oid | Owner of the collation",
        "  collprovider char | Provider of the collation: d = database default, c = libc, i = icu",
        "  collisdeterministic bool | Is the collation deterministic?",
        "  collencoding int4 | Encoding in which the collation is applicable, or -1 if it works for any encoding",
        "  collcollate name | LC_COLLATE for this collation object",
        "  collctype name | LC_CTYPE for this collation object",
        "  collversion text | Provider-specific version of the collation. This is recorded when the collation is created and then checked when it is used, to detect changes in the collation definition that could lead to data corruption.",
        "fk pg_catalog.pg_collation.collnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_collation.collowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_constraint | The catalog pg_constraint stores check, primary key, unique, foreign key, and exclusion constraints on tables. (Column constraints are not treated specially. Every column constraint is equivalent to some table constraint.) Not-null constraints are represented in the pg_attribute catalog, not here.\\nhttps://www.postgresql.org/docs/current/catalog-pg-constraint.html",
        "  oid oid | Row identifier",
        "  conname name | Constraint name (not necessarily unique!)",
        "  connamespace oid | The OID of the namespace that contains this constraint",
        "  contype char | c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint, t = constraint trigger, x = exclusion constraint",
        "  condeferrable bool | Is the constraint deferrable?",
        "  condeferred bool | Is the constraint deferred by default?",
        "  convalidated bool | Has the constraint been validated? Currently, can be false only for foreign keys and CHECK constraints",
        "  conrelid oid | The table this constraint is on; zero if not a table constraint",
        "  contypid oid | The domain this constraint is on; zero if not a domain constraint",
        "  conindid oid | The index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else zero",
        "  conparentid oid | The corresponding constraint of the parent partitioned table, if this is a constraint on a partition; else zero",
        "  confrelid oid | If a foreign key, the referenced table; else zero",
        "  confupdtype char | Foreign key update action code: a = no action, r = restrict, c = cascade, n = set null, d = set default",
        "  confdeltype char | Foreign key deletion action code: a = no action, r = restrict, c = cascade, n = set null, d = set default",
        "  confmatchtype char | Foreign key match type: f = full, p = partial, s = simple",
        "  conislocal bool | This constraint is defined locally for the relation. Note that a constraint can be locally defined and inherited simultaneously.",
        "  coninhcount int4 | The number of direct inheritance ancestors this constraint has. A constraint with a nonzero number of ancestors cannot be dropped nor renamed.",
        "  connoinherit bool | This constraint is defined locally for the relation. It is a non-inheritable constraint.",
        "  conkey int2[] | If a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns",
        "  confkey int2[] | If a foreign key, list of the referenced columns",
        "  conpfeqop oid[] | If a foreign key, list of the equality operators for PK = FK comparisons",
        "  conppeqop oid[] | If a foreign key, list of the equality operators for PK = PK comparisons",
        "  conffeqop oid[] | If a foreign key, list of the equality operators for FK = FK comparisons",
        "  conexclop oid[] | If an exclusion constraint, list of the per-column exclusion operators",
        "  conbin pg_node_tree | If a check constraint, an internal representation of the expression. (It's recommended to use pg_get_constraintdef() to extract the definition of a check constraint.)",
        "fk pg_catalog.pg_constraint.connamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_constraint.conrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_constraint.contypid -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_constraint.conindid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_constraint.conparentid -> pg_catalog.pg_constraint.oid",
        "fk pg_catalog.pg_constraint.confrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_constraint.conkey -> pg_catalog.pg_attribute.attnum",
        "fk pg_catalog.pg_constraint.confkey -> pg_catalog.pg_attribute.attnum",
        "fk pg_catalog.pg_constraint.conpfeqop -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_constraint.conppeqop -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_constraint.conffeqop -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_constraint.conexclop -> pg_catalog.pg_operator.oid",
        "",
        "pg_catalog.pg_conversion | The catalog pg_conversion describes encoding conversion functions. See CREATE CONVERSION for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-conversion.html",
        "  oid oid | Row identifier",
        "  conname name | Conversion name (unique within a namespace)",
        "  connamespace oid | The OID of the namespace that contains this conversion",
        "  conowner oid | Owner of the conversion",
        "  conforencoding int4 | Source encoding ID",
        "  contoencoding int4 | Destination encoding ID",
        "  conproc regproc | Conversion function",
        "  condefault bool | True if this is the default conversion",
        "fk pg_catalog.pg_conversion.connamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_conversion.conowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_conversion.conproc -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_database | The catalog pg_database stores information about the available databases. Databases are created with the CREATE DATABASE command. Consult Chapter 23 for details about the meaning of some of the parameters.\\nhttps://www.postgresql.org/docs/current/catalog-pg-database.html",
        "  oid oid | Row identifier",
        "  datname name | Database name",
        "  datdba oid | Owner of the database, usually the user who created it",
        "  encoding int4 | Character encoding for this database (pg_encoding_to_char() can translate this number to the encoding name)",
        "  datcollate name | LC_COLLATE for this database",
        "  datctype name | LC_CTYPE for this database",
        "  datistemplate bool | If true, then this database can be cloned by any user with CREATEDB privileges; if false, then only superusers or the owner of the database can clone it.",
        "  datallowconn bool | If false then no one can connect to this database. This is used to protect the template0 database from being altered.",
        "  datconnlimit int4 | Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.",
        "  datlastsysoid oid | Last system OID in the database; useful particularly to pg_dump",
        "  datfrozenxid xid | All transaction IDs before this one have been replaced with a permanent (“frozen”) transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values.",
        "  datminmxid xid | All multixact IDs before this one have been replaced with a transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. It is the minimum of the per-table pg_class.relminmxid values.",
        "  dattablespace oid | The default tablespace for the database. Within this database, all tables for which pg_class.reltablespace is zero will be stored in this tablespace; in particular, all the non-shared system catalogs will be there.",
        "  datacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_database.datdba -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_database.dattablespace -> pg_catalog.pg_tablespace.oid",
        "",
        "pg_catalog.pg_db_role_setting | The catalog pg_db_role_setting records the default values that have been set for run-time configuration variables, for each role and database combination.\\nhttps://www.postgresql.org/docs/current/catalog-pg-db-role-setting.html",
        "  setdatabase oid | The OID of the database the setting is applicable to, or zero if not database-specific",
        "  setrole oid | The OID of the role the setting is applicable to, or zero if not role-specific",
        "  setconfig text[] | Defaults for run-time configuration variables",
        "fk pg_catalog.pg_db_role_setting.setdatabase -> pg_catalog.pg_database.oid",
        "fk pg_catalog.pg_db_role_setting.setrole -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_default_acl | The catalog pg_default_acl stores initial privileges to be assigned to newly created objects.\\nhttps://www.postgresql.org/docs/current/catalog-pg-default-acl.html",
        "  oid oid | Row identifier",
        "  defaclrole oid | The OID of the role associated with this entry",
        "  defaclnamespace oid | The OID of the namespace associated with this entry, or zero if none",
        "  defaclobjtype char | Type of object this entry is for: r = relation (table, view), S = sequence, f = function, T = type, n = schema",
        "  defaclacl aclitem[] | Access privileges that this type of object should have on creation",
        "fk pg_catalog.pg_default_acl.defaclrole -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_default_acl.defaclnamespace -> pg_catalog.pg_namespace.oid",
        "",
        "pg_catalog.pg_depend | The catalog pg_depend records the dependency relationships between database objects. This information allows DROP commands to find which other objects must be dropped by DROP CASCADE or prevent dropping in the DROP RESTRICT case.\\nhttps://www.postgresql.org/docs/current/catalog-pg-depend.html",
        "  classid oid | The OID of the system catalog the dependent object is in, or zero for a DEPENDENCY_PIN entry",
        "  objid oid | The OID of the specific dependent object, or zero for a DEPENDENCY_PIN entry",
        "  objsubid int4 | For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero.",
        "  refclassid oid | The OID of the system catalog the referenced object is in",
        "  refobjid oid | The OID of the specific referenced object",
        "  refobjsubid int4 | For a table column, this is the column number (the refobjid and refclassid refer to the table itself). For all other object types, this column is zero.",
        "  deptype char | A code defining the specific semantics of this dependency relationship; see text",
        "fk pg_catalog.pg_depend.classid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_depend.refclassid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_description | The catalog pg_description stores optional descriptions (comments) for each database object. Descriptions can be manipulated with the COMMENT command and viewed with psql's \\d commands. Descriptions of many built-in system objects are provided in the initial contents of pg_description.\\nhttps://www.postgresql.org/docs/current/catalog-pg-description.html",
        "  objoid oid | The OID of the object this description pertains to",
        "  classoid oid | The OID of the system catalog this object appears in",
        "  objsubid int4 | For a comment on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
        "  description text | Arbitrary text that serves as the description of this object",
        "fk pg_catalog.pg_description.classoid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_enum | The pg_enum catalog contains entries showing the values and labels for each enum type. The internal representation of a given enum value is actually the OID of its associated row in pg_enum.\\nhttps://www.postgresql.org/docs/current/catalog-pg-enum.html",
        "  oid oid | Row identifier",
        "  enumtypid oid | The OID of the pg_type entry owning this enum value",
        "  enumsortorder float4 | The sort position of this enum value within its enum type",
        "  enumlabel name | The textual label for this enum value",
        "fk pg_catalog.pg_enum.enumtypid -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_event_trigger | The catalog pg_event_trigger stores event triggers. See Chapter 40 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-event-trigger.html",
        "  oid oid | Row identifier",
        "  evtname name | Trigger name (must be unique)",
        "  evtevent name | Identifies the event for which this trigger fires",
        "  evtowner oid | Owner of the event trigger",
        "  evtfoid oid | The function to be called",
        "  evtenabled char | Controls in which session_replication_role modes the event trigger fires. O = trigger fires in “origin” and “local” modes, D = trigger is disabled, R = trigger fires in “replica” mode, A = trigger fires always.",
        "  evttags text[] | Command tags for which this trigger will fire. If NULL, the firing of this trigger is not restricted on the basis of the command tag.",
        "fk pg_catalog.pg_event_trigger.evtowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_event_trigger.evtfoid -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_extension | The catalog pg_extension stores information about the installed extensions. See Section 38.17 for details about extensions.\\nhttps://www.postgresql.org/docs/current/catalog-pg-extension.html",
        "  oid oid | Row identifier",
        "  extname name | Name of the extension",
        "  extowner oid | Owner of the extension",
        "  extnamespace oid | Schema containing the extension's exported objects",
        "  extrelocatable bool | True if extension can be relocated to another schema",
        "  extversion text | Version name for the extension",
        "  extconfig oid[] | Array of regclass OIDs for the extension's configuration table(s), or NULL if none",
        "  extcondition text[] | Array of WHERE-clause filter conditions for the extension's configuration table(s), or NULL if none",
        "fk pg_catalog.pg_extension.extowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_extension.extnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_extension.extconfig -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_foreign_data_wrapper | The catalog pg_foreign_data_wrapper stores foreign-data wrapper definitions. A foreign-data wrapper is the mechanism by which external data, residing on foreign servers, is accessed.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-data-wrapper.html",
        "  oid oid | Row identifier",
        "  fdwname name | Name of the foreign-data wrapper",
        "  fdwowner oid | Owner of the foreign-data wrapper",
        "  fdwhandler oid | References a handler function that is responsible for supplying execution routines for the foreign-data wrapper. Zero if no handler is provided",
        "  fdwvalidator oid | References a validator function that is responsible for checking the validity of the options given to the foreign-data wrapper, as well as options for foreign servers and user mappings using the foreign-data wrapper. Zero if no validator is provided",
        "  fdwacl aclitem[] | Access privileges; see Section 5.7 for details",
        "  fdwoptions text[] | Foreign-data wrapper specific options, as “keyword=value” strings",
        "fk pg_catalog.pg_foreign_data_wrapper.fdwowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_foreign_data_wrapper.fdwhandler -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_foreign_data_wrapper.fdwvalidator -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_foreign_server | The catalog pg_foreign_server stores foreign server definitions. A foreign server describes a source of external data, such as a remote server. Foreign servers are accessed via foreign-data wrappers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-server.html",
        "  oid oid | Row identifier",
        "  srvname name | Name of the foreign server",
        "  srvowner oid | Owner of the foreign server",
        "  srvfdw oid | OID of the foreign-data wrapper of this foreign server",
        "  srvtype text | Type of the server (optional)",
        "  srvversion text | Version of the server (optional)",
        "  srvacl aclitem[] | Access privileges; see Section 5.7 for details",
        "  srvoptions text[] | Foreign server specific options, as “keyword=value” strings",
        "fk pg_catalog.pg_foreign_server.srvowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_foreign_server.srvfdw -> pg_catalog.pg_foreign_data_wrapper.oid",
        "",
        "pg_catalog.pg_foreign_table | The catalog pg_foreign_table contains auxiliary information about foreign tables. A foreign table is primarily represented by a pg_class entry, just like a regular table. Its pg_foreign_table entry contains the information that is pertinent only to foreign tables and not any other kind of relation.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-table.html",
        "  ftrelid oid | The OID of the pg_class entry for this foreign table",
        "  ftserver oid | OID of the foreign server for this foreign table",
        "  ftoptions text[] | Foreign table options, as “keyword=value” strings",
        "fk pg_catalog.pg_foreign_table.ftrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_foreign_table.ftserver -> pg_catalog.pg_foreign_server.oid",
        "",
        "pg_catalog.pg_index | The catalog pg_index contains part of the information about indexes. The rest is mostly in pg_class.\\nhttps://www.postgresql.org/docs/current/catalog-pg-index.html",
        "  indexrelid oid | The OID of the pg_class entry for this index",
        "  indrelid oid | The OID of the pg_class entry for the table this index is for",
        "  indnatts int2 | The total number of columns in the index (duplicates pg_class.relnatts); this number includes both key and included attributes",
        "  indnkeyatts int2 | The number of key columns in the index, not counting any included columns, which are merely stored and do not participate in the index semantics",
        "  indisunique bool | If true, this is a unique index",
        "  indisprimary bool | If true, this index represents the primary key of the table (indisunique should always be true when this is true)",
        "  indisexclusion bool | If true, this index supports an exclusion constraint",
        "  indimmediate bool | If true, the uniqueness check is enforced immediately on insertion (irrelevant if indisunique is not true)",
        "  indisclustered bool | If true, the table was last clustered on this index",
        "  indisvalid bool | If true, the index is currently valid for queries. False means the index is possibly incomplete: it must still be modified by INSERT/UPDATE operations, but it cannot safely be used for queries. If it is unique, the uniqueness property is not guaranteed true either.",
        "  indcheckxmin bool | If true, queries must not use the index until the xmin of this pg_index row is below their TransactionXmin event horizon, because the table may contain broken HOT chains with incompatible rows that they can see",
        "  indisready bool | If true, the index is currently ready for inserts. False means the index must be ignored by INSERT/UPDATE operations.",
        "  indislive bool | If false, the index is in process of being dropped, and should be ignored for all purposes (including HOT-safety decisions)",
        "  indisreplident bool | If true this index has been chosen as “replica identity” using ALTER TABLE ... REPLICA IDENTITY USING INDEX ...",
        "  indkey int2vector | This is an array of indnatts values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index entries. Key columns come before non-key (included) columns. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference.",
        "  indcollation oidvector | For each column in the index key (indnkeyatts values), this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type.",
        "  indclass oidvector | For each column in the index key (indnkeyatts values), this contains the OID of the operator class to use. See pg_opclass for details.",
        "  indoption int2vector | This is an array of indnkeyatts values that store per-column flag bits. The meaning of the bits is defined by the index's access method.",
        "  indexprs pg_node_tree | Expression trees (in nodeToString() representation) for index attributes that are not simple column references. This is a list with one element for each zero entry in indkey. Null if all index attributes are simple references.",
        "  indpred pg_node_tree | Expression tree (in nodeToString() representation) for partial index predicate. Null if not a partial index.",
        "fk pg_catalog.pg_index.indexrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_index.indrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_index.indkey -> pg_catalog.pg_attribute.attnum",
        "fk pg_catalog.pg_index.indcollation -> pg_catalog.pg_collation.oid",
        "fk pg_catalog.pg_index.indclass -> pg_catalog.pg_opclass.oid",
        "",
        "pg_catalog.pg_inherits | The catalog pg_inherits records information about table and index inheritance hierarchies. There is one entry for each direct parent-child table or index relationship in the database. (Indirect inheritance can be determined by following chains of entries.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-inherits.html",
        "  inhrelid oid | The OID of the child table or index",
        "  inhparent oid | The OID of the parent table or index",
        "  inhseqno int4 | If there is more than one direct parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1.",
        "  inhdetachpending bool | true for a partition that is in the process of being detached; false otherwise.",
        "fk pg_catalog.pg_inherits.inhrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_inherits.inhparent -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_init_privs | The catalog pg_init_privs records information about the initial privileges of objects in the system. There is one entry for each object in the database which has a non-default (non-NULL) initial set of privileges.\\nhttps://www.postgresql.org/docs/current/catalog-pg-init-privs.html",
        "  objoid oid | The OID of the specific object",
        "  classoid oid | The OID of the system catalog the object is in",
        "  objsubid int4 | For a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
        "  privtype char | A code defining the type of initial privilege of this object; see text",
        "  initprivs aclitem[] | The initial access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_init_privs.classoid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_language | The catalog pg_language registers languages in which you can write functions or stored procedures. See CREATE LANGUAGE and Chapter 42 for more information about language handlers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-language.html",
        "  oid oid | Row identifier",
        "  lanname name | Name of the language",
        "  lanowner oid | Owner of the language",
        "  lanispl bool | This is false for internal languages (such as SQL) and true for user-defined languages. Currently, pg_dump still uses this to determine which languages need to be dumped, but this might be replaced by a different mechanism in the future.",
        "  lanpltrusted bool | True if this is a trusted language, which means that it is believed not to grant access to anything outside the normal SQL execution environment. Only superusers can create functions in untrusted languages.",
        "  lanplcallfoid oid | For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language. Zero for internal languages.",
        "  laninline oid | This references a function that is responsible for executing “inline” anonymous code blocks (DO blocks). Zero if inline blocks are not supported.",
        "  lanvalidator oid | This references a language validator function that is responsible for checking the syntax and validity of new functions when they are created. Zero if no validator is provided.",
        "  lanacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_language.lanowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_language.lanplcallfoid -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_language.laninline -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_language.lanvalidator -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_largeobject | The catalog pg_largeobject holds the data making up “large objects”. A large object is identified by an OID assigned when it is created. Each large object is broken into segments or “pages” small enough to be conveniently stored as rows in pg_largeobject. The amount of data per page is defined to be LOBLKSIZE (which is currently BLCKSZ/4, or typically 2 kB).\\nhttps://www.postgresql.org/docs/current/catalog-pg-largeobject.html",
        "  loid oid | Identifier of the large object that includes this page",
        "  pageno int4 | Page number of this page within its large object (counting from zero)",
        "  data bytea | Actual data stored in the large object. This will never be more than LOBLKSIZE bytes and might be less.",
        "fk pg_catalog.pg_largeobject.loid -> pg_catalog.pg_largeobject_metadata.oid",
        "",
        "pg_catalog.pg_largeobject_metadata | The catalog pg_largeobject_metadata holds metadata associated with large objects. The actual large object data is stored in pg_largeobject.\\nhttps://www.postgresql.org/docs/current/catalog-pg-largeobject-metadata.html",
        "  oid oid | Row identifier",
        "  lomowner oid | Owner of the large object",
        "  lomacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_largeobject_metadata.lomowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_namespace | The catalog pg_namespace stores namespaces. A namespace is the structure underlying SQL schemas: each namespace can have a separate collection of relations, types, etc. without name conflicts.\\nhttps://www.postgresql.org/docs/current/catalog-pg-namespace.html",
        "  oid oid | Row identifier",
        "  nspname name | Name of the namespace",
        "  nspowner oid | Owner of the namespace",
        "  nspacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_namespace.nspowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_opclass | The catalog pg_opclass defines index access method operator classes. Each operator class defines semantics for index columns of a particular data type and a particular index access method. An operator class essentially specifies that a particular operator family is applicable to a particular indexable column data type. The set of operators from the family that are actually usable with the indexed column are whichever ones accept the column's data type as their left-hand input.\\nhttps://www.postgresql.org/docs/current/catalog-pg-opclass.html",
        "  oid oid | Row identifier",
        "  opcmethod oid | Index access method operator class is for",
        "  opcname name | Name of this operator class",
        "  opcnamespace oid | Namespace of this operator class",
        "  opcowner oid | Owner of the operator class",
        "  opcfamily oid | Operator family containing the operator class",
        "  opcintype oid | Data type that the operator class indexes",
        "  opcdefault bool | True if this operator class is the default for opcintype",
        "  opckeytype oid | Type of data stored in index, or zero if same as opcintype",
        "fk pg_catalog.pg_opclass.opcmethod -> pg_catalog.pg_am.oid",
        "fk pg_catalog.pg_opclass.opcnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_opclass.opcowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_opclass.opcfamily -> pg_catalog.pg_opfamily.oid",
        "fk pg_catalog.pg_opclass.opcintype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_opclass.opckeytype -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_operator | The catalog pg_operator stores information about operators. See CREATE OPERATOR and Section 38.14 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-operator.html",
        "  oid oid | Row identifier",
        "  oprname name | Name of the operator",
        "  oprnamespace oid | The OID of the namespace that contains this operator",
        "  oprowner oid | Owner of the operator",
        "  oprkind char | b = infix operator (“both”), or l = prefix operator (“left”)",
        "  oprcanmerge bool | This operator supports merge joins",
        "  oprcanhash bool | This operator supports hash joins",
        "  oprleft oid | Type of the left operand (zero for a prefix operator)",
        "  oprright oid | Type of the right operand",
        "  oprresult oid | Type of the result (zero for a not-yet-defined “shell” operator)",
        "  oprcom oid | Commutator of this operator (zero if none)",
        "  oprnegate oid | Negator of this operator (zero if none)",
        "  oprcode regproc | Function that implements this operator (zero for a not-yet-defined “shell” operator)",
        "  oprrest regproc | Restriction selectivity estimation function for this operator (zero if none)",
        "  oprjoin regproc | Join selectivity estimation function for this operator (zero if none)",
        "fk pg_catalog.pg_operator.oprnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_operator.oprowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_operator.oprleft -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_operator.oprright -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_operator.oprresult -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_operator.oprcom -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_operator.oprnegate -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_operator.oprcode -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_operator.oprrest -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_operator.oprjoin -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_opfamily | The catalog pg_opfamily defines operator families. Each operator family is a collection of operators and associated support routines that implement the semantics specified for a particular index access method. Furthermore, the operators in a family are all “compatible”, in a way that is specified by the access method. The operator family concept allows cross-data-type operators to be used with indexes and to be reasoned about using knowledge of access method semantics.\\nhttps://www.postgresql.org/docs/current/catalog-pg-opfamily.html",
        "  oid oid | Row identifier",
        "  opfmethod oid | Index access method operator family is for",
        "  opfname name | Name of this operator family",
        "  opfnamespace oid | Namespace of this operator family",
        "  opfowner oid | Owner of the operator family",
        "fk pg_catalog.pg_opfamily.opfmethod -> pg_catalog.pg_am.oid",
        "fk pg_catalog.pg_opfamily.opfnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_opfamily.opfowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_partitioned_table | The catalog pg_partitioned_table stores information about how tables are partitioned.\\nhttps://www.postgresql.org/docs/current/catalog-pg-partitioned-table.html",
        "  partrelid oid | The OID of the pg_class entry for this partitioned table",
        "  partstrat char | Partitioning strategy; h = hash partitioned table, l = list partitioned table, r = range partitioned table",
        "  partnatts int2 | The number of columns in the partition key",
        "  partdefid oid | The OID of the pg_class entry for the default partition of this partitioned table, or zero if this partitioned table does not have a default partition",
        "  partattrs int2vector | This is an array of partnatts values that indicate which table columns are part of the partition key. For example, a value of 1 3 would mean that the first and the third table columns make up the partition key. A zero in this array indicates that the corresponding partition key column is an expression, rather than a simple column reference.",
        "  partclass oidvector | For each column in the partition key, this contains the OID of the operator class to use. See pg_opclass for details.",
        "  partcollation oidvector | For each column in the partition key, this contains the OID of the collation to use for partitioning, or zero if the column is not of a collatable data type.",
        "  partexprs pg_node_tree | Expression trees (in nodeToString() representation) for partition key columns that are not simple column references. This is a list with one element for each zero entry in partattrs. Null if all partition key columns are simple references.",
        "fk pg_catalog.pg_partitioned_table.partrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_partitioned_table.partdefid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_partitioned_table.partattrs -> pg_catalog.pg_attribute.attnum",
        "fk pg_catalog.pg_partitioned_table.partclass -> pg_catalog.pg_opclass.oid",
        "fk pg_catalog.pg_partitioned_table.partcollation -> pg_catalog.pg_collation.oid",
        "",
        "pg_catalog.pg_policy | The catalog pg_policy stores row-level security policies for tables. A policy includes the kind of command that it applies to (possibly all commands), the roles that it applies to, the expression to be added as a security-barrier qualification to queries that include the table, and the expression to be added as a WITH CHECK option for queries that attempt to add new records to the table.\\nhttps://www.postgresql.org/docs/current/catalog-pg-policy.html",
        "  oid oid | Row identifier",
        "  polname name | The name of the policy",
        "  polrelid oid | The table to which the policy applies",
        "  polcmd char | The command type to which the policy is applied: r for SELECT, a for INSERT, w for UPDATE, d for DELETE, or * for all",
        "  polpermissive bool | Is the policy permissive or restrictive?",
        "  polroles oid[] | The roles to which the policy is applied; zero means PUBLIC (and normally appears alone in the array)",
        "  polqual pg_node_tree | The expression tree to be added to the security barrier qualifications for queries that use the table",
        "  polwithcheck pg_node_tree | The expression tree to be added to the WITH CHECK qualifications for queries that attempt to add rows to the table",
        "fk pg_catalog.pg_policy.polrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_policy.polroles -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_proc | The catalog pg_proc stores information about functions, procedures, aggregate functions, and window functions (collectively also known as routines). See CREATE FUNCTION, CREATE PROCEDURE, and Section 38.3 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-proc.html",
        "  oid oid | Row identifier",
        "  proname name | Name of the function",
        "  pronamespace oid | The OID of the namespace that contains this function",
        "  proowner oid | Owner of the function",
        "  prolang oid | Implementation language or call interface of this function",
        "  procost float4 | Estimated execution cost (in units of cpu_operator_cost); if proretset, this is cost per row returned",
        "  prorows float4 | Estimated number of result rows (zero if not proretset)",
        "  provariadic oid | Data type of the variadic array parameter's elements, or zero if the function does not have a variadic parameter",
        "  prosupport regproc | Planner support function for this function (see Section 38.11), or zero if none",
        "  prokind char | f for a normal function, p for a procedure, a for an aggregate function, or w for a window function",
        "  prosecdef bool | Function is a security definer (i.e., a “setuid” function)",
        "  proleakproof bool | The function has no side effects. No information about the arguments is conveyed except via the return value. Any function that might throw an error depending on the values of its arguments is not leak-proof.",
        "  proisstrict bool | Function returns null if any call argument is null. In that case the function won't actually be called at all. Functions that are not “strict” must be prepared to handle null inputs.",
        "  proretset bool | Function returns a set (i.e., multiple values of the specified data type)",
        "  provolatile char | provolatile tells whether the function's result depends only on its input arguments, or is affected by outside factors. It is i for “immutable” functions, which always deliver the same result for the same inputs. It is s for “stable” functions, whose results (for fixed inputs) do not change within a scan. It is v for “volatile” functions, whose results might change at any time. (Use v also for functions with side-effects, so that calls to them cannot get optimized away.)",
        "  proparallel char | proparallel tells whether the function can be safely run in parallel mode. It is s for functions which are safe to run in parallel mode without restriction. It is r for functions which can be run in parallel mode, but their execution is restricted to the parallel group leader; parallel worker processes cannot invoke these functions. It is u for functions which are unsafe in parallel mode; the presence of such a function forces a serial execution plan.",
        "  pronargs int2 | Number of input arguments",
        "  pronargdefaults int2 | Number of arguments that have defaults",
        "  prorettype oid | Data type of the return value",
        "  proargtypes oidvector | An array of the data types of the function arguments. This includes only input arguments (including INOUT and VARIADIC arguments), and thus represents the call signature of the function.",
        "  proallargtypes oid[] | An array of the data types of the function arguments. This includes all arguments (including OUT and INOUT arguments); however, if all the arguments are IN arguments, this field will be null. Note that subscripting is 1-based, whereas for historical reasons proargtypes is subscripted from 0.",
        "  proargmodes char[] | An array of the modes of the function arguments, encoded as i for IN arguments, o for OUT arguments, b for INOUT arguments, v for VARIADIC arguments, t for TABLE arguments. If all the arguments are IN arguments, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes.",
        "  proargnames text[] | An array of the names of the function arguments. Arguments without a name are set to empty strings in the array. If none of the arguments have a name, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes.",
        "  proargdefaults pg_node_tree | Expression trees (in nodeToString() representation) for default values. This is a list with pronargdefaults elements, corresponding to the last N input arguments (i.e., the last N proargtypes positions). If none of the arguments have defaults, this field will be null.",
        "  protrftypes oid[] | An array of the argument/result data type(s) for which to apply transforms (from the function's TRANSFORM clause). Null if none.",
        "  prosrc text | This tells the function handler how to invoke the function. It might be the actual source code of the function for interpreted languages, a link symbol, a file name, or just about anything else, depending on the implementation language/call convention.",
        "  probin text | Additional information about how to invoke the function. Again, the interpretation is language-specific.",
        "  prosqlbody pg_node_tree | Pre-parsed SQL function body. This is used for SQL-language functions when the body is given in SQL-standard notation rather than as a string literal. It's null in other cases.",
        "  proconfig text[] | Function's local settings for run-time configuration variables",
        "  proacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_proc.pronamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_proc.proowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_proc.prolang -> pg_catalog.pg_language.oid",
        "fk pg_catalog.pg_proc.provariadic -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_proc.prosupport -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_proc.prorettype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_proc.proargtypes -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_proc.proallargtypes -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_proc.protrftypes -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_publication | The catalog pg_publication contains all publications created in the database. For more on publications see Section 31.1.\\nhttps://www.postgresql.org/docs/current/catalog-pg-publication.html",
        "  oid oid | Row identifier",
        "  pubname name | Name of the publication",
        "  pubowner oid | Owner of the publication",
        "  puballtables bool | If true, this publication automatically includes all tables in the database, including any that will be created in the future.",
        "  pubinsert bool | If true, INSERT operations are replicated for tables in the publication.",
        "  pubupdate bool | If true, UPDATE operations are replicated for tables in the publication.",
        "  pubdelete bool | If true, DELETE operations are replicated for tables in the publication.",
        "  pubtruncate bool | If true, TRUNCATE operations are replicated for tables in the publication.",
        "  pubviaroot bool | If true, operations on a leaf partition are replicated using the identity and schema of its topmost partitioned ancestor mentioned in the publication instead of its own.",
        "fk pg_catalog.pg_publication.pubowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_publication_rel | The catalog pg_publication_rel contains the mapping between relations and publications in the database. This is a many-to-many mapping. See also Section 52.79 for a more user-friendly view of this information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-publication-rel.html",
        "  oid oid | Row identifier",
        "  prpubid oid | Reference to publication",
        "  prrelid oid | Reference to relation",
        "fk pg_catalog.pg_publication_rel.prpubid -> pg_catalog.pg_publication.oid",
        "fk pg_catalog.pg_publication_rel.prrelid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_range | The catalog pg_range stores information about range types. This is in addition to the types' entries in pg_type.\\nhttps://www.postgresql.org/docs/current/catalog-pg-range.html",
        "  rngtypid oid | OID of the range type",
        "  rngsubtype oid | OID of the element type (subtype) of this range type",
        "  rngmultitypid oid | OID of the multirange type for this range type",
        "  rngcollation oid | OID of the collation used for range comparisons, or zero if none",
        "  rngsubopc oid | OID of the subtype's operator class used for range comparisons",
        "  rngcanonical regproc | OID of the function to convert a range value into canonical form, or zero if none",
        "  rngsubdiff regproc | OID of the function to return the difference between two element values as double precision, or zero if none",
        "fk pg_catalog.pg_range.rngtypid -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_range.rngsubtype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_range.rngmultitypid -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_range.rngcollation -> pg_catalog.pg_collation.oid",
        "fk pg_catalog.pg_range.rngsubopc -> pg_catalog.pg_opclass.oid",
        "fk pg_catalog.pg_range.rngcanonical -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_range.rngsubdiff -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_replication_origin | The pg_replication_origin catalog contains all replication origins created. For more on replication origins see Chapter 50.\\nhttps://www.postgresql.org/docs/current/catalog-pg-replication-origin.html",
        "  roident oid | A unique, cluster-wide identifier for the replication origin. Should never leave the system.",
        "  roname text | The external, user defined, name of a replication origin.",
        "",
        "pg_catalog.pg_rewrite | The catalog pg_rewrite stores rewrite rules for tables and views.\\nhttps://www.postgresql.org/docs/current/catalog-pg-rewrite.html",
        "  oid oid | Row identifier",
        "  rulename name | Rule name",
        "  ev_class oid | The table this rule is for",
        "  ev_type char | Event type that the rule is for: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE",
        "  ev_enabled char | Controls in which session_replication_role modes the rule fires. O = rule fires in “origin” and “local” modes, D = rule is disabled, R = rule fires in “replica” mode, A = rule fires always.",
        "  is_instead bool | True if the rule is an INSTEAD rule",
        "  ev_qual pg_node_tree | Expression tree (in the form of a nodeToString() representation) for the rule's qualifying condition",
        "  ev_action pg_node_tree | Query tree (in the form of a nodeToString() representation) for the rule's action",
        "fk pg_catalog.pg_rewrite.ev_class -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_seclabel | The catalog pg_seclabel stores security labels on database objects. Security labels can be manipulated with the SECURITY LABEL command. For an easier way to view security labels, see Section 52.84.\\nhttps://www.postgresql.org/docs/current/catalog-pg-seclabel.html",
        "  objoid oid | The OID of the object this security label pertains to",
        "  classoid oid | The OID of the system catalog this object appears in",
        "  objsubid int4 | For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
        "  provider text | The label provider associated with this label.",
        "  label text | The security label applied to this object.",
        "fk pg_catalog.pg_seclabel.classoid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_sequence | The catalog pg_sequence contains information about sequences. Some of the information about sequences, such as the name and the schema, is in pg_class\\nhttps://www.postgresql.org/docs/current/catalog-pg-sequence.html",
        "  seqrelid oid | The OID of the pg_class entry for this sequence",
        "  seqtypid oid | Data type of the sequence",
        "  seqstart int8 | Start value of the sequence",
        "  seqincrement int8 | Increment value of the sequence",
        "  seqmax int8 | Maximum value of the sequence",
        "  seqmin int8 | Minimum value of the sequence",
        "  seqcache int8 | Cache size of the sequence",
        "  seqcycle bool | Whether the sequence cycles",
        "fk pg_catalog.pg_sequence.seqrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_sequence.seqtypid -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_shdepend | The catalog pg_shdepend records the dependency relationships between database objects and shared objects, such as roles. This information allows PostgreSQL to ensure that those objects are unreferenced before attempting to delete them.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shdepend.html",
        "  dbid oid | The OID of the database the dependent object is in, or zero for a shared object or a SHARED_DEPENDENCY_PIN entry",
        "  classid oid | The OID of the system catalog the dependent object is in, or zero for a SHARED_DEPENDENCY_PIN entry",
        "  objid oid | The OID of the specific dependent object, or zero for a SHARED_DEPENDENCY_PIN entry",
        "  objsubid int4 | For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero.",
        "  refclassid oid | The OID of the system catalog the referenced object is in (must be a shared catalog)",
        "  refobjid oid | The OID of the specific referenced object",
        "  deptype char | A code defining the specific semantics of this dependency relationship; see text",
        "fk pg_catalog.pg_shdepend.dbid -> pg_catalog.pg_database.oid",
        "fk pg_catalog.pg_shdepend.classid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_shdepend.refclassid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_shdescription | The catalog pg_shdescription stores optional descriptions (comments) for shared database objects. Descriptions can be manipulated with the COMMENT command and viewed with psql's \\d commands.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shdescription.html",
        "  objoid oid | The OID of the object this description pertains to",
        "  classoid oid | The OID of the system catalog this object appears in",
        "  description text | Arbitrary text that serves as the description of this object",
        "fk pg_catalog.pg_shdescription.classoid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_shseclabel | The catalog pg_shseclabel stores security labels on shared database objects. Security labels can be manipulated with the SECURITY LABEL command. For an easier way to view security labels, see Section 52.84.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shseclabel.html",
        "  objoid oid | The OID of the object this security label pertains to",
        "  classoid oid | The OID of the system catalog this object appears in",
        "  provider text | The label provider associated with this label.",
        "  label text | The security label applied to this object.",
        "fk pg_catalog.pg_shseclabel.classoid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_statistic | The catalog pg_statistic stores statistical data about the contents of the database. Entries are created by ANALYZE and subsequently used by the query planner. Note that all the statistical data is inherently approximate, even assuming that it is up-to-date.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic.html",
        "  starelid oid | The table or index that the described column belongs to",
        "  staattnum int2 | The number of the described column",
        "  stainherit bool | If true, the stats include inheritance child columns, not just the values in the specified relation",
        "  stanullfrac float4 | The fraction of the column's entries that are null",
        "  stawidth int4 | The average stored width, in bytes, of nonnull entries",
        "  stadistinct float4 | The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a multiplier for the number of rows in the table; for example, a column in which about 80% of the values are nonnull and each nonnull value appears about twice on average could be represented by stadistinct = -0.4. A zero value means the number of distinct values is unknown.",
        "  stakindN int2 | A code number indicating the kind of statistics stored in the Nth “slot” of the pg_statistic row.",
        "  staopN oid | An operator used to derive the statistics stored in the Nth “slot”. For example, a histogram slot would show the < operator that defines the sort order of the data. Zero if the statistics kind does not require an operator.",
        "  stacollN oid | The collation used to derive the statistics stored in the Nth “slot”. For example, a histogram slot for a collatable column would show the collation that defines the sort order of the data. Zero for noncollatable data.",
        "  stanumbersN float4[] | Numerical statistics of the appropriate kind for the Nth “slot”, or null if the slot kind does not involve numerical values",
        "  stavaluesN anyarray | Column data values of the appropriate kind for the Nth “slot”, or null if the slot kind does not store any data values. Each array's element values are actually of the specific column's data type, or a related type such as an array's element type, so there is no way to define these columns' type more specifically than anyarray.",
        "fk pg_catalog.pg_statistic.starelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_statistic.staattnum -> pg_catalog.pg_attribute.attnum",
        "fk pg_catalog.pg_statistic.staopN -> pg_catalog.pg_operator.oid",
        "fk pg_catalog.pg_statistic.stacollN -> pg_catalog.pg_collation.oid",
        "",
        "pg_catalog.pg_statistic_ext | The catalog pg_statistic_ext holds definitions of extended planner statistics. Each row in this catalog corresponds to a statistics object created with CREATE STATISTICS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic-ext.html",
        "  oid oid | Row identifier",
        "  stxrelid oid | Table containing the columns described by this object",
        "  stxname name | Name of the statistics object",
        "  stxnamespace oid | The OID of the namespace that contains this statistics object",
        "  stxowner oid | Owner of the statistics object",
        "  stxstattarget int4 | stxstattarget controls the level of detail of statistics accumulated for this statistics object by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the maximum of the statistics targets of the referenced columns, if set, or the system default statistics target. Positive values of stxstattarget determine the target number of “most common values” to collect.",
        "  stxkeys int2vector | An array of attribute numbers, indicating which table columns are covered by this statistics object; for example a value of 1 3 would mean that the first and the third table columns are covered",
        "  stxkind char[] | An array containing codes for the enabled statistics kinds; valid values are: d for n-distinct statistics, f for functional dependency statistics, m for most common values (MCV) list statistics, and e for expression statistics",
        "  stxexprs pg_node_tree | Expression trees (in nodeToString() representation) for statistics object attributes that are not simple column references. This is a list with one element per expression. Null if all statistics object attributes are simple references.",
        "fk pg_catalog.pg_statistic_ext.stxrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_statistic_ext.stxnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_statistic_ext.stxowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_statistic_ext.stxkeys -> pg_catalog.pg_attribute.attnum",
        "",
        "pg_catalog.pg_statistic_ext_data | The catalog pg_statistic_ext_data holds data for extended planner statistics defined in pg_statistic_ext. Each row in this catalog corresponds to a statistics object created with CREATE STATISTICS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic-ext-data.html",
        "  stxoid oid | Extended statistics object containing the definition for this data",
        "  stxdndistinct pg_ndistinct | N-distinct counts, serialized as pg_ndistinct type",
        "  stxddependencies pg_dependencies | Functional dependency statistics, serialized as pg_dependencies type",
        "  stxdmcv pg_mcv_list | MCV (most-common values) list statistics, serialized as pg_mcv_list type",
        "  stxdexpr pg_statistic[] | Per-expression statistics, serialized as an array of pg_statistic type",
        "fk pg_catalog.pg_statistic_ext_data.stxoid -> pg_catalog.pg_statistic_ext.oid",
        "",
        "pg_catalog.pg_subscription | The catalog pg_subscription contains all existing logical replication subscriptions. For more information about logical replication see Chapter 31.\\nhttps://www.postgresql.org/docs/current/catalog-pg-subscription.html",
        "  oid oid | Row identifier",
        "  subdbid oid | OID of the database that the subscription resides in",
        "  subname name | Name of the subscription",
        "  subowner oid | Owner of the subscription",
        "  subenabled bool | If true, the subscription is enabled and should be replicating",
        "  subbinary bool | If true, the subscription will request that the publisher send data in binary format",
        "  substream bool | If true, the subscription will allow streaming of in-progress transactions",
        "  subconninfo text | Connection string to the upstream database",
        "  subslotname name | Name of the replication slot in the upstream database (also used for the local replication origin name); null represents NONE",
        "  subsynccommit text | The synchronous_commit setting for the subscription's workers to use",
        "  subpublications text[] | Array of subscribed publication names. These reference publications defined in the upstream database. For more on publications see Section 31.1.",
        "fk pg_catalog.pg_subscription.subdbid -> pg_catalog.pg_database.oid",
        "fk pg_catalog.pg_subscription.subowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_subscription_rel | The catalog pg_subscription_rel contains the state for each replicated relation in each subscription. This is a many-to-many mapping.\\nhttps://www.postgresql.org/docs/current/catalog-pg-subscription-rel.html",
        "  srsubid oid | Reference to subscription",
        "  srrelid oid | Reference to relation",
        "  srsubstate char | State code: i = initialize, d = data is being copied, f = finished table copy, s = synchronized, r = ready (normal replication)",
        "  srsublsn pg_lsn | Remote LSN of the state change used for synchronization coordination when in s or r states, otherwise null",
        "fk pg_catalog.pg_subscription_rel.srsubid -> pg_catalog.pg_subscription.oid",
        "fk pg_catalog.pg_subscription_rel.srrelid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_tablespace | The catalog pg_tablespace stores information about the available tablespaces. Tables can be placed in particular tablespaces to aid administration of disk layout.\\nhttps://www.postgresql.org/docs/current/catalog-pg-tablespace.html",
        "  oid oid | Row identifier",
        "  spcname name | Tablespace name",
        "  spcowner oid | Owner of the tablespace, usually the user who created it",
        "  spcacl aclitem[] | Access privileges; see Section 5.7 for details",
        "  spcoptions text[] | Tablespace-level options, as “keyword=value” strings",
        "fk pg_catalog.pg_tablespace.spcowner -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_transform | The catalog pg_transform stores information about transforms, which are a mechanism to adapt data types to procedural languages. See CREATE TRANSFORM for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-transform.html",
        "  oid oid | Row identifier",
        "  trftype oid | OID of the data type this transform is for",
        "  trflang oid | OID of the language this transform is for",
        "  trffromsql regproc | The OID of the function to use when converting the data type for input to the procedural language (e.g., function parameters). Zero is stored if the default behavior should be used.",
        "  trftosql regproc | The OID of the function to use when converting output from the procedural language (e.g., return values) to the data type. Zero is stored if the default behavior should be used.",
        "fk pg_catalog.pg_transform.trftype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_transform.trflang -> pg_catalog.pg_language.oid",
        "fk pg_catalog.pg_transform.trffromsql -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_transform.trftosql -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_trigger | The catalog pg_trigger stores triggers on tables and views. See CREATE TRIGGER for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-trigger.html",
        "  oid oid | Row identifier",
        "  tgrelid oid | The table this trigger is on",
        "  tgparentid oid | Parent trigger that this trigger is cloned from (this happens when partitions are created or attached to a partitioned table); zero if not a clone",
        "  tgname name | Trigger name (must be unique among triggers of same table)",
        "  tgfoid oid | The function to be called",
        "  tgtype int2 | Bit mask identifying trigger firing conditions",
        "  tgenabled char | Controls in which session_replication_role modes the trigger fires. O = trigger fires in “origin” and “local” modes, D = trigger is disabled, R = trigger fires in “replica” mode, A = trigger fires always.",
        "  tgisinternal bool | True if trigger is internally generated (usually, to enforce the constraint identified by tgconstraint)",
        "  tgconstrrelid oid | The table referenced by a referential integrity constraint (zero if trigger is not for a referential integrity constraint)",
        "  tgconstrindid oid | The index supporting a unique, primary key, referential integrity, or exclusion constraint (zero if trigger is not for one of these types of constraint)",
        "  tgconstraint oid | The pg_constraint entry associated with the trigger (zero if trigger is not for a constraint)",
        "  tgdeferrable bool | True if constraint trigger is deferrable",
        "  tginitdeferred bool | True if constraint trigger is initially deferred",
        "  tgnargs int2 | Number of argument strings passed to trigger function",
        "  tgattr int2vector | Column numbers, if trigger is column-specific; otherwise an empty array",
        "  tgargs bytea | Argument strings to pass to trigger, each NULL-terminated",
        "  tgqual pg_node_tree | Expression tree (in nodeToString() representation) for the trigger's WHEN condition, or null if none",
        "  tgoldtable name | REFERENCING clause name for OLD TABLE, or null if none",
        "  tgnewtable name | REFERENCING clause name for NEW TABLE, or null if none",
        "fk pg_catalog.pg_trigger.tgrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_trigger.tgparentid -> pg_catalog.pg_trigger.oid",
        "fk pg_catalog.pg_trigger.tgfoid -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_trigger.tgconstrrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_trigger.tgconstrindid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_trigger.tgconstraint -> pg_catalog.pg_constraint.oid",
        "fk pg_catalog.pg_trigger.tgattr -> pg_catalog.pg_attribute.attnum",
        "",
        "pg_catalog.pg_ts_config | The pg_ts_config catalog contains entries representing text search configurations. A configuration specifies a particular text search parser and a list of dictionaries to use for each of the parser's output token types. The parser is shown in the pg_ts_config entry, but the token-to-dictionary mapping is defined by subsidiary entries in pg_ts_config_map.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-config.html",
        "  oid oid | Row identifier",
        "  cfgname name | Text search configuration name",
        "  cfgnamespace oid | The OID of the namespace that contains this configuration",
        "  cfgowner oid | Owner of the configuration",
        "  cfgparser oid | The OID of the text search parser for this configuration",
        "fk pg_catalog.pg_ts_config.cfgnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_ts_config.cfgowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_ts_config.cfgparser -> pg_catalog.pg_ts_parser.oid",
        "",
        "pg_catalog.pg_ts_config_map | The pg_ts_config_map catalog contains entries showing which text search dictionaries should be consulted, and in what order, for each output token type of each text search configuration's parser.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-config-map.html",
        "  mapcfg oid | The OID of the pg_ts_config entry owning this map entry",
        "  maptokentype int4 | A token type emitted by the configuration's parser",
        "  mapseqno int4 | Order in which to consult this entry (lower mapseqnos first)",
        "  mapdict oid | The OID of the text search dictionary to consult",
        "fk pg_catalog.pg_ts_config_map.mapcfg -> pg_catalog.pg_ts_config.oid",
        "fk pg_catalog.pg_ts_config_map.mapdict -> pg_catalog.pg_ts_dict.oid",
        "",
        "pg_catalog.pg_ts_dict | The pg_ts_dict catalog contains entries defining text search dictionaries. A dictionary depends on a text search template, which specifies all the implementation functions needed; the dictionary itself provides values for the user-settable parameters supported by the template. This division of labor allows dictionaries to be created by unprivileged users. The parameters are specified by a text string dictinitoption, whose format and meaning vary depending on the template.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-dict.html",
        "  oid oid | Row identifier",
        "  dictname name | Text search dictionary name",
        "  dictnamespace oid | The OID of the namespace that contains this dictionary",
        "  dictowner oid | Owner of the dictionary",
        "  dicttemplate oid | The OID of the text search template for this dictionary",
        "  dictinitoption text | Initialization option string for the template",
        "fk pg_catalog.pg_ts_dict.dictnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_ts_dict.dictowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_ts_dict.dicttemplate -> pg_catalog.pg_ts_template.oid",
        "",
        "pg_catalog.pg_ts_parser | The pg_ts_parser catalog contains entries defining text search parsers. A parser is responsible for splitting input text into lexemes and assigning a token type to each lexeme. Since a parser must be implemented by C-language-level functions, creation of new parsers is restricted to database superusers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-parser.html",
        "  oid oid | Row identifier",
        "  prsname name | Text search parser name",
        "  prsnamespace oid | The OID of the namespace that contains this parser",
        "  prsstart regproc | OID of the parser's startup function",
        "  prstoken regproc | OID of the parser's next-token function",
        "  prsend regproc | OID of the parser's shutdown function",
        "  prsheadline regproc | OID of the parser's headline function (zero if none)",
        "  prslextype regproc | OID of the parser's lextype function",
        "fk pg_catalog.pg_ts_parser.prsnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_ts_parser.prsstart -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_ts_parser.prstoken -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_ts_parser.prsend -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_ts_parser.prsheadline -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_ts_parser.prslextype -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_ts_template | The pg_ts_template catalog contains entries defining text search templates. A template is the implementation skeleton for a class of text search dictionaries. Since a template must be implemented by C-language-level functions, creation of new templates is restricted to database superusers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-template.html",
        "  oid oid | Row identifier",
        "  tmplname name | Text search template name",
        "  tmplnamespace oid | The OID of the namespace that contains this template",
        "  tmplinit regproc | OID of the template's initialization function (zero if none)",
        "  tmpllexize regproc | OID of the template's lexize function",
        "fk pg_catalog.pg_ts_template.tmplnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_ts_template.tmplinit -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_ts_template.tmpllexize -> pg_catalog.pg_proc.oid",
        "",
        "pg_catalog.pg_type | The catalog pg_type stores information about data types. Base types and enum types (scalar types) are created with CREATE TYPE, and domains with CREATE DOMAIN. A composite type is automatically created for each table in the database, to represent the row structure of the table. It is also possible to create composite types with CREATE TYPE AS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-type.html",
        "  oid oid | Row identifier",
        "  typname name | Data type name",
        "  typnamespace oid | The OID of the namespace that contains this type",
        "  typowner oid | Owner of the type",
        "  typlen int2 | For a fixed-size type, typlen is the number of bytes in the internal representation of the type. But for a variable-length type, typlen is negative. -1 indicates a “varlena” type (one that has a length word), -2 indicates a null-terminated C string.",
        "  typbyval bool | typbyval determines whether internal routines pass a value of this type by value or by reference. typbyval had better be false if typlen is not 1, 2, or 4 (or 8 on machines where Datum is 8 bytes). Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value.",
        "  typtype char | typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, e for an enum type, p for a pseudo-type, r for a range type, or m for a multirange type. See also typrelid and typbasetype.",
        "  typcategory char | typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be “preferred”. See Table 52.63.",
        "  typispreferred bool | True if the type is a preferred cast target within its typcategory",
        "  typisdefined bool | True if the type is defined, false if this is a placeholder entry for a not-yet-defined type. When typisdefined is false, nothing except the type name, namespace, and OID can be relied on.",
        "  typdelim char | Character that separates two values of this type when parsing array input. Note that the delimiter is associated with the array element data type, not the array data type.",
        "  typrelid oid | If this is a composite type (see typtype), then this column points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for non-composite types.",
        "  typsubscript regproc | Subscripting handler function's OID, or zero if this type doesn't support subscripting. Types that are “true” array types have typsubscript = array_subscript_handler, but other types may have other handler functions to implement specialized subscripting behavior.",
        "  typelem oid | If typelem is not zero then it identifies another row in pg_type, defining the type yielded by subscripting. This should be zero if typsubscript is zero. However, it can be zero when typsubscript isn't zero, if the handler doesn't need typelem to determine the subscripting result type. Note that a typelem dependency is considered to imply physical containment of the element type in this type; so DDL changes on the element type might be restricted by the presence of this type.",
        "  typarray oid | If typarray is not zero then it identifies another row in pg_type, which is the “true” array type having this type as element",
        "  typinput regproc | Input conversion function (text format)",
        "  typoutput regproc | Output conversion function (text format)",
        "  typreceive regproc | Input conversion function (binary format), or zero if none",
        "  typsend regproc | Output conversion function (binary format), or zero if none",
        "  typmodin regproc | Type modifier input function, or zero if type does not support modifiers",
        "  typmodout regproc | Type modifier output function, or zero to use the standard format",
        "  typanalyze regproc | Custom ANALYZE function, or zero to use the standard function",
        "  typalign char | typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are:",
        "  typstorage char | typstorage tells for varlena types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are:",
        "  typnotnull bool | typnotnull represents a not-null constraint on a type. Used for domains only.",
        "  typbasetype oid | If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if this type is not a domain.",
        "  typtypmod int4 | Domains use typtypmod to record the typmod to be applied to their base type (-1 if base type does not use a typmod). -1 if this type is not a domain.",
        "  typndims int4 | typndims is the number of array dimensions for a domain over an array (that is, typbasetype is an array type). Zero for types other than domains over array types.",
        "  typcollation oid | typcollation specifies the collation of the type. If the type does not support collations, this will be zero. A base type that supports collations will have a nonzero value here, typically DEFAULT_COLLATION_OID. A domain over a collatable type can have a collation OID different from its base type's, if one was specified for the domain.",
        "  typdefaultbin pg_node_tree | If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains.",
        "  typdefault text | typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which can be fed to the type's input converter to produce a constant.",
        "  typacl aclitem[] | Access privileges; see Section 5.7 for details",
        "fk pg_catalog.pg_type.typnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_type.typowner -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_type.typrelid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_type.typsubscript -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typelem -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_type.typarray -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_type.typinput -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typoutput -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typreceive -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typsend -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typmodin -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typmodout -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typanalyze -> pg_catalog.pg_proc.oid",
        "fk pg_catalog.pg_type.typbasetype -> pg_catalog.pg_type.oid",
        "fk pg_catalog.pg_type.typcollation -> pg_catalog.pg_collation.oid",
        "",
        "pg_catalog.pg_user_mapping | The catalog pg_user_mapping stores the mappings from local user to remote. Access to this catalog is restricted from normal users, use the view pg_user_mappings instead.\\nhttps://www.postgresql.org/docs/current/catalog-pg-user-mapping.html",
        "  oid oid | Row identifier",
        "  umuser oid | OID of the local role being mapped, or zero if the user mapping is public",
        "  umserver oid | The OID of the foreign server that contains this mapping",
        "  umoptions text[] | User mapping specific options, as “keyword=value” strings",
        "fk pg_catalog.pg_user_mapping.umuser -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_user_mapping.umserver -> pg_catalog.pg_foreign_server.oid",
        "",
        "pg_catalog.pg_available_extensions | The pg_available_extensions view lists the extensions that are available for installation. See also the pg_extension catalog, which shows the extensions currently installed.\\nhttps://www.postgresql.org/docs/current/view-pg-available-extensions.html",
        "  name name | Extension name",
        "  default_version text | Name of default version, or NULL if none is specified",
        "  installed_version text | Currently installed version of the extension, or NULL if not installed",
        "  comment text | Comment string from the extension's control file",
        "",
        "pg_catalog.pg_available_extension_versions | The pg_available_extension_versions view lists the specific extension versions that are available for installation. See also the pg_extension catalog, which shows the extensions currently installed.\\nhttps://www.postgresql.org/docs/current/view-pg-available-extension-versions.html",
        "  name name | Extension name",
        "  version text | Version name",
        "  installed bool | True if this version of this extension is currently installed",
        "  superuser bool | True if only superusers are allowed to install this extension (but see trusted)",
        "  trusted bool | True if the extension can be installed by non-superusers with appropriate privileges",
        "  relocatable bool | True if extension can be relocated to another schema",
        "  schema name | Name of the schema that the extension must be installed into, or NULL if partially or fully relocatable",
        "  requires name[] | Names of prerequisite extensions, or NULL if none",
        "  comment text | Comment string from the extension's control file",
        "",
        "pg_catalog.pg_backend_memory_contexts | The view pg_backend_memory_contexts displays all the memory contexts of the server process attached to the current session.\\nhttps://www.postgresql.org/docs/current/view-pg-backend-memory-contexts.html",
        "  name text | Name of the memory context",
        "  ident text | Identification information of the memory context. This field is truncated at 1024 bytes",
        "  parent text | Name of the parent of this memory context",
        "  level int4 | Distance from TopMemoryContext in context tree",
        "  total_bytes int8 | Total bytes allocated for this memory context",
        "  total_nblocks int8 | Total number of blocks allocated for this memory context",
        "  free_bytes int8 | Free space in bytes",
        "  free_chunks int8 | Total number of free chunks",
        "  used_bytes int8 | Used space in bytes",
        "",
        "pg_catalog.pg_config | The view pg_config describes the compile-time configuration parameters of the currently installed version of PostgreSQL. It is intended, for example, to be used by software packages that want to interface to PostgreSQL to facilitate finding the required header files and libraries. It provides the same basic information as the pg_config PostgreSQL client application.\\nhttps://www.postgresql.org/docs/current/view-pg-config.html",
        "  name text | The parameter name",
        "  setting text | The parameter value",
        "",
        "pg_catalog.pg_cursors | The pg_cursors view lists the cursors that are currently available. Cursors can be defined in several ways:\\nhttps://www.postgresql.org/docs/current/view-pg-cursors.html",
        "  name text | The name of the cursor",
        "  statement text | The verbatim query string submitted to declare this cursor",
        "  is_holdable bool | true if the cursor is holdable (that is, it can be accessed after the transaction that declared the cursor has committed); false otherwise",
        "  is_binary bool | true if the cursor was declared BINARY; false otherwise",
        "  is_scrollable bool | true if the cursor is scrollable (that is, it allows rows to be retrieved in a nonsequential manner); false otherwise",
        "  creation_time timestamptz | The time at which the cursor was declared",
        "",
        "pg_catalog.pg_file_settings | The view pg_file_settings provides a summary of the contents of the server's configuration file(s). A row appears in this view for each “name = value” entry appearing in the files, with annotations indicating whether the value could be applied successfully. Additional row(s) may appear for problems not linked to a “name = value” entry, such as syntax errors in the files.\\nhttps://www.postgresql.org/docs/current/view-pg-file-settings.html",
        "  sourcefile text | Full path name of the configuration file",
        "  sourceline int4 | Line number within the configuration file where the entry appears",
        "  seqno int4 | Order in which the entries are processed (1..n)",
        "  name text | Configuration parameter name",
        "  setting text | Value to be assigned to the parameter",
        "  applied bool | True if the value can be applied successfully",
        "  error text | If not null, an error message indicating why this entry could not be applied",
        "",
        "pg_catalog.pg_group | The view pg_group exists for backwards compatibility: it emulates a catalog that existed in PostgreSQL before version 8.1. It shows the names and members of all roles that are marked as not rolcanlogin, which is an approximation to the set of roles that are being used as groups.\\nhttps://www.postgresql.org/docs/current/view-pg-group.html",
        "  groname name | Name of the group",
        "  grosysid oid | ID of this group",
        "  grolist oid[] | An array containing the IDs of the roles in this group",
        "fk pg_catalog.pg_group.groname -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_group.grosysid -> pg_catalog.pg_authid.oid",
        "fk pg_catalog.pg_group.grolist -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_hba_file_rules | The view pg_hba_file_rules provides a summary of the contents of the client authentication configuration file, pg_hba.conf. A row appears in this view for each non-empty, non-comment line in the file, with annotations indicating whether the rule could be applied successfully.\\nhttps://www.postgresql.org/docs/current/view-pg-hba-file-rules.html",
        "  line_number int4 | Line number of this rule in pg_hba.conf",
        "  type text | Type of connection",
        "  database text[] | List of database name(s) to which this rule applies",
        "  user_name text[] | List of user and group name(s) to which this rule applies",
        "  address text | Host name or IP address, or one of all, samehost, or samenet, or null for local connections",
        "  netmask text | IP address mask, or null if not applicable",
        "  auth_method text | Authentication method",
        "  options text[] | Options specified for authentication method, if any",
        "  error text | If not null, an error message indicating why this line could not be processed",
        "",
        "pg_catalog.pg_indexes | The view pg_indexes provides access to useful information about each index in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-indexes.html",
        "  schemaname name | Name of schema containing table and index",
        "  tablename name | Name of table the index is for",
        "  indexname name | Name of index",
        "  tablespace name | Name of tablespace containing index (null if default for database)",
        "  indexdef text | Index definition (a reconstructed CREATE INDEX command)",
        "fk pg_catalog.pg_indexes.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_indexes.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_indexes.indexname -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_indexes.tablespace -> pg_catalog.pg_tablespace.spcname",
        "",
        "pg_catalog.pg_locks | The view pg_locks provides access to information about the locks held by active processes within the database server. See Chapter 13 for more discussion of locking.\\nhttps://www.postgresql.org/docs/current/view-pg-locks.html",
        "  locktype text | Type of the lockable object: relation, extend, frozenid, page, tuple, transactionid, virtualxid, spectoken, object, userlock, or advisory. (See also Table 28.11.)",
        "  database oid | OID of the database in which the lock target exists, or zero if the target is a shared object, or null if the target is a transaction ID",
        "  relation oid | OID of the relation targeted by the lock, or null if the target is not a relation or part of a relation",
        "  page int4 | Page number targeted by the lock within the relation, or null if the target is not a relation page or tuple",
        "  tuple int2 | Tuple number targeted by the lock within the page, or null if the target is not a tuple",
        "  virtualxid text | Virtual ID of the transaction targeted by the lock, or null if the target is not a virtual transaction ID",
        "  transactionid xid | ID of the transaction targeted by the lock, or null if the target is not a transaction ID",
        "  classid oid | OID of the system catalog containing the lock target, or null if the target is not a general database object",
        "  objid oid | OID of the lock target within its system catalog, or null if the target is not a general database object",
        "  objsubid int2 | Column number targeted by the lock (the classid and objid refer to the table itself), or zero if the target is some other general database object, or null if the target is not a general database object",
        "  virtualtransaction text | Virtual ID of the transaction that is holding or awaiting this lock",
        "  pid int4 | Process ID of the server process holding or awaiting this lock, or null if the lock is held by a prepared transaction",
        "  mode text | Name of the lock mode held or desired by this process (see Section 13.3.1 and Section 13.2.3)",
        "  granted bool | True if lock is held, false if lock is awaited",
        "  fastpath bool | True if lock was taken via fast path, false if taken via main lock table",
        "  waitstart timestamptz | Time when the server process started waiting for this lock, or null if the lock is held. Note that this can be null for a very short period of time after the wait started even though granted is false.",
        "fk pg_catalog.pg_locks.database -> pg_catalog.pg_database.oid",
        "fk pg_catalog.pg_locks.relation -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_locks.classid -> pg_catalog.pg_class.oid",
        "",
        "pg_catalog.pg_matviews | The view pg_matviews provides access to useful information about each materialized view in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-matviews.html",
        "  schemaname name | Name of schema containing materialized view",
        "  matviewname name | Name of materialized view",
        "  matviewowner name | Name of materialized view's owner",
        "  tablespace name | Name of tablespace containing materialized view (null if default for database)",
        "  hasindexes bool | True if materialized view has (or recently had) any indexes",
        "  ispopulated bool | True if materialized view is currently populated",
        "  definition text | Materialized view definition (a reconstructed SELECT query)",
        "fk pg_catalog.pg_matviews.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_matviews.matviewname -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_matviews.matviewowner -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_matviews.tablespace -> pg_catalog.pg_tablespace.spcname",
        "",
        "pg_catalog.pg_policies | The view pg_policies provides access to useful information about each row-level security policy in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-policies.html",
        "  schemaname name | Name of schema containing table policy is on",
        "  tablename name | Name of table policy is on",
        "  policyname name | Name of policy",
        "  permissive text | Is the policy permissive or restrictive?",
        "  roles name[] | The roles to which this policy applies",
        "  cmd text | The command type to which the policy is applied",
        "  qual text | The expression added to the security barrier qualifications for queries that this policy applies to",
        "  with_check text | The expression added to the WITH CHECK qualifications for queries that attempt to add rows to this table",
        "fk pg_catalog.pg_policies.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_policies.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_policies.policyname -> pg_catalog.pg_policy.polname",
        "",
        "pg_catalog.pg_prepared_statements | The pg_prepared_statements view displays all the prepared statements that are available in the current session. See PREPARE for more information about prepared statements.\\nhttps://www.postgresql.org/docs/current/view-pg-prepared-statements.html",
        "  name text | The identifier of the prepared statement",
        "  statement text | The query string submitted by the client to create this prepared statement. For prepared statements created via SQL, this is the PREPARE statement submitted by the client. For prepared statements created via the frontend/backend protocol, this is the text of the prepared statement itself.",
        "  prepare_time timestamptz | The time at which the prepared statement was created",
        "  parameter_types regtype[] | The expected parameter types for the prepared statement in the form of an array of regtype. The OID corresponding to an element of this array can be obtained by casting the regtype value to oid.",
        "  from_sql bool | true if the prepared statement was created via the PREPARE SQL command; false if the statement was prepared via the frontend/backend protocol",
        "  generic_plans int8 | Number of times generic plan was chosen",
        "  custom_plans int8 | Number of times custom plan was chosen",
        "",
        "pg_catalog.pg_prepared_xacts | The view pg_prepared_xacts displays information about transactions that are currently prepared for two-phase commit (see PREPARE TRANSACTION for details).\\nhttps://www.postgresql.org/docs/current/view-pg-prepared-xacts.html",
        "  transaction xid | Numeric transaction identifier of the prepared transaction",
        "  gid text | Global transaction identifier that was assigned to the transaction",
        "  prepared timestamptz | Time at which the transaction was prepared for commit",
        "  owner name | Name of the user that executed the transaction",
        "  database name | Name of the database in which the transaction was executed",
        "fk pg_catalog.pg_prepared_xacts.owner -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_prepared_xacts.database -> pg_catalog.pg_database.datname",
        "",
        "pg_catalog.pg_publication_tables | The view pg_publication_tables provides information about the mapping between publications and the tables they contain. Unlike the underlying catalog pg_publication_rel, this view expands publications defined as FOR ALL TABLES, so for such publications there will be a row for each eligible table.\\nhttps://www.postgresql.org/docs/current/view-pg-publication-tables.html",
        "  pubname name | Name of publication",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table",
        "fk pg_catalog.pg_publication_tables.pubname -> pg_catalog.pg_publication.pubname",
        "fk pg_catalog.pg_publication_tables.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_publication_tables.tablename -> pg_catalog.pg_class.relname",
        "",
        "pg_catalog.pg_replication_origin_status | The pg_replication_origin_status view contains information about how far replay for a certain origin has progressed. For more on replication origins see Chapter 50.\\nhttps://www.postgresql.org/docs/current/view-pg-replication-origin-status.html",
        "  local_id oid | internal node identifier",
        "  external_id text | external node identifier",
        "  remote_lsn pg_lsn | The origin node's LSN up to which data has been replicated.",
        "  local_lsn pg_lsn | This node's LSN at which remote_lsn has been replicated. Used to flush commit records before persisting data to disk when using asynchronous commits.",
        "fk pg_catalog.pg_replication_origin_status.local_id -> pg_catalog.pg_replication_origin.roident",
        "fk pg_catalog.pg_replication_origin_status.external_id -> pg_catalog.pg_replication_origin.roname",
        "",
        "pg_catalog.pg_replication_slots | The pg_replication_slots view provides a listing of all replication slots that currently exist on the database cluster, along with their current state.\\nhttps://www.postgresql.org/docs/current/view-pg-replication-slots.html",
        "  slot_name name | A unique, cluster-wide identifier for the replication slot",
        "  plugin name | The base name of the shared object containing the output plugin this logical slot is using, or null for physical slots.",
        "  slot_type text | The slot type: physical or logical",
        "  datoid oid | The OID of the database this slot is associated with, or null. Only logical slots have an associated database.",
        "  database name | The name of the database this slot is associated with, or null. Only logical slots have an associated database.",
        "  temporary bool | True if this is a temporary replication slot. Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished.",
        "  active bool | True if this slot is currently actively being used",
        "  active_pid int4 | The process ID of the session using this slot if the slot is currently actively being used. NULL if inactive.",
        "  xmin xid | The oldest transaction that this slot needs the database to retain. VACUUM cannot remove tuples deleted by any later transaction.",
        "  catalog_xmin xid | The oldest transaction affecting the system catalogs that this slot needs the database to retain. VACUUM cannot remove catalog tuples deleted by any later transaction.",
        "  restart_lsn pg_lsn | The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved.",
        "  confirmed_flush_lsn pg_lsn | The address (LSN) up to which the logical slot's consumer has confirmed receiving data. Data older than this is not available anymore. NULL for physical slots.",
        "  wal_status text | Availability of WAL files claimed by this slot. Possible values are:",
        "  safe_wal_size int8 | The number of bytes that can be written to WAL such that this slot is not in danger of getting in state \"lost\". It is NULL for lost slots, as well as if max_slot_wal_keep_size is -1.",
        "  two_phase bool | True if the slot is enabled for decoding prepared transactions. Always false for physical slots.",
        "fk pg_catalog.pg_replication_slots.datoid -> pg_catalog.pg_database.oid",
        "fk pg_catalog.pg_replication_slots.database -> pg_catalog.pg_database.datname",
        "",
        "pg_catalog.pg_roles | The view pg_roles provides access to information about database roles. This is simply a publicly readable view of pg_authid that blanks out the password field.\\nhttps://www.postgresql.org/docs/current/view-pg-roles.html",
        "  rolname name | Role name",
        "  rolsuper bool | Role has superuser privileges",
        "  rolinherit bool | Role automatically inherits privileges of roles it is a member of",
        "  rolcreaterole bool | Role can create more roles",
        "  rolcreatedb bool | Role can create databases",
        "  rolcanlogin bool | Role can log in. That is, this role can be given as the initial session authorization identifier",
        "  rolreplication bool | Role is a replication role. A replication role can initiate replication connections and create and drop replication slots.",
        "  rolconnlimit int4 | For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit.",
        "  rolpassword text | Not the password (always reads as ********)",
        "  rolvaliduntil timestamptz | Password expiry time (only used for password authentication); null if no expiration",
        "  rolbypassrls bool | Role bypasses every row-level security policy, see Section 5.8 for more information.",
        "  rolconfig text[] | Role-specific defaults for run-time configuration variables",
        "  oid oid | ID of role",
        "fk pg_catalog.pg_roles.oid -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_rules | The view pg_rules provides access to useful information about query rewrite rules.\\nhttps://www.postgresql.org/docs/current/view-pg-rules.html",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table the rule is for",
        "  rulename name | Name of rule",
        "  definition text | Rule definition (a reconstructed creation command)",
        "fk pg_catalog.pg_rules.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_rules.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_rules.rulename -> pg_catalog.pg_rewrite.rulename",
        "",
        "pg_catalog.pg_seclabels | The view pg_seclabels provides information about security labels. It as an easier-to-query version of the pg_seclabel catalog.\\nhttps://www.postgresql.org/docs/current/view-pg-seclabels.html",
        "  objoid oid | The OID of the object this security label pertains to",
        "  classoid oid | The OID of the system catalog this object appears in",
        "  objsubid int4 | For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
        "  objtype text | The type of object to which this label applies, as text.",
        "  objnamespace oid | The OID of the namespace for this object, if applicable; otherwise NULL.",
        "  objname text | The name of the object to which this label applies, as text.",
        "  provider text | The label provider associated with this label.",
        "  label text | The security label applied to this object.",
        "fk pg_catalog.pg_seclabels.classoid -> pg_catalog.pg_class.oid",
        "fk pg_catalog.pg_seclabels.objnamespace -> pg_catalog.pg_namespace.oid",
        "fk pg_catalog.pg_seclabels.provider -> pg_catalog.pg_seclabel.provider",
        "fk pg_catalog.pg_seclabels.label -> pg_catalog.pg_seclabel.label",
        "",
        "pg_catalog.pg_sequences | The view pg_sequences provides access to useful information about each sequence in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-sequences.html",
        "  schemaname name | Name of schema containing sequence",
        "  sequencename name | Name of sequence",
        "  sequenceowner name | Name of sequence's owner",
        "  data_type regtype | Data type of the sequence",
        "  start_value int8 | Start value of the sequence",
        "  min_value int8 | Minimum value of the sequence",
        "  max_value int8 | Maximum value of the sequence",
        "  increment_by int8 | Increment value of the sequence",
        "  cycle bool | Whether the sequence cycles",
        "  cache_size int8 | Cache size of the sequence",
        "  last_value int8 | The last sequence value written to disk. If caching is used, this value can be greater than the last value handed out from the sequence. Null if the sequence has not been read from yet. Also, if the current user does not have USAGE or SELECT privilege on the sequence, the value is null.",
        "fk pg_catalog.pg_sequences.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_sequences.sequencename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_sequences.sequenceowner -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_sequences.data_type -> pg_catalog.pg_type.oid",
        "",
        "pg_catalog.pg_settings | The view pg_settings provides access to run-time parameters of the server. It is essentially an alternative interface to the SHOW and SET commands. It also provides access to some facts about each parameter that are not directly available from SHOW, such as minimum and maximum values.\\nhttps://www.postgresql.org/docs/current/view-pg-settings.html",
        "  name text | Run-time configuration parameter name",
        "  setting text | Current value of the parameter",
        "  unit text | Implicit unit of the parameter",
        "  category text | Logical group of the parameter",
        "  short_desc text | A brief description of the parameter",
        "  extra_desc text | Additional, more detailed, description of the parameter",
        "  context text | Context required to set the parameter's value (see below)",
        "  vartype text | Parameter type (bool, enum, integer, real, or string)",
        "  source text | Source of the current parameter value",
        "  min_val text | Minimum allowed value of the parameter (null for non-numeric values)",
        "  max_val text | Maximum allowed value of the parameter (null for non-numeric values)",
        "  enumvals text[] | Allowed values of an enum parameter (null for non-enum values)",
        "  boot_val text | Parameter value assumed at server startup if the parameter is not otherwise set",
        "  reset_val text | Value that RESET would reset the parameter to in the current session",
        "  sourcefile text | Configuration file the current value was set in (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings); helpful when using include directives in configuration files",
        "  sourceline int4 | Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings).",
        "  pending_restart bool | true if the value has been changed in the configuration file but needs a restart; or false otherwise.",
        "",
        "pg_catalog.pg_shadow | The view pg_shadow exists for backwards compatibility: it emulates a catalog that existed in PostgreSQL before version 8.1. It shows properties of all roles that are marked as rolcanlogin in pg_authid.\\nhttps://www.postgresql.org/docs/current/view-pg-shadow.html",
        "  usename name | User name",
        "  usesysid oid | ID of this user",
        "  usecreatedb bool | User can create databases",
        "  usesuper bool | User is a superuser",
        "  userepl bool | User can initiate streaming replication and put the system in and out of backup mode.",
        "  usebypassrls bool | User bypasses every row-level security policy, see Section 5.8 for more information.",
        "  passwd text | Password (possibly encrypted); null if none. See pg_authid for details of how encrypted passwords are stored.",
        "  valuntil timestamptz | Password expiry time (only used for password authentication)",
        "  useconfig text[] | Session defaults for run-time configuration variables",
        "fk pg_catalog.pg_shadow.usename -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_shadow.usesysid -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_shmem_allocations | The pg_shmem_allocations view shows allocations made from the server's main shared memory segment. This includes both memory allocated by postgres itself and memory allocated by extensions using the mechanisms detailed in Section 38.10.10.\\nhttps://www.postgresql.org/docs/current/view-pg-shmem-allocations.html",
        "  name text | The name of the shared memory allocation. NULL for unused memory and <anonymous> for anonymous allocations.",
        "  off int8 | The offset at which the allocation starts. NULL for anonymous allocations, since details related to them are not known.",
        "  size int8 | Size of the allocation",
        "  allocated_size int8 | Size of the allocation including padding. For anonymous allocations, no information about padding is available, so the size and allocated_size columns will always be equal. Padding is not meaningful for free memory, so the columns will be equal in that case also.",
        "",
        "pg_catalog.pg_stats | The view pg_stats provides access to the information stored in the pg_statistic catalog. This view allows access only to rows of pg_statistic that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats.html",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table",
        "  attname name | Name of column described by this row",
        "  inherited bool | If true, this row includes inheritance child columns, not just the values in the specified table",
        "  null_frac float4 | Fraction of column entries that are null",
        "  avg_width int4 | Average width in bytes of column's entries",
        "  n_distinct float4 | If greater than zero, the estimated number of distinct values in the column. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique column in which the number of distinct values is the same as the number of rows.",
        "  most_common_vals anyarray | A list of the most common values in the column. (Null if no values seem to be more common than any others.)",
        "  most_common_freqs float4[] | A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
        "  histogram_bounds anyarray | A list of values that divide the column's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This column is null if the column data type does not have a < operator or if the most_common_vals list accounts for the entire population.)",
        "  correlation float4 | Statistical correlation between physical row ordering and logical ordering of the column values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the column will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This column is null if the column data type does not have a < operator.)",
        "  most_common_elems anyarray | A list of non-null element values most often appearing within values of the column. (Null for scalar types.)",
        "  most_common_elem_freqs float4[] | A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)",
        "  elem_count_histogram float4[] | A histogram of the counts of distinct non-null element values within the values of the column, followed by the average number of distinct non-null elements. (Null for scalar types.)",
        "fk pg_catalog.pg_stats.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_stats.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_stats.attname -> pg_catalog.pg_attribute.attname",
        "",
        "pg_catalog.pg_stats_ext | The view pg_stats_ext provides access to information about each extended statistics object in the database, combining information stored in the pg_statistic_ext and pg_statistic_ext_data catalogs. This view allows access only to rows of pg_statistic_ext and pg_statistic_ext_data that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats-ext.html",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table",
        "  statistics_schemaname name | Name of schema containing extended statistics object",
        "  statistics_name name | Name of extended statistics object",
        "  statistics_owner name | Owner of the extended statistics object",
        "  attnames name[] | Names of the columns included in the extended statistics object",
        "  exprs text[] | Expressions included in the extended statistics object",
        "  kinds char[] | Types of extended statistics object enabled for this record",
        "  n_distinct pg_ndistinct | N-distinct counts for combinations of column values. If greater than zero, the estimated number of distinct values in the combination. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique combination of columns in which the number of distinct combinations is the same as the number of rows.",
        "  dependencies pg_dependencies | Functional dependency statistics",
        "  most_common_vals text[] | A list of the most common combinations of values in the columns. (Null if no combinations seem to be more common than any others.)",
        "  most_common_val_nulls bool[] | A list of NULL flags for the most common combinations of values. (Null when most_common_vals is.)",
        "  most_common_freqs float8[] | A list of the frequencies of the most common combinations, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
        "  most_common_base_freqs float8[] | A list of the base frequencies of the most common combinations, i.e., product of per-value frequencies. (Null when most_common_vals is.)",
        "fk pg_catalog.pg_stats_ext.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_stats_ext.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_stats_ext.statistics_schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_stats_ext.statistics_name -> pg_catalog.pg_statistic_ext.stxname",
        "fk pg_catalog.pg_stats_ext.statistics_owner -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_stats_ext.attnames -> pg_catalog.pg_attribute.attname",
        "",
        "pg_catalog.pg_stats_ext_exprs | The view pg_stats_ext_exprs provides access to information about all expressions included in extended statistics objects, combining information stored in the pg_statistic_ext and pg_statistic_ext_data catalogs. This view allows access only to rows of pg_statistic_ext and pg_statistic_ext_data that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats-ext-exprs.html",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table the statistics object is defined on",
        "  statistics_schemaname name | Name of schema containing extended statistics object",
        "  statistics_name name | Name of extended statistics object",
        "  statistics_owner name | Owner of the extended statistics object",
        "  expr text | Expression included in the extended statistics object",
        "  null_frac float4 | Fraction of expression entries that are null",
        "  avg_width int4 | Average width in bytes of expression's entries",
        "  n_distinct float4 | If greater than zero, the estimated number of distinct values in the expression. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the expression seems to have a fixed number of possible values.) For example, -1 indicates a unique expression in which the number of distinct values is the same as the number of rows.",
        "  most_common_vals anyarray | A list of the most common values in the expression. (Null if no values seem to be more common than any others.)",
        "  most_common_freqs float4[] | A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
        "  histogram_bounds anyarray | A list of values that divide the expression's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This expression is null if the expression data type does not have a < operator or if the most_common_vals list accounts for the entire population.)",
        "  correlation float4 | Statistical correlation between physical row ordering and logical ordering of the expression values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the expression will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This expression is null if the expression's data type does not have a < operator.)",
        "  most_common_elems anyarray | A list of non-null element values most often appearing within values of the expression. (Null for scalar types.)",
        "  most_common_elem_freqs float4[] | A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)",
        "  elem_count_histogram float4[] | A histogram of the counts of distinct non-null element values within the values of the expression, followed by the average number of distinct non-null elements. (Null for scalar types.)",
        "fk pg_catalog.pg_stats_ext_exprs.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_stats_ext_exprs.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_stats_ext_exprs.statistics_schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_stats_ext_exprs.statistics_name -> pg_catalog.pg_statistic_ext.stxname",
        "fk pg_catalog.pg_stats_ext_exprs.statistics_owner -> pg_catalog.pg_authid.rolname",
        "",
        "pg_catalog.pg_tables | The view pg_tables provides access to useful information about each table in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-tables.html",
        "  schemaname name | Name of schema containing table",
        "  tablename name | Name of table",
        "  tableowner name | Name of table's owner",
        "  tablespace name | Name of tablespace containing table (null if default for database)",
        "  hasindexes bool | True if table has (or recently had) any indexes",
        "  hasrules bool | True if table has (or once had) rules",
        "  hastriggers bool | True if table has (or once had) triggers",
        "  rowsecurity bool | True if row security is enabled on the table",
        "fk pg_catalog.pg_tables.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_tables.tablename -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_tables.tableowner -> pg_catalog.pg_authid.rolname",
        "fk pg_catalog.pg_tables.tablespace -> pg_catalog.pg_tablespace.spcname",
        "fk pg_catalog.pg_tables.hasindexes -> pg_catalog.pg_class.relhasindex",
        "fk pg_catalog.pg_tables.hasrules -> pg_catalog.pg_class.relhasrules",
        "fk pg_catalog.pg_tables.hastriggers -> pg_catalog.pg_class.relhastriggers",
        "fk pg_catalog.pg_tables.rowsecurity -> pg_catalog.pg_class.relrowsecurity",
        "",
        "pg_catalog.pg_timezone_abbrevs | The view pg_timezone_abbrevs provides a list of time zone abbreviations that are currently recognized by the datetime input routines. The contents of this view change when the timezone_abbreviations run-time parameter is modified.\\nhttps://www.postgresql.org/docs/current/view-pg-timezone-abbrevs.html",
        "  abbrev text | Time zone abbreviation",
        "  utc_offset interval | Offset from UTC (positive means east of Greenwich)",
        "  is_dst bool | True if this is a daylight-savings abbreviation",
        "",
        "pg_catalog.pg_timezone_names | The view pg_timezone_names provides a list of time zone names that are recognized by SET TIMEZONE, along with their associated abbreviations, UTC offsets, and daylight-savings status. (Technically, PostgreSQL does not use UTC because leap seconds are not handled.) Unlike the abbreviations shown in pg_timezone_abbrevs, many of these names imply a set of daylight-savings transition date rules. Therefore, the associated information changes across local DST boundaries. The displayed information is computed based on the current value of CURRENT_TIMESTAMP.\\nhttps://www.postgresql.org/docs/current/view-pg-timezone-names.html",
        "  name text | Time zone name",
        "  abbrev text | Time zone abbreviation",
        "  utc_offset interval | Offset from UTC (positive means east of Greenwich)",
        "  is_dst bool | True if currently observing daylight savings",
        "",
        "pg_catalog.pg_user | The view pg_user provides access to information about database users. This is simply a publicly readable view of pg_shadow that blanks out the password field.\\nhttps://www.postgresql.org/docs/current/view-pg-user.html",
        "  usename name | User name",
        "  usesysid oid | ID of this user",
        "  usecreatedb bool | User can create databases",
        "  usesuper bool | User is a superuser",
        "  userepl bool | User can initiate streaming replication and put the system in and out of backup mode.",
        "  usebypassrls bool | User bypasses every row-level security policy, see Section 5.8 for more information.",
        "  passwd text | Not the password (always reads as ********)",
        "  valuntil timestamptz | Password expiry time (only used for password authentication)",
        "  useconfig text[] | Session defaults for run-time configuration variables",
        "",
        "pg_catalog.pg_user_mappings | The view pg_user_mappings provides access to information about user mappings. This is essentially a publicly readable view of pg_user_mapping that leaves out the options field if the user has no rights to use it.\\nhttps://www.postgresql.org/docs/current/view-pg-user-mappings.html",
        "  umid oid | OID of the user mapping",
        "  srvid oid | The OID of the foreign server that contains this mapping",
        "  srvname name | Name of the foreign server",
        "  umuser oid | OID of the local role being mapped, or zero if the user mapping is public",
        "  usename name | Name of the local user to be mapped",
        "  umoptions text[] | User mapping specific options, as “keyword=value” strings",
        "fk pg_catalog.pg_user_mappings.umid -> pg_catalog.pg_user_mapping.oid",
        "fk pg_catalog.pg_user_mappings.srvid -> pg_catalog.pg_foreign_server.oid",
        "fk pg_catalog.pg_user_mappings.srvname -> pg_catalog.pg_foreign_server.srvname",
        "fk pg_catalog.pg_user_mappings.umuser -> pg_catalog.pg_authid.oid",
        "",
        "pg_catalog.pg_views | The view pg_views provides access to useful information about each view in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-views.html",
        "  schemaname name | Name of schema containing view",
        "  viewname name | Name of view",
        "  viewowner name | Name of view's owner",
        "  definition text | View definition (a reconstructed SELECT query)",
        "fk pg_catalog.pg_views.schemaname -> pg_catalog.pg_namespace.nspname",
        "fk pg_catalog.pg_views.viewname -> pg_catalog.pg_class.relname",
        "fk pg_catalog.pg_views.viewowner -> pg_catalog.pg_authid.rolname",
        ""
      ],
      "tables": [
        {
          "schema": "pg_catalog",
          "table": "pg_aggregate",
          "columns": [
            {
              "name": "aggfnoid",
              "type": "regproc",
              "comment": {
                "text": "pg_proc OID of the aggregate function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggkind",
              "type": "char",
              "comment": {
                "text": "Aggregate kind: n for “normal” aggregates, o for “ordered-set” aggregates, or h for “hypothetical-set” aggregates",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggnumdirectargs",
              "type": "int2",
              "comment": {
                "text": "Number of direct (non-aggregated) arguments of an ordered-set or hypothetical-set aggregate, counting a variadic array as one argument. If equal to pronargs, the aggregate must be variadic and the variadic array describes the aggregated arguments as well as the final direct arguments. Always zero for normal aggregates.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggtransfn",
              "type": "regproc",
              "comment": {
                "text": "Transition function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggfinalfn",
              "type": "regproc",
              "comment": {
                "text": "Final function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggcombinefn",
              "type": "regproc",
              "comment": {
                "text": "Combine function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggserialfn",
              "type": "regproc",
              "comment": {
                "text": "Serialization function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggdeserialfn",
              "type": "regproc",
              "comment": {
                "text": "Deserialization function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmtransfn",
              "type": "regproc",
              "comment": {
                "text": "Forward transition function for moving-aggregate mode (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggminvtransfn",
              "type": "regproc",
              "comment": {
                "text": "Inverse transition function for moving-aggregate mode (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmfinalfn",
              "type": "regproc",
              "comment": {
                "text": "Final function for moving-aggregate mode (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggfinalextra",
              "type": "bool",
              "comment": {
                "text": "True to pass extra dummy arguments to aggfinalfn",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmfinalextra",
              "type": "bool",
              "comment": {
                "text": "True to pass extra dummy arguments to aggmfinalfn",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggfinalmodify",
              "type": "char",
              "comment": {
                "text": "Whether aggfinalfn modifies the transition state value: r if it is read-only, s if the aggtransfn cannot be applied after the aggfinalfn, or w if it writes on the value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmfinalmodify",
              "type": "char",
              "comment": {
                "text": "Like aggfinalmodify, but for the aggmfinalfn",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggsortop",
              "type": "oid",
              "comment": {
                "text": "Associated sort operator (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggtranstype",
              "type": "oid",
              "comment": {
                "text": "Data type of the aggregate function's internal transition (state) data",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggtransspace",
              "type": "int4",
              "comment": {
                "text": "Approximate average size (in bytes) of the transition state data, or zero to use a default estimate",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmtranstype",
              "type": "oid",
              "comment": {
                "text": "Data type of the aggregate function's internal transition (state) data for moving-aggregate mode (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggmtransspace",
              "type": "int4",
              "comment": {
                "text": "Approximate average size (in bytes) of the transition state data for moving-aggregate mode, or zero to use a default estimate",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "agginitval",
              "type": "text",
              "comment": {
                "text": "The initial value of the transition state. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "aggminitval",
              "type": "text",
              "comment": {
                "text": "The initial value of the transition state for moving-aggregate mode. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_aggregate stores information about aggregate functions. An aggregate function is a function that operates on a set of values (typically one column from each row that matches a query condition) and returns a single value computed from all these values. Typical aggregate functions are sum, count, and max. Each entry in pg_aggregate is an extension of an entry in pg_proc. The pg_proc entry carries the aggregate's name, input and output data types, and other information that is similar to ordinary functions.\\nhttps://www.postgresql.org/docs/current/catalog-pg-aggregate.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_am",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amname",
              "type": "name",
              "comment": {
                "text": "Name of the access method",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amhandler",
              "type": "regproc",
              "comment": {
                "text": "OID of a handler function that is responsible for supplying information about the access method",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amtype",
              "type": "char",
              "comment": {
                "text": "t = table (including materialized views), i = index.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_am stores information about relation access methods. There is one row for each access method supported by the system. Currently, only tables and indexes have access methods. The requirements for table and index access methods are discussed in detail in Chapter 61 and Chapter 62 respectively.\\nhttps://www.postgresql.org/docs/current/catalog-pg-am.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_amop",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amopfamily",
              "type": "oid",
              "comment": {
                "text": "The operator family this entry is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amoplefttype",
              "type": "oid",
              "comment": {
                "text": "Left-hand input data type of operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amoprighttype",
              "type": "oid",
              "comment": {
                "text": "Right-hand input data type of operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amopstrategy",
              "type": "int2",
              "comment": {
                "text": "Operator strategy number",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amoppurpose",
              "type": "char",
              "comment": {
                "text": "Operator purpose, either s for search or o for ordering",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amopopr",
              "type": "oid",
              "comment": {
                "text": "OID of the operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amopmethod",
              "type": "oid",
              "comment": {
                "text": "Index access method operator family is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amopsortfamily",
              "type": "oid",
              "comment": {
                "text": "The B-tree operator family this entry sorts according to, if an ordering operator; zero if a search operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_amop stores information about operators associated with access method operator families. There is one row for each operator that is a member of an operator family. A family member can be either a search operator or an ordering operator. An operator can appear in more than one family, but cannot appear in more than one search position nor more than one ordering position within a family. (It is allowed, though unlikely, for an operator to be used for both search and ordering purposes.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-amop.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_amproc",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amprocfamily",
              "type": "oid",
              "comment": {
                "text": "The operator family this entry is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amproclefttype",
              "type": "oid",
              "comment": {
                "text": "Left-hand input data type of associated operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amprocrighttype",
              "type": "oid",
              "comment": {
                "text": "Right-hand input data type of associated operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amprocnum",
              "type": "int2",
              "comment": {
                "text": "Support function number",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "amproc",
              "type": "regproc",
              "comment": {
                "text": "OID of the function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_amproc stores information about support functions associated with access method operator families. There is one row for each support function belonging to an operator family.\\nhttps://www.postgresql.org/docs/current/catalog-pg-amproc.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_attrdef",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "adrelid",
              "type": "oid",
              "comment": {
                "text": "The table this column belongs to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "adnum",
              "type": "int2",
              "comment": {
                "text": "The number of the column",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "adbin",
              "type": "pg_node_tree",
              "comment": {
                "text": "The column default value, in nodeToString() representation. Use pg_get_expr(adbin, adrelid) to convert it to an SQL expression.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_attrdef stores column default values. The main information about columns is stored in pg_attribute. Only columns for which a default value has been explicitly set will have an entry here.\\nhttps://www.postgresql.org/docs/current/catalog-pg-attrdef.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_attribute",
          "columns": [
            {
              "name": "attrelid",
              "type": "oid",
              "comment": {
                "text": "The table this column belongs to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attname",
              "type": "name",
              "comment": {
                "text": "The column name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "atttypid",
              "type": "oid",
              "comment": {
                "text": "The data type of this column (zero for a dropped column)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attstattarget",
              "type": "int4",
              "comment": {
                "text": "attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is data type-dependent. For scalar data types, attstattarget is both the target number of “most common values” to collect, and the target number of histogram bins to create.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attlen",
              "type": "int2",
              "comment": {
                "text": "A copy of pg_type.typlen of this column's type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attnum",
              "type": "int2",
              "comment": {
                "text": "The number of the column. Ordinary columns are numbered from 1 up. System columns, such as ctid, have (arbitrary) negative numbers.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attndims",
              "type": "int4",
              "comment": {
                "text": "Number of dimensions, if the column is an array type; otherwise 0. (Presently, the number of dimensions of an array is not enforced, so any nonzero value effectively means “it's an array”.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attcacheoff",
              "type": "int4",
              "comment": {
                "text": "Always -1 in storage, but when loaded into a row descriptor in memory this might be updated to cache the offset of the attribute within the row",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "atttypmod",
              "type": "int4",
              "comment": {
                "text": "atttypmod records type-specific data supplied at table creation time (for example, the maximum length of a varchar column). It is passed to type-specific input functions and length coercion functions. The value will generally be -1 for types that do not need atttypmod.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attbyval",
              "type": "bool",
              "comment": {
                "text": "A copy of pg_type.typbyval of this column's type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attalign",
              "type": "char",
              "comment": {
                "text": "A copy of pg_type.typalign of this column's type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attstorage",
              "type": "char",
              "comment": {
                "text": "Normally a copy of pg_type.typstorage of this column's type. For TOAST-able data types, this can be altered after column creation to control storage policy.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attcompression",
              "type": "char",
              "comment": {
                "text": "The current compression method of the column. Typically this is '\\0' to specify use of the current default setting (see default_toast_compression). Otherwise, 'p' selects pglz compression, while 'l' selects LZ4 compression. However, this field is ignored whenever attstorage does not allow compression.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attnotnull",
              "type": "bool",
              "comment": {
                "text": "This represents a not-null constraint.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "atthasdef",
              "type": "bool",
              "comment": {
                "text": "This column has a default expression or generation expression, in which case there will be a corresponding entry in the pg_attrdef catalog that actually defines the expression. (Check attgenerated to determine whether this is a default or a generation expression.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "atthasmissing",
              "type": "bool",
              "comment": {
                "text": "This column has a value which is used where the column is entirely missing from the row, as happens when a column is added with a non-volatile DEFAULT value after the row is created. The actual value used is stored in the attmissingval column.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attidentity",
              "type": "char",
              "comment": {
                "text": "If a zero byte (''), then not an identity column. Otherwise, a = generated always, d = generated by default.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attgenerated",
              "type": "char",
              "comment": {
                "text": "If a zero byte (''), then not a generated column. Otherwise, s = stored. (Other values might be added in the future.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attisdropped",
              "type": "bool",
              "comment": {
                "text": "This column has been dropped and is no longer valid. A dropped column is still physically present in the table, but is ignored by the parser and so cannot be accessed via SQL.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attislocal",
              "type": "bool",
              "comment": {
                "text": "This column is defined locally in the relation. Note that a column can be locally defined and inherited simultaneously.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attinhcount",
              "type": "int4",
              "comment": {
                "text": "The number of direct ancestors this column has. A column with a nonzero number of ancestors cannot be dropped nor renamed.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attcollation",
              "type": "oid",
              "comment": {
                "text": "The defined collation of the column, or zero if the column is not of a collatable data type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Column-level access privileges, if any have been granted specifically on this column",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attoptions",
              "type": "text[]",
              "comment": {
                "text": "Attribute-level options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attfdwoptions",
              "type": "text[]",
              "comment": {
                "text": "Attribute-level foreign data wrapper options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attmissingval",
              "type": "anyarray",
              "comment": {
                "text": "This column has a one element array containing the value used when the column is entirely missing from the row, as happens when the column is added with a non-volatile DEFAULT value after the row is created. The value is only used when atthasmissing is true. If there is no value the column is null.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_attribute stores information about table columns. There will be exactly one pg_attribute row for every column in every table in the database. (There will also be attribute entries for indexes, and indeed all objects that have pg_class entries.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-attribute.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_auth_members",
          "columns": [
            {
              "name": "roleid",
              "type": "oid",
              "comment": {
                "text": "ID of a role that has a member",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "member",
              "type": "oid",
              "comment": {
                "text": "ID of a role that is a member of roleid",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "grantor",
              "type": "oid",
              "comment": {
                "text": "ID of the role that granted this membership",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "admin_option",
              "type": "bool",
              "comment": {
                "text": "True if member can grant membership in roleid to others",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_auth_members shows the membership relations between roles. Any non-circular set of relationships is allowed.\\nhttps://www.postgresql.org/docs/current/catalog-pg-auth-members.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_authid",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolname",
              "type": "name",
              "comment": {
                "text": "Role name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolsuper",
              "type": "bool",
              "comment": {
                "text": "Role has superuser privileges",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolinherit",
              "type": "bool",
              "comment": {
                "text": "Role automatically inherits privileges of roles it is a member of",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcreaterole",
              "type": "bool",
              "comment": {
                "text": "Role can create more roles",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcreatedb",
              "type": "bool",
              "comment": {
                "text": "Role can create databases",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcanlogin",
              "type": "bool",
              "comment": {
                "text": "Role can log in. That is, this role can be given as the initial session authorization identifier.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolreplication",
              "type": "bool",
              "comment": {
                "text": "Role is a replication role. A replication role can initiate replication connections and create and drop replication slots.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolbypassrls",
              "type": "bool",
              "comment": {
                "text": "Role bypasses every row-level security policy, see Section 5.8 for more information.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolconnlimit",
              "type": "int4",
              "comment": {
                "text": "For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolpassword",
              "type": "text",
              "comment": {
                "text": "Password (possibly encrypted); null if none. The format depends on the form of encryption used.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolvaliduntil",
              "type": "timestamptz",
              "comment": {
                "text": "Password expiry time (only used for password authentication); null if no expiration",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_authid contains information about database authorization identifiers (roles). A role subsumes the concepts of “users” and “groups”. A user is essentially just a role with the rolcanlogin flag set. Any role (with or without rolcanlogin) can have other roles as members; see pg_auth_members.\\nhttps://www.postgresql.org/docs/current/catalog-pg-authid.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_available_extension_versions",
          "columns": [
            {
              "name": "name",
              "type": "name",
              "comment": {
                "text": "Extension name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "version",
              "type": "text",
              "comment": {
                "text": "Version name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "installed",
              "type": "bool",
              "comment": {
                "text": "True if this version of this extension is currently installed",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "superuser",
              "type": "bool",
              "comment": {
                "text": "True if only superusers are allowed to install this extension (but see trusted)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "trusted",
              "type": "bool",
              "comment": {
                "text": "True if the extension can be installed by non-superusers with appropriate privileges",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relocatable",
              "type": "bool",
              "comment": {
                "text": "True if extension can be relocated to another schema",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "schema",
              "type": "name",
              "comment": {
                "text": "Name of the schema that the extension must be installed into, or NULL if partially or fully relocatable",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "requires",
              "type": "name[]",
              "comment": {
                "text": "Names of prerequisite extensions, or NULL if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "comment",
              "type": "text",
              "comment": {
                "text": "Comment string from the extension's control file",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_available_extension_versions view lists the specific extension versions that are available for installation. See also the pg_extension catalog, which shows the extensions currently installed.\\nhttps://www.postgresql.org/docs/current/view-pg-available-extension-versions.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_available_extensions",
          "columns": [
            {
              "name": "name",
              "type": "name",
              "comment": {
                "text": "Extension name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "default_version",
              "type": "text",
              "comment": {
                "text": "Name of default version, or NULL if none is specified",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "installed_version",
              "type": "text",
              "comment": {
                "text": "Currently installed version of the extension, or NULL if not installed",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "comment",
              "type": "text",
              "comment": {
                "text": "Comment string from the extension's control file",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_available_extensions view lists the extensions that are available for installation. See also the pg_extension catalog, which shows the extensions currently installed.\\nhttps://www.postgresql.org/docs/current/view-pg-available-extensions.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_backend_memory_contexts",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "Name of the memory context",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ident",
              "type": "text",
              "comment": {
                "text": "Identification information of the memory context. This field is truncated at 1024 bytes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "parent",
              "type": "text",
              "comment": {
                "text": "Name of the parent of this memory context",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "level",
              "type": "int4",
              "comment": {
                "text": "Distance from TopMemoryContext in context tree",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "total_bytes",
              "type": "int8",
              "comment": {
                "text": "Total bytes allocated for this memory context",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "total_nblocks",
              "type": "int8",
              "comment": {
                "text": "Total number of blocks allocated for this memory context",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "free_bytes",
              "type": "int8",
              "comment": {
                "text": "Free space in bytes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "free_chunks",
              "type": "int8",
              "comment": {
                "text": "Total number of free chunks",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "used_bytes",
              "type": "int8",
              "comment": {
                "text": "Used space in bytes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_backend_memory_contexts displays all the memory contexts of the server process attached to the current session.\\nhttps://www.postgresql.org/docs/current/view-pg-backend-memory-contexts.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_cast",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "castsource",
              "type": "oid",
              "comment": {
                "text": "OID of the source data type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "casttarget",
              "type": "oid",
              "comment": {
                "text": "OID of the target data type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "castfunc",
              "type": "oid",
              "comment": {
                "text": "The OID of the function to use to perform this cast. Zero is stored if the cast method doesn't require a function.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "castcontext",
              "type": "char",
              "comment": {
                "text": "Indicates what contexts the cast can be invoked in. e means only as an explicit cast (using CAST or :: syntax). a means implicitly in assignment to a target column, as well as explicitly. i means implicitly in expressions, as well as the other cases.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "castmethod",
              "type": "char",
              "comment": {
                "text": "Indicates how the cast is performed. f means that the function specified in the castfunc field is used. i means that the input/output functions are used. b means that the types are binary-coercible, thus no conversion is required.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_cast stores data type conversion paths, both built-in and user-defined.\\nhttps://www.postgresql.org/docs/current/catalog-pg-cast.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_class",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relname",
              "type": "name",
              "comment": {
                "text": "Name of the table, index, view, etc.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reltype",
              "type": "oid",
              "comment": {
                "text": "The OID of the data type that corresponds to this table's row type, if any; zero for indexes, sequences, and toast tables, which have no pg_type entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reloftype",
              "type": "oid",
              "comment": {
                "text": "For typed tables, the OID of the underlying composite type; zero for all other relations",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relam",
              "type": "oid",
              "comment": {
                "text": "If this is a table or an index, the access method used (heap, B-tree, hash, etc.); otherwise zero (zero occurs for sequences, as well as relations without storage, such as views)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relfilenode",
              "type": "oid",
              "comment": {
                "text": "Name of the on-disk file of this relation; zero means this is a “mapped” relation whose disk file name is determined by low-level state",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reltablespace",
              "type": "oid",
              "comment": {
                "text": "The tablespace in which this relation is stored. If zero, the database's default tablespace is implied. (Not meaningful if the relation has no on-disk file.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relpages",
              "type": "int4",
              "comment": {
                "text": "Size of the on-disk representation of this table in pages (of size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reltuples",
              "type": "float4",
              "comment": {
                "text": "Number of live rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX. If the table has never yet been vacuumed or analyzed, reltuples contains -1 indicating that the row count is unknown.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relallvisible",
              "type": "int4",
              "comment": {
                "text": "Number of pages that are marked all-visible in the table's visibility map. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reltoastrelid",
              "type": "oid",
              "comment": {
                "text": "OID of the TOAST table associated with this table, zero if none. The TOAST table stores large attributes “out of line” in a secondary table.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relhasindex",
              "type": "bool",
              "comment": {
                "text": "True if this is a table and it has (or recently had) any indexes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relisshared",
              "type": "bool",
              "comment": {
                "text": "True if this table is shared across all databases in the cluster. Only certain system catalogs (such as pg_database) are shared.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relpersistence",
              "type": "char",
              "comment": {
                "text": "p = permanent table, u = unlogged table, t = temporary table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relkind",
              "type": "char",
              "comment": {
                "text": "r = ordinary table, i = index, S = sequence, t = TOAST table, v = view, m = materialized view, c = composite type, f = foreign table, p = partitioned table, I = partitioned index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relnatts",
              "type": "int2",
              "comment": {
                "text": "Number of user columns in the relation (system columns not counted). There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relchecks",
              "type": "int2",
              "comment": {
                "text": "Number of CHECK constraints on the table; see pg_constraint catalog",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relhasrules",
              "type": "bool",
              "comment": {
                "text": "True if table has (or once had) rules; see pg_rewrite catalog",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relhastriggers",
              "type": "bool",
              "comment": {
                "text": "True if table has (or once had) triggers; see pg_trigger catalog",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relhassubclass",
              "type": "bool",
              "comment": {
                "text": "True if table or index has (or once had) any inheritance children",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relrowsecurity",
              "type": "bool",
              "comment": {
                "text": "True if table has row-level security enabled; see pg_policy catalog",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relforcerowsecurity",
              "type": "bool",
              "comment": {
                "text": "True if row-level security (when enabled) will also apply to table owner; see pg_policy catalog",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relispopulated",
              "type": "bool",
              "comment": {
                "text": "True if relation is populated (this is true for all relations other than some materialized views)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relreplident",
              "type": "char",
              "comment": {
                "text": "Columns used to form “replica identity” for rows: d = default (primary key, if any), n = nothing, f = all columns, i = index with indisreplident set (same as nothing if the index used has been dropped)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relispartition",
              "type": "bool",
              "comment": {
                "text": "True if table or index is a partition",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relrewrite",
              "type": "oid",
              "comment": {
                "text": "For new relations being written during a DDL operation that requires a table rewrite, this contains the OID of the original relation; otherwise zero. That state is only visible internally; this field should never contain anything other than zero for a user-visible relation.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relfrozenxid",
              "type": "xid",
              "comment": {
                "text": "All transaction IDs before this one have been replaced with a permanent (“frozen”) transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. Zero (InvalidTransactionId) if the relation is not a table.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relminmxid",
              "type": "xid",
              "comment": {
                "text": "All multixact IDs before this one have been replaced by a transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. Zero (InvalidMultiXactId) if the relation is not a table.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reloptions",
              "type": "text[]",
              "comment": {
                "text": "Access-method-specific options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relpartbound",
              "type": "pg_node_tree",
              "comment": {
                "text": "If table is a partition (see relispartition), internal representation of the partition bound",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_class catalogs tables and most everything else that has columns or is otherwise similar to a table. This includes indexes (but see also pg_index), sequences (but see also pg_sequence), views, materialized views, composite types, and TOAST tables; see relkind. Below, when we mean all of these kinds of objects we speak of “relations”. Not all columns are meaningful for all relation types.\\nhttps://www.postgresql.org/docs/current/catalog-pg-class.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_collation",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collname",
              "type": "name",
              "comment": {
                "text": "Collation name (unique per namespace and encoding)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this collation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the collation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collprovider",
              "type": "char",
              "comment": {
                "text": "Provider of the collation: d = database default, c = libc, i = icu",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collisdeterministic",
              "type": "bool",
              "comment": {
                "text": "Is the collation deterministic?",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collencoding",
              "type": "int4",
              "comment": {
                "text": "Encoding in which the collation is applicable, or -1 if it works for any encoding",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collcollate",
              "type": "name",
              "comment": {
                "text": "LC_COLLATE for this collation object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collctype",
              "type": "name",
              "comment": {
                "text": "LC_CTYPE for this collation object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "collversion",
              "type": "text",
              "comment": {
                "text": "Provider-specific version of the collation. This is recorded when the collation is created and then checked when it is used, to detect changes in the collation definition that could lead to data corruption.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_collation describes the available collations, which are essentially mappings from an SQL name to operating system locale categories. See Section 24.2 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-collation.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_config",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "The parameter name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "setting",
              "type": "text",
              "comment": {
                "text": "The parameter value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_config describes the compile-time configuration parameters of the currently installed version of PostgreSQL. It is intended, for example, to be used by software packages that want to interface to PostgreSQL to facilitate finding the required header files and libraries. It provides the same basic information as the pg_config PostgreSQL client application.\\nhttps://www.postgresql.org/docs/current/view-pg-config.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_constraint",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conname",
              "type": "name",
              "comment": {
                "text": "Constraint name (not necessarily unique!)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "connamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this constraint",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "contype",
              "type": "char",
              "comment": {
                "text": "c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint, t = constraint trigger, x = exclusion constraint",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "condeferrable",
              "type": "bool",
              "comment": {
                "text": "Is the constraint deferrable?",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "condeferred",
              "type": "bool",
              "comment": {
                "text": "Is the constraint deferred by default?",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "convalidated",
              "type": "bool",
              "comment": {
                "text": "Has the constraint been validated? Currently, can be false only for foreign keys and CHECK constraints",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conrelid",
              "type": "oid",
              "comment": {
                "text": "The table this constraint is on; zero if not a table constraint",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "contypid",
              "type": "oid",
              "comment": {
                "text": "The domain this constraint is on; zero if not a domain constraint",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conindid",
              "type": "oid",
              "comment": {
                "text": "The index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else zero",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conparentid",
              "type": "oid",
              "comment": {
                "text": "The corresponding constraint of the parent partitioned table, if this is a constraint on a partition; else zero",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confrelid",
              "type": "oid",
              "comment": {
                "text": "If a foreign key, the referenced table; else zero",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confupdtype",
              "type": "char",
              "comment": {
                "text": "Foreign key update action code: a = no action, r = restrict, c = cascade, n = set null, d = set default",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confdeltype",
              "type": "char",
              "comment": {
                "text": "Foreign key deletion action code: a = no action, r = restrict, c = cascade, n = set null, d = set default",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confmatchtype",
              "type": "char",
              "comment": {
                "text": "Foreign key match type: f = full, p = partial, s = simple",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conislocal",
              "type": "bool",
              "comment": {
                "text": "This constraint is defined locally for the relation. Note that a constraint can be locally defined and inherited simultaneously.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "coninhcount",
              "type": "int4",
              "comment": {
                "text": "The number of direct inheritance ancestors this constraint has. A constraint with a nonzero number of ancestors cannot be dropped nor renamed.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "connoinherit",
              "type": "bool",
              "comment": {
                "text": "This constraint is defined locally for the relation. It is a non-inheritable constraint.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conkey",
              "type": "int2[]",
              "comment": {
                "text": "If a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confkey",
              "type": "int2[]",
              "comment": {
                "text": "If a foreign key, list of the referenced columns",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conpfeqop",
              "type": "oid[]",
              "comment": {
                "text": "If a foreign key, list of the equality operators for PK = FK comparisons",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conppeqop",
              "type": "oid[]",
              "comment": {
                "text": "If a foreign key, list of the equality operators for PK = PK comparisons",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conffeqop",
              "type": "oid[]",
              "comment": {
                "text": "If a foreign key, list of the equality operators for FK = FK comparisons",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conexclop",
              "type": "oid[]",
              "comment": {
                "text": "If an exclusion constraint, list of the per-column exclusion operators",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conbin",
              "type": "pg_node_tree",
              "comment": {
                "text": "If a check constraint, an internal representation of the expression. (It's recommended to use pg_get_constraintdef() to extract the definition of a check constraint.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_constraint stores check, primary key, unique, foreign key, and exclusion constraints on tables. (Column constraints are not treated specially. Every column constraint is equivalent to some table constraint.) Not-null constraints are represented in the pg_attribute catalog, not here.\\nhttps://www.postgresql.org/docs/current/catalog-pg-constraint.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_conversion",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conname",
              "type": "name",
              "comment": {
                "text": "Conversion name (unique within a namespace)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "connamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this conversion",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the conversion",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conforencoding",
              "type": "int4",
              "comment": {
                "text": "Source encoding ID",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "contoencoding",
              "type": "int4",
              "comment": {
                "text": "Destination encoding ID",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "conproc",
              "type": "regproc",
              "comment": {
                "text": "Conversion function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "condefault",
              "type": "bool",
              "comment": {
                "text": "True if this is the default conversion",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_conversion describes encoding conversion functions. See CREATE CONVERSION for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-conversion.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_cursors",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "The name of the cursor",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statement",
              "type": "text",
              "comment": {
                "text": "The verbatim query string submitted to declare this cursor",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_holdable",
              "type": "bool",
              "comment": {
                "text": "true if the cursor is holdable (that is, it can be accessed after the transaction that declared the cursor has committed); false otherwise",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_binary",
              "type": "bool",
              "comment": {
                "text": "true if the cursor was declared BINARY; false otherwise",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_scrollable",
              "type": "bool",
              "comment": {
                "text": "true if the cursor is scrollable (that is, it allows rows to be retrieved in a nonsequential manner); false otherwise",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "creation_time",
              "type": "timestamptz",
              "comment": {
                "text": "The time at which the cursor was declared",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_cursors view lists the cursors that are currently available. Cursors can be defined in several ways:\\nhttps://www.postgresql.org/docs/current/view-pg-cursors.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_database",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datname",
              "type": "name",
              "comment": {
                "text": "Database name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datdba",
              "type": "oid",
              "comment": {
                "text": "Owner of the database, usually the user who created it",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "encoding",
              "type": "int4",
              "comment": {
                "text": "Character encoding for this database (pg_encoding_to_char() can translate this number to the encoding name)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datcollate",
              "type": "name",
              "comment": {
                "text": "LC_COLLATE for this database",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datctype",
              "type": "name",
              "comment": {
                "text": "LC_CTYPE for this database",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datistemplate",
              "type": "bool",
              "comment": {
                "text": "If true, then this database can be cloned by any user with CREATEDB privileges; if false, then only superusers or the owner of the database can clone it.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datallowconn",
              "type": "bool",
              "comment": {
                "text": "If false then no one can connect to this database. This is used to protect the template0 database from being altered.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datconnlimit",
              "type": "int4",
              "comment": {
                "text": "Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datlastsysoid",
              "type": "oid",
              "comment": {
                "text": "Last system OID in the database; useful particularly to pg_dump",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datfrozenxid",
              "type": "xid",
              "comment": {
                "text": "All transaction IDs before this one have been replaced with a permanent (“frozen”) transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datminmxid",
              "type": "xid",
              "comment": {
                "text": "All multixact IDs before this one have been replaced with a transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. It is the minimum of the per-table pg_class.relminmxid values.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dattablespace",
              "type": "oid",
              "comment": {
                "text": "The default tablespace for the database. Within this database, all tables for which pg_class.reltablespace is zero will be stored in this tablespace; in particular, all the non-shared system catalogs will be there.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_database stores information about the available databases. Databases are created with the CREATE DATABASE command. Consult Chapter 23 for details about the meaning of some of the parameters.\\nhttps://www.postgresql.org/docs/current/catalog-pg-database.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_db_role_setting",
          "columns": [
            {
              "name": "setdatabase",
              "type": "oid",
              "comment": {
                "text": "The OID of the database the setting is applicable to, or zero if not database-specific",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "setrole",
              "type": "oid",
              "comment": {
                "text": "The OID of the role the setting is applicable to, or zero if not role-specific",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "setconfig",
              "type": "text[]",
              "comment": {
                "text": "Defaults for run-time configuration variables",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_db_role_setting records the default values that have been set for run-time configuration variables, for each role and database combination.\\nhttps://www.postgresql.org/docs/current/catalog-pg-db-role-setting.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_default_acl",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "defaclrole",
              "type": "oid",
              "comment": {
                "text": "The OID of the role associated with this entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "defaclnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace associated with this entry, or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "defaclobjtype",
              "type": "char",
              "comment": {
                "text": "Type of object this entry is for: r = relation (table, view), S = sequence, f = function, T = type, n = schema",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "defaclacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges that this type of object should have on creation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_default_acl stores initial privileges to be assigned to newly created objects.\\nhttps://www.postgresql.org/docs/current/catalog-pg-default-acl.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_depend",
          "columns": [
            {
              "name": "classid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog the dependent object is in, or zero for a DEPENDENCY_PIN entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objid",
              "type": "oid",
              "comment": {
                "text": "The OID of the specific dependent object, or zero for a DEPENDENCY_PIN entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "refclassid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog the referenced object is in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "refobjid",
              "type": "oid",
              "comment": {
                "text": "The OID of the specific referenced object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "refobjsubid",
              "type": "int4",
              "comment": {
                "text": "For a table column, this is the column number (the refobjid and refclassid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "deptype",
              "type": "char",
              "comment": {
                "text": "A code defining the specific semantics of this dependency relationship; see text",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_depend records the dependency relationships between database objects. This information allows DROP commands to find which other objects must be dropped by DROP CASCADE or prevent dropping in the DROP RESTRICT case.\\nhttps://www.postgresql.org/docs/current/catalog-pg-depend.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_description",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the object this description pertains to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog this object appears in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a comment on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "description",
              "type": "text",
              "comment": {
                "text": "Arbitrary text that serves as the description of this object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_description stores optional descriptions (comments) for each database object. Descriptions can be manipulated with the COMMENT command and viewed with psql's \\d commands. Descriptions of many built-in system objects are provided in the initial contents of pg_description.\\nhttps://www.postgresql.org/docs/current/catalog-pg-description.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_enum",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "enumtypid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_type entry owning this enum value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "enumsortorder",
              "type": "float4",
              "comment": {
                "text": "The sort position of this enum value within its enum type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "enumlabel",
              "type": "name",
              "comment": {
                "text": "The textual label for this enum value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_enum catalog contains entries showing the values and labels for each enum type. The internal representation of a given enum value is actually the OID of its associated row in pg_enum.\\nhttps://www.postgresql.org/docs/current/catalog-pg-enum.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_event_trigger",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evtname",
              "type": "name",
              "comment": {
                "text": "Trigger name (must be unique)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evtevent",
              "type": "name",
              "comment": {
                "text": "Identifies the event for which this trigger fires",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evtowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the event trigger",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evtfoid",
              "type": "oid",
              "comment": {
                "text": "The function to be called",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evtenabled",
              "type": "char",
              "comment": {
                "text": "Controls in which session_replication_role modes the event trigger fires. O = trigger fires in “origin” and “local” modes, D = trigger is disabled, R = trigger fires in “replica” mode, A = trigger fires always.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "evttags",
              "type": "text[]",
              "comment": {
                "text": "Command tags for which this trigger will fire. If NULL, the firing of this trigger is not restricted on the basis of the command tag.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_event_trigger stores event triggers. See Chapter 40 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-event-trigger.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_extension",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extname",
              "type": "name",
              "comment": {
                "text": "Name of the extension",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the extension",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extnamespace",
              "type": "oid",
              "comment": {
                "text": "Schema containing the extension's exported objects",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extrelocatable",
              "type": "bool",
              "comment": {
                "text": "True if extension can be relocated to another schema",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extversion",
              "type": "text",
              "comment": {
                "text": "Version name for the extension",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extconfig",
              "type": "oid[]",
              "comment": {
                "text": "Array of regclass OIDs for the extension's configuration table(s), or NULL if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extcondition",
              "type": "text[]",
              "comment": {
                "text": "Array of WHERE-clause filter conditions for the extension's configuration table(s), or NULL if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_extension stores information about the installed extensions. See Section 38.17 for details about extensions.\\nhttps://www.postgresql.org/docs/current/catalog-pg-extension.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_file_settings",
          "columns": [
            {
              "name": "sourcefile",
              "type": "text",
              "comment": {
                "text": "Full path name of the configuration file",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "sourceline",
              "type": "int4",
              "comment": {
                "text": "Line number within the configuration file where the entry appears",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqno",
              "type": "int4",
              "comment": {
                "text": "Order in which the entries are processed (1..n)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "Configuration parameter name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "setting",
              "type": "text",
              "comment": {
                "text": "Value to be assigned to the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "applied",
              "type": "bool",
              "comment": {
                "text": "True if the value can be applied successfully",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "error",
              "type": "text",
              "comment": {
                "text": "If not null, an error message indicating why this entry could not be applied",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_file_settings provides a summary of the contents of the server's configuration file(s). A row appears in this view for each “name = value” entry appearing in the files, with annotations indicating whether the value could be applied successfully. Additional row(s) may appear for problems not linked to a “name = value” entry, such as syntax errors in the files.\\nhttps://www.postgresql.org/docs/current/view-pg-file-settings.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_data_wrapper",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwname",
              "type": "name",
              "comment": {
                "text": "Name of the foreign-data wrapper",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the foreign-data wrapper",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwhandler",
              "type": "oid",
              "comment": {
                "text": "References a handler function that is responsible for supplying execution routines for the foreign-data wrapper. Zero if no handler is provided",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwvalidator",
              "type": "oid",
              "comment": {
                "text": "References a validator function that is responsible for checking the validity of the options given to the foreign-data wrapper, as well as options for foreign servers and user mappings using the foreign-data wrapper. Zero if no validator is provided",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fdwoptions",
              "type": "text[]",
              "comment": {
                "text": "Foreign-data wrapper specific options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_foreign_data_wrapper stores foreign-data wrapper definitions. A foreign-data wrapper is the mechanism by which external data, residing on foreign servers, is accessed.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-data-wrapper.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_server",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvname",
              "type": "name",
              "comment": {
                "text": "Name of the foreign server",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the foreign server",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvfdw",
              "type": "oid",
              "comment": {
                "text": "OID of the foreign-data wrapper of this foreign server",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvtype",
              "type": "text",
              "comment": {
                "text": "Type of the server (optional)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvversion",
              "type": "text",
              "comment": {
                "text": "Version of the server (optional)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvoptions",
              "type": "text[]",
              "comment": {
                "text": "Foreign server specific options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_foreign_server stores foreign server definitions. A foreign server describes a source of external data, such as a remote server. Foreign servers are accessed via foreign-data wrappers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-server.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_foreign_table",
          "columns": [
            {
              "name": "ftrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for this foreign table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ftserver",
              "type": "oid",
              "comment": {
                "text": "OID of the foreign server for this foreign table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ftoptions",
              "type": "text[]",
              "comment": {
                "text": "Foreign table options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_foreign_table contains auxiliary information about foreign tables. A foreign table is primarily represented by a pg_class entry, just like a regular table. Its pg_foreign_table entry contains the information that is pertinent only to foreign tables and not any other kind of relation.\\nhttps://www.postgresql.org/docs/current/catalog-pg-foreign-table.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_group",
          "columns": [
            {
              "name": "groname",
              "type": "name",
              "comment": {
                "text": "Name of the group",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "grosysid",
              "type": "oid",
              "comment": {
                "text": "ID of this group",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "grolist",
              "type": "oid[]",
              "comment": {
                "text": "An array containing the IDs of the roles in this group",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_group exists for backwards compatibility: it emulates a catalog that existed in PostgreSQL before version 8.1. It shows the names and members of all roles that are marked as not rolcanlogin, which is an approximation to the set of roles that are being used as groups.\\nhttps://www.postgresql.org/docs/current/view-pg-group.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_hba_file_rules",
          "columns": [
            {
              "name": "line_number",
              "type": "int4",
              "comment": {
                "text": "Line number of this rule in pg_hba.conf",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "type",
              "type": "text",
              "comment": {
                "text": "Type of connection",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "database",
              "type": "text[]",
              "comment": {
                "text": "List of database name(s) to which this rule applies",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "user_name",
              "type": "text[]",
              "comment": {
                "text": "List of user and group name(s) to which this rule applies",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "address",
              "type": "text",
              "comment": {
                "text": "Host name or IP address, or one of all, samehost, or samenet, or null for local connections",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "netmask",
              "type": "text",
              "comment": {
                "text": "IP address mask, or null if not applicable",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "auth_method",
              "type": "text",
              "comment": {
                "text": "Authentication method",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "options",
              "type": "text[]",
              "comment": {
                "text": "Options specified for authentication method, if any",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "error",
              "type": "text",
              "comment": {
                "text": "If not null, an error message indicating why this line could not be processed",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_hba_file_rules provides a summary of the contents of the client authentication configuration file, pg_hba.conf. A row appears in this view for each non-empty, non-comment line in the file, with annotations indicating whether the rule could be applied successfully.\\nhttps://www.postgresql.org/docs/current/view-pg-hba-file-rules.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_index",
          "columns": [
            {
              "name": "indexrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for this index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for the table this index is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indnatts",
              "type": "int2",
              "comment": {
                "text": "The total number of columns in the index (duplicates pg_class.relnatts); this number includes both key and included attributes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indnkeyatts",
              "type": "int2",
              "comment": {
                "text": "The number of key columns in the index, not counting any included columns, which are merely stored and do not participate in the index semantics",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisunique",
              "type": "bool",
              "comment": {
                "text": "If true, this is a unique index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisprimary",
              "type": "bool",
              "comment": {
                "text": "If true, this index represents the primary key of the table (indisunique should always be true when this is true)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisexclusion",
              "type": "bool",
              "comment": {
                "text": "If true, this index supports an exclusion constraint",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indimmediate",
              "type": "bool",
              "comment": {
                "text": "If true, the uniqueness check is enforced immediately on insertion (irrelevant if indisunique is not true)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisclustered",
              "type": "bool",
              "comment": {
                "text": "If true, the table was last clustered on this index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisvalid",
              "type": "bool",
              "comment": {
                "text": "If true, the index is currently valid for queries. False means the index is possibly incomplete: it must still be modified by INSERT/UPDATE operations, but it cannot safely be used for queries. If it is unique, the uniqueness property is not guaranteed true either.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indcheckxmin",
              "type": "bool",
              "comment": {
                "text": "If true, queries must not use the index until the xmin of this pg_index row is below their TransactionXmin event horizon, because the table may contain broken HOT chains with incompatible rows that they can see",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisready",
              "type": "bool",
              "comment": {
                "text": "If true, the index is currently ready for inserts. False means the index must be ignored by INSERT/UPDATE operations.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indislive",
              "type": "bool",
              "comment": {
                "text": "If false, the index is in process of being dropped, and should be ignored for all purposes (including HOT-safety decisions)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indisreplident",
              "type": "bool",
              "comment": {
                "text": "If true this index has been chosen as “replica identity” using ALTER TABLE ... REPLICA IDENTITY USING INDEX ...",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indkey",
              "type": "int2vector",
              "comment": {
                "text": "This is an array of indnatts values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index entries. Key columns come before non-key (included) columns. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indcollation",
              "type": "oidvector",
              "comment": {
                "text": "For each column in the index key (indnkeyatts values), this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indclass",
              "type": "oidvector",
              "comment": {
                "text": "For each column in the index key (indnkeyatts values), this contains the OID of the operator class to use. See pg_opclass for details.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indoption",
              "type": "int2vector",
              "comment": {
                "text": "This is an array of indnkeyatts values that store per-column flag bits. The meaning of the bits is defined by the index's access method.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indexprs",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression trees (in nodeToString() representation) for index attributes that are not simple column references. This is a list with one element for each zero entry in indkey. Null if all index attributes are simple references.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indpred",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression tree (in nodeToString() representation) for partial index predicate. Null if not a partial index.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_index contains part of the information about indexes. The rest is mostly in pg_class.\\nhttps://www.postgresql.org/docs/current/catalog-pg-index.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_indexes",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table and index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table the index is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indexname",
              "type": "name",
              "comment": {
                "text": "Name of index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "name",
              "comment": {
                "text": "Name of tablespace containing index (null if default for database)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "indexdef",
              "type": "text",
              "comment": {
                "text": "Index definition (a reconstructed CREATE INDEX command)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_indexes provides access to useful information about each index in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-indexes.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_inherits",
          "columns": [
            {
              "name": "inhrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the child table or index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "inhparent",
              "type": "oid",
              "comment": {
                "text": "The OID of the parent table or index",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "inhseqno",
              "type": "int4",
              "comment": {
                "text": "If there is more than one direct parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "inhdetachpending",
              "type": "bool",
              "comment": {
                "text": "true for a partition that is in the process of being detached; false otherwise.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_inherits records information about table and index inheritance hierarchies. There is one entry for each direct parent-child table or index relationship in the database. (Indirect inheritance can be determined by following chains of entries.)\\nhttps://www.postgresql.org/docs/current/catalog-pg-inherits.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_init_privs",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the specific object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog the object is in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "privtype",
              "type": "char",
              "comment": {
                "text": "A code defining the type of initial privilege of this object; see text",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "initprivs",
              "type": "aclitem[]",
              "comment": {
                "text": "The initial access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_init_privs records information about the initial privileges of objects in the system. There is one entry for each object in the database which has a non-default (non-NULL) initial set of privileges.\\nhttps://www.postgresql.org/docs/current/catalog-pg-init-privs.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_language",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanname",
              "type": "name",
              "comment": {
                "text": "Name of the language",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the language",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanispl",
              "type": "bool",
              "comment": {
                "text": "This is false for internal languages (such as SQL) and true for user-defined languages. Currently, pg_dump still uses this to determine which languages need to be dumped, but this might be replaced by a different mechanism in the future.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanpltrusted",
              "type": "bool",
              "comment": {
                "text": "True if this is a trusted language, which means that it is believed not to grant access to anything outside the normal SQL execution environment. Only superusers can create functions in untrusted languages.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanplcallfoid",
              "type": "oid",
              "comment": {
                "text": "For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language. Zero for internal languages.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "laninline",
              "type": "oid",
              "comment": {
                "text": "This references a function that is responsible for executing “inline” anonymous code blocks (DO blocks). Zero if inline blocks are not supported.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanvalidator",
              "type": "oid",
              "comment": {
                "text": "This references a language validator function that is responsible for checking the syntax and validity of new functions when they are created. Zero if no validator is provided.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lanacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_language registers languages in which you can write functions or stored procedures. See CREATE LANGUAGE and Chapter 42 for more information about language handlers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-language.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_largeobject",
          "columns": [
            {
              "name": "loid",
              "type": "oid",
              "comment": {
                "text": "Identifier of the large object that includes this page",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pageno",
              "type": "int4",
              "comment": {
                "text": "Page number of this page within its large object (counting from zero)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "data",
              "type": "bytea",
              "comment": {
                "text": "Actual data stored in the large object. This will never be more than LOBLKSIZE bytes and might be less.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_largeobject holds the data making up “large objects”. A large object is identified by an OID assigned when it is created. Each large object is broken into segments or “pages” small enough to be conveniently stored as rows in pg_largeobject. The amount of data per page is defined to be LOBLKSIZE (which is currently BLCKSZ/4, or typically 2 kB).\\nhttps://www.postgresql.org/docs/current/catalog-pg-largeobject.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_largeobject_metadata",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lomowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the large object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "lomacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_largeobject_metadata holds metadata associated with large objects. The actual large object data is stored in pg_largeobject.\\nhttps://www.postgresql.org/docs/current/catalog-pg-largeobject-metadata.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_locks",
          "columns": [
            {
              "name": "locktype",
              "type": "text",
              "comment": {
                "text": "Type of the lockable object: relation, extend, frozenid, page, tuple, transactionid, virtualxid, spectoken, object, userlock, or advisory. (See also Table 28.11.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "database",
              "type": "oid",
              "comment": {
                "text": "OID of the database in which the lock target exists, or zero if the target is a shared object, or null if the target is a transaction ID",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "relation",
              "type": "oid",
              "comment": {
                "text": "OID of the relation targeted by the lock, or null if the target is not a relation or part of a relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "page",
              "type": "int4",
              "comment": {
                "text": "Page number targeted by the lock within the relation, or null if the target is not a relation page or tuple",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tuple",
              "type": "int2",
              "comment": {
                "text": "Tuple number targeted by the lock within the page, or null if the target is not a tuple",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "virtualxid",
              "type": "text",
              "comment": {
                "text": "Virtual ID of the transaction targeted by the lock, or null if the target is not a virtual transaction ID",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "transactionid",
              "type": "xid",
              "comment": {
                "text": "ID of the transaction targeted by the lock, or null if the target is not a transaction ID",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classid",
              "type": "oid",
              "comment": {
                "text": "OID of the system catalog containing the lock target, or null if the target is not a general database object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objid",
              "type": "oid",
              "comment": {
                "text": "OID of the lock target within its system catalog, or null if the target is not a general database object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int2",
              "comment": {
                "text": "Column number targeted by the lock (the classid and objid refer to the table itself), or zero if the target is some other general database object, or null if the target is not a general database object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "virtualtransaction",
              "type": "text",
              "comment": {
                "text": "Virtual ID of the transaction that is holding or awaiting this lock",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pid",
              "type": "int4",
              "comment": {
                "text": "Process ID of the server process holding or awaiting this lock, or null if the lock is held by a prepared transaction",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "mode",
              "type": "text",
              "comment": {
                "text": "Name of the lock mode held or desired by this process (see Section 13.3.1 and Section 13.2.3)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "granted",
              "type": "bool",
              "comment": {
                "text": "True if lock is held, false if lock is awaited",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "fastpath",
              "type": "bool",
              "comment": {
                "text": "True if lock was taken via fast path, false if taken via main lock table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "waitstart",
              "type": "timestamptz",
              "comment": {
                "text": "Time when the server process started waiting for this lock, or null if the lock is held. Note that this can be null for a very short period of time after the wait started even though granted is false.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_locks provides access to information about the locks held by active processes within the database server. See Chapter 13 for more discussion of locking.\\nhttps://www.postgresql.org/docs/current/view-pg-locks.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_matviews",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing materialized view",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "matviewname",
              "type": "name",
              "comment": {
                "text": "Name of materialized view",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "matviewowner",
              "type": "name",
              "comment": {
                "text": "Name of materialized view's owner",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "name",
              "comment": {
                "text": "Name of tablespace containing materialized view (null if default for database)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "hasindexes",
              "type": "bool",
              "comment": {
                "text": "True if materialized view has (or recently had) any indexes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ispopulated",
              "type": "bool",
              "comment": {
                "text": "True if materialized view is currently populated",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "definition",
              "type": "text",
              "comment": {
                "text": "Materialized view definition (a reconstructed SELECT query)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_matviews provides access to useful information about each materialized view in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-matviews.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_namespace",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "nspname",
              "type": "name",
              "comment": {
                "text": "Name of the namespace",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "nspowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the namespace",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "nspacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_namespace stores namespaces. A namespace is the structure underlying SQL schemas: each namespace can have a separate collection of relations, types, etc. without name conflicts.\\nhttps://www.postgresql.org/docs/current/catalog-pg-namespace.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_opclass",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcmethod",
              "type": "oid",
              "comment": {
                "text": "Index access method operator class is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcname",
              "type": "name",
              "comment": {
                "text": "Name of this operator class",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcnamespace",
              "type": "oid",
              "comment": {
                "text": "Namespace of this operator class",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the operator class",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcfamily",
              "type": "oid",
              "comment": {
                "text": "Operator family containing the operator class",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcintype",
              "type": "oid",
              "comment": {
                "text": "Data type that the operator class indexes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opcdefault",
              "type": "bool",
              "comment": {
                "text": "True if this operator class is the default for opcintype",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opckeytype",
              "type": "oid",
              "comment": {
                "text": "Type of data stored in index, or zero if same as opcintype",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_opclass defines index access method operator classes. Each operator class defines semantics for index columns of a particular data type and a particular index access method. An operator class essentially specifies that a particular operator family is applicable to a particular indexable column data type. The set of operators from the family that are actually usable with the indexed column are whichever ones accept the column's data type as their left-hand input.\\nhttps://www.postgresql.org/docs/current/catalog-pg-opclass.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_operator",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprname",
              "type": "name",
              "comment": {
                "text": "Name of the operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the operator",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprkind",
              "type": "char",
              "comment": {
                "text": "b = infix operator (“both”), or l = prefix operator (“left”)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprcanmerge",
              "type": "bool",
              "comment": {
                "text": "This operator supports merge joins",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprcanhash",
              "type": "bool",
              "comment": {
                "text": "This operator supports hash joins",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprleft",
              "type": "oid",
              "comment": {
                "text": "Type of the left operand (zero for a prefix operator)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprright",
              "type": "oid",
              "comment": {
                "text": "Type of the right operand",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprresult",
              "type": "oid",
              "comment": {
                "text": "Type of the result (zero for a not-yet-defined “shell” operator)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprcom",
              "type": "oid",
              "comment": {
                "text": "Commutator of this operator (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprnegate",
              "type": "oid",
              "comment": {
                "text": "Negator of this operator (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprcode",
              "type": "regproc",
              "comment": {
                "text": "Function that implements this operator (zero for a not-yet-defined “shell” operator)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprrest",
              "type": "regproc",
              "comment": {
                "text": "Restriction selectivity estimation function for this operator (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oprjoin",
              "type": "regproc",
              "comment": {
                "text": "Join selectivity estimation function for this operator (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_operator stores information about operators. See CREATE OPERATOR and Section 38.14 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-operator.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_opfamily",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opfmethod",
              "type": "oid",
              "comment": {
                "text": "Index access method operator family is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opfname",
              "type": "name",
              "comment": {
                "text": "Name of this operator family",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opfnamespace",
              "type": "oid",
              "comment": {
                "text": "Namespace of this operator family",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "opfowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the operator family",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_opfamily defines operator families. Each operator family is a collection of operators and associated support routines that implement the semantics specified for a particular index access method. Furthermore, the operators in a family are all “compatible”, in a way that is specified by the access method. The operator family concept allows cross-data-type operators to be used with indexes and to be reasoned about using knowledge of access method semantics.\\nhttps://www.postgresql.org/docs/current/catalog-pg-opfamily.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_partitioned_table",
          "columns": [
            {
              "name": "partrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for this partitioned table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partstrat",
              "type": "char",
              "comment": {
                "text": "Partitioning strategy; h = hash partitioned table, l = list partitioned table, r = range partitioned table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partnatts",
              "type": "int2",
              "comment": {
                "text": "The number of columns in the partition key",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partdefid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for the default partition of this partitioned table, or zero if this partitioned table does not have a default partition",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partattrs",
              "type": "int2vector",
              "comment": {
                "text": "This is an array of partnatts values that indicate which table columns are part of the partition key. For example, a value of 1 3 would mean that the first and the third table columns make up the partition key. A zero in this array indicates that the corresponding partition key column is an expression, rather than a simple column reference.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partclass",
              "type": "oidvector",
              "comment": {
                "text": "For each column in the partition key, this contains the OID of the operator class to use. See pg_opclass for details.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partcollation",
              "type": "oidvector",
              "comment": {
                "text": "For each column in the partition key, this contains the OID of the collation to use for partitioning, or zero if the column is not of a collatable data type.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "partexprs",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression trees (in nodeToString() representation) for partition key columns that are not simple column references. This is a list with one element for each zero entry in partattrs. Null if all partition key columns are simple references.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_partitioned_table stores information about how tables are partitioned.\\nhttps://www.postgresql.org/docs/current/catalog-pg-partitioned-table.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_policies",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table policy is on",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table policy is on",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "policyname",
              "type": "name",
              "comment": {
                "text": "Name of policy",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "permissive",
              "type": "text",
              "comment": {
                "text": "Is the policy permissive or restrictive?",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "roles",
              "type": "name[]",
              "comment": {
                "text": "The roles to which this policy applies",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cmd",
              "type": "text",
              "comment": {
                "text": "The command type to which the policy is applied",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "qual",
              "type": "text",
              "comment": {
                "text": "The expression added to the security barrier qualifications for queries that this policy applies to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "with_check",
              "type": "text",
              "comment": {
                "text": "The expression added to the WITH CHECK qualifications for queries that attempt to add rows to this table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_policies provides access to useful information about each row-level security policy in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-policies.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_policy",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polname",
              "type": "name",
              "comment": {
                "text": "The name of the policy",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polrelid",
              "type": "oid",
              "comment": {
                "text": "The table to which the policy applies",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polcmd",
              "type": "char",
              "comment": {
                "text": "The command type to which the policy is applied: r for SELECT, a for INSERT, w for UPDATE, d for DELETE, or * for all",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polpermissive",
              "type": "bool",
              "comment": {
                "text": "Is the policy permissive or restrictive?",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polroles",
              "type": "oid[]",
              "comment": {
                "text": "The roles to which the policy is applied; zero means PUBLIC (and normally appears alone in the array)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polqual",
              "type": "pg_node_tree",
              "comment": {
                "text": "The expression tree to be added to the security barrier qualifications for queries that use the table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "polwithcheck",
              "type": "pg_node_tree",
              "comment": {
                "text": "The expression tree to be added to the WITH CHECK qualifications for queries that attempt to add rows to the table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_policy stores row-level security policies for tables. A policy includes the kind of command that it applies to (possibly all commands), the roles that it applies to, the expression to be added as a security-barrier qualification to queries that include the table, and the expression to be added as a WITH CHECK option for queries that attempt to add new records to the table.\\nhttps://www.postgresql.org/docs/current/catalog-pg-policy.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_prepared_statements",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "The identifier of the prepared statement",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statement",
              "type": "text",
              "comment": {
                "text": "The query string submitted by the client to create this prepared statement. For prepared statements created via SQL, this is the PREPARE statement submitted by the client. For prepared statements created via the frontend/backend protocol, this is the text of the prepared statement itself.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prepare_time",
              "type": "timestamptz",
              "comment": {
                "text": "The time at which the prepared statement was created",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "parameter_types",
              "type": "regtype[]",
              "comment": {
                "text": "The expected parameter types for the prepared statement in the form of an array of regtype. The OID corresponding to an element of this array can be obtained by casting the regtype value to oid.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "from_sql",
              "type": "bool",
              "comment": {
                "text": "true if the prepared statement was created via the PREPARE SQL command; false if the statement was prepared via the frontend/backend protocol",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "generic_plans",
              "type": "int8",
              "comment": {
                "text": "Number of times generic plan was chosen",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "custom_plans",
              "type": "int8",
              "comment": {
                "text": "Number of times custom plan was chosen",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_prepared_statements view displays all the prepared statements that are available in the current session. See PREPARE for more information about prepared statements.\\nhttps://www.postgresql.org/docs/current/view-pg-prepared-statements.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_prepared_xacts",
          "columns": [
            {
              "name": "transaction",
              "type": "xid",
              "comment": {
                "text": "Numeric transaction identifier of the prepared transaction",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "gid",
              "type": "text",
              "comment": {
                "text": "Global transaction identifier that was assigned to the transaction",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prepared",
              "type": "timestamptz",
              "comment": {
                "text": "Time at which the transaction was prepared for commit",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "owner",
              "type": "name",
              "comment": {
                "text": "Name of the user that executed the transaction",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "database",
              "type": "name",
              "comment": {
                "text": "Name of the database in which the transaction was executed",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_prepared_xacts displays information about transactions that are currently prepared for two-phase commit (see PREPARE TRANSACTION for details).\\nhttps://www.postgresql.org/docs/current/view-pg-prepared-xacts.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_proc",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proname",
              "type": "name",
              "comment": {
                "text": "Name of the function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pronamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prolang",
              "type": "oid",
              "comment": {
                "text": "Implementation language or call interface of this function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "procost",
              "type": "float4",
              "comment": {
                "text": "Estimated execution cost (in units of cpu_operator_cost); if proretset, this is cost per row returned",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prorows",
              "type": "float4",
              "comment": {
                "text": "Estimated number of result rows (zero if not proretset)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "provariadic",
              "type": "oid",
              "comment": {
                "text": "Data type of the variadic array parameter's elements, or zero if the function does not have a variadic parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prosupport",
              "type": "regproc",
              "comment": {
                "text": "Planner support function for this function (see Section 38.11), or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prokind",
              "type": "char",
              "comment": {
                "text": "f for a normal function, p for a procedure, a for an aggregate function, or w for a window function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prosecdef",
              "type": "bool",
              "comment": {
                "text": "Function is a security definer (i.e., a “setuid” function)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proleakproof",
              "type": "bool",
              "comment": {
                "text": "The function has no side effects. No information about the arguments is conveyed except via the return value. Any function that might throw an error depending on the values of its arguments is not leak-proof.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proisstrict",
              "type": "bool",
              "comment": {
                "text": "Function returns null if any call argument is null. In that case the function won't actually be called at all. Functions that are not “strict” must be prepared to handle null inputs.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proretset",
              "type": "bool",
              "comment": {
                "text": "Function returns a set (i.e., multiple values of the specified data type)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "provolatile",
              "type": "char",
              "comment": {
                "text": "provolatile tells whether the function's result depends only on its input arguments, or is affected by outside factors. It is i for “immutable” functions, which always deliver the same result for the same inputs. It is s for “stable” functions, whose results (for fixed inputs) do not change within a scan. It is v for “volatile” functions, whose results might change at any time. (Use v also for functions with side-effects, so that calls to them cannot get optimized away.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proparallel",
              "type": "char",
              "comment": {
                "text": "proparallel tells whether the function can be safely run in parallel mode. It is s for functions which are safe to run in parallel mode without restriction. It is r for functions which can be run in parallel mode, but their execution is restricted to the parallel group leader; parallel worker processes cannot invoke these functions. It is u for functions which are unsafe in parallel mode; the presence of such a function forces a serial execution plan.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pronargs",
              "type": "int2",
              "comment": {
                "text": "Number of input arguments",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pronargdefaults",
              "type": "int2",
              "comment": {
                "text": "Number of arguments that have defaults",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prorettype",
              "type": "oid",
              "comment": {
                "text": "Data type of the return value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proargtypes",
              "type": "oidvector",
              "comment": {
                "text": "An array of the data types of the function arguments. This includes only input arguments (including INOUT and VARIADIC arguments), and thus represents the call signature of the function.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proallargtypes",
              "type": "oid[]",
              "comment": {
                "text": "An array of the data types of the function arguments. This includes all arguments (including OUT and INOUT arguments); however, if all the arguments are IN arguments, this field will be null. Note that subscripting is 1-based, whereas for historical reasons proargtypes is subscripted from 0.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proargmodes",
              "type": "char[]",
              "comment": {
                "text": "An array of the modes of the function arguments, encoded as i for IN arguments, o for OUT arguments, b for INOUT arguments, v for VARIADIC arguments, t for TABLE arguments. If all the arguments are IN arguments, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proargnames",
              "type": "text[]",
              "comment": {
                "text": "An array of the names of the function arguments. Arguments without a name are set to empty strings in the array. If none of the arguments have a name, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proargdefaults",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression trees (in nodeToString() representation) for default values. This is a list with pronargdefaults elements, corresponding to the last N input arguments (i.e., the last N proargtypes positions). If none of the arguments have defaults, this field will be null.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "protrftypes",
              "type": "oid[]",
              "comment": {
                "text": "An array of the argument/result data type(s) for which to apply transforms (from the function's TRANSFORM clause). Null if none.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prosrc",
              "type": "text",
              "comment": {
                "text": "This tells the function handler how to invoke the function. It might be the actual source code of the function for interpreted languages, a link symbol, a file name, or just about anything else, depending on the implementation language/call convention.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "probin",
              "type": "text",
              "comment": {
                "text": "Additional information about how to invoke the function. Again, the interpretation is language-specific.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prosqlbody",
              "type": "pg_node_tree",
              "comment": {
                "text": "Pre-parsed SQL function body. This is used for SQL-language functions when the body is given in SQL-standard notation rather than as a string literal. It's null in other cases.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proconfig",
              "type": "text[]",
              "comment": {
                "text": "Function's local settings for run-time configuration variables",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "proacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_proc stores information about functions, procedures, aggregate functions, and window functions (collectively also known as routines). See CREATE FUNCTION, CREATE PROCEDURE, and Section 38.3 for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-proc.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubname",
              "type": "name",
              "comment": {
                "text": "Name of the publication",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the publication",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "puballtables",
              "type": "bool",
              "comment": {
                "text": "If true, this publication automatically includes all tables in the database, including any that will be created in the future.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubinsert",
              "type": "bool",
              "comment": {
                "text": "If true, INSERT operations are replicated for tables in the publication.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubupdate",
              "type": "bool",
              "comment": {
                "text": "If true, UPDATE operations are replicated for tables in the publication.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubdelete",
              "type": "bool",
              "comment": {
                "text": "If true, DELETE operations are replicated for tables in the publication.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubtruncate",
              "type": "bool",
              "comment": {
                "text": "If true, TRUNCATE operations are replicated for tables in the publication.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pubviaroot",
              "type": "bool",
              "comment": {
                "text": "If true, operations on a leaf partition are replicated using the identity and schema of its topmost partitioned ancestor mentioned in the publication instead of its own.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_publication contains all publications created in the database. For more on publications see Section 31.1.\\nhttps://www.postgresql.org/docs/current/catalog-pg-publication.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication_rel",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prpubid",
              "type": "oid",
              "comment": {
                "text": "Reference to publication",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prrelid",
              "type": "oid",
              "comment": {
                "text": "Reference to relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_publication_rel contains the mapping between relations and publications in the database. This is a many-to-many mapping. See also Section 52.79 for a more user-friendly view of this information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-publication-rel.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_publication_tables",
          "columns": [
            {
              "name": "pubname",
              "type": "name",
              "comment": {
                "text": "Name of publication",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_publication_tables provides information about the mapping between publications and the tables they contain. Unlike the underlying catalog pg_publication_rel, this view expands publications defined as FOR ALL TABLES, so for such publications there will be a row for each eligible table.\\nhttps://www.postgresql.org/docs/current/view-pg-publication-tables.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_range",
          "columns": [
            {
              "name": "rngtypid",
              "type": "oid",
              "comment": {
                "text": "OID of the range type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngsubtype",
              "type": "oid",
              "comment": {
                "text": "OID of the element type (subtype) of this range type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngmultitypid",
              "type": "oid",
              "comment": {
                "text": "OID of the multirange type for this range type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngcollation",
              "type": "oid",
              "comment": {
                "text": "OID of the collation used for range comparisons, or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngsubopc",
              "type": "oid",
              "comment": {
                "text": "OID of the subtype's operator class used for range comparisons",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngcanonical",
              "type": "regproc",
              "comment": {
                "text": "OID of the function to convert a range value into canonical form, or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rngsubdiff",
              "type": "regproc",
              "comment": {
                "text": "OID of the function to return the difference between two element values as double precision, or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_range stores information about range types. This is in addition to the types' entries in pg_type.\\nhttps://www.postgresql.org/docs/current/catalog-pg-range.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_origin",
          "columns": [
            {
              "name": "roident",
              "type": "oid",
              "comment": {
                "text": "A unique, cluster-wide identifier for the replication origin. Should never leave the system.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "roname",
              "type": "text",
              "comment": {
                "text": "The external, user defined, name of a replication origin.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_replication_origin catalog contains all replication origins created. For more on replication origins see Chapter 50.\\nhttps://www.postgresql.org/docs/current/catalog-pg-replication-origin.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_origin_status",
          "columns": [
            {
              "name": "local_id",
              "type": "oid",
              "comment": {
                "text": "internal node identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "external_id",
              "type": "text",
              "comment": {
                "text": "external node identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "remote_lsn",
              "type": "pg_lsn",
              "comment": {
                "text": "The origin node's LSN up to which data has been replicated.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "local_lsn",
              "type": "pg_lsn",
              "comment": {
                "text": "This node's LSN at which remote_lsn has been replicated. Used to flush commit records before persisting data to disk when using asynchronous commits.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_replication_origin_status view contains information about how far replay for a certain origin has progressed. For more on replication origins see Chapter 50.\\nhttps://www.postgresql.org/docs/current/view-pg-replication-origin-status.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_replication_slots",
          "columns": [
            {
              "name": "slot_name",
              "type": "name",
              "comment": {
                "text": "A unique, cluster-wide identifier for the replication slot",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "plugin",
              "type": "name",
              "comment": {
                "text": "The base name of the shared object containing the output plugin this logical slot is using, or null for physical slots.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "slot_type",
              "type": "text",
              "comment": {
                "text": "The slot type: physical or logical",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "datoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the database this slot is associated with, or null. Only logical slots have an associated database.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "database",
              "type": "name",
              "comment": {
                "text": "The name of the database this slot is associated with, or null. Only logical slots have an associated database.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "temporary",
              "type": "bool",
              "comment": {
                "text": "True if this is a temporary replication slot. Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "active",
              "type": "bool",
              "comment": {
                "text": "True if this slot is currently actively being used",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "active_pid",
              "type": "int4",
              "comment": {
                "text": "The process ID of the session using this slot if the slot is currently actively being used. NULL if inactive.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "xmin",
              "type": "xid",
              "comment": {
                "text": "The oldest transaction that this slot needs the database to retain. VACUUM cannot remove tuples deleted by any later transaction.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "catalog_xmin",
              "type": "xid",
              "comment": {
                "text": "The oldest transaction affecting the system catalogs that this slot needs the database to retain. VACUUM cannot remove catalog tuples deleted by any later transaction.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "restart_lsn",
              "type": "pg_lsn",
              "comment": {
                "text": "The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "confirmed_flush_lsn",
              "type": "pg_lsn",
              "comment": {
                "text": "The address (LSN) up to which the logical slot's consumer has confirmed receiving data. Data older than this is not available anymore. NULL for physical slots.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "wal_status",
              "type": "text",
              "comment": {
                "text": "Availability of WAL files claimed by this slot. Possible values are:",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "safe_wal_size",
              "type": "int8",
              "comment": {
                "text": "The number of bytes that can be written to WAL such that this slot is not in danger of getting in state \"lost\". It is NULL for lost slots, as well as if max_slot_wal_keep_size is -1.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "two_phase",
              "type": "bool",
              "comment": {
                "text": "True if the slot is enabled for decoding prepared transactions. Always false for physical slots.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_replication_slots view provides a listing of all replication slots that currently exist on the database cluster, along with their current state.\\nhttps://www.postgresql.org/docs/current/view-pg-replication-slots.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_rewrite",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rulename",
              "type": "name",
              "comment": {
                "text": "Rule name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ev_class",
              "type": "oid",
              "comment": {
                "text": "The table this rule is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ev_type",
              "type": "char",
              "comment": {
                "text": "Event type that the rule is for: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ev_enabled",
              "type": "char",
              "comment": {
                "text": "Controls in which session_replication_role modes the rule fires. O = rule fires in “origin” and “local” modes, D = rule is disabled, R = rule fires in “replica” mode, A = rule fires always.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_instead",
              "type": "bool",
              "comment": {
                "text": "True if the rule is an INSTEAD rule",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ev_qual",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression tree (in the form of a nodeToString() representation) for the rule's qualifying condition",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "ev_action",
              "type": "pg_node_tree",
              "comment": {
                "text": "Query tree (in the form of a nodeToString() representation) for the rule's action",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_rewrite stores rewrite rules for tables and views.\\nhttps://www.postgresql.org/docs/current/catalog-pg-rewrite.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_roles",
          "columns": [
            {
              "name": "rolname",
              "type": "name",
              "comment": {
                "text": "Role name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolsuper",
              "type": "bool",
              "comment": {
                "text": "Role has superuser privileges",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolinherit",
              "type": "bool",
              "comment": {
                "text": "Role automatically inherits privileges of roles it is a member of",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcreaterole",
              "type": "bool",
              "comment": {
                "text": "Role can create more roles",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcreatedb",
              "type": "bool",
              "comment": {
                "text": "Role can create databases",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolcanlogin",
              "type": "bool",
              "comment": {
                "text": "Role can log in. That is, this role can be given as the initial session authorization identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolreplication",
              "type": "bool",
              "comment": {
                "text": "Role is a replication role. A replication role can initiate replication connections and create and drop replication slots.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolconnlimit",
              "type": "int4",
              "comment": {
                "text": "For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolpassword",
              "type": "text",
              "comment": {
                "text": "Not the password (always reads as ********)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolvaliduntil",
              "type": "timestamptz",
              "comment": {
                "text": "Password expiry time (only used for password authentication); null if no expiration",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolbypassrls",
              "type": "bool",
              "comment": {
                "text": "Role bypasses every row-level security policy, see Section 5.8 for more information.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rolconfig",
              "type": "text[]",
              "comment": {
                "text": "Role-specific defaults for run-time configuration variables",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "ID of role",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_roles provides access to information about database roles. This is simply a publicly readable view of pg_authid that blanks out the password field.\\nhttps://www.postgresql.org/docs/current/view-pg-roles.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_rules",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table the rule is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rulename",
              "type": "name",
              "comment": {
                "text": "Name of rule",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "definition",
              "type": "text",
              "comment": {
                "text": "Rule definition (a reconstructed creation command)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_rules provides access to useful information about query rewrite rules.\\nhttps://www.postgresql.org/docs/current/view-pg-rules.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_seclabel",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the object this security label pertains to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog this object appears in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "provider",
              "type": "text",
              "comment": {
                "text": "The label provider associated with this label.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "label",
              "type": "text",
              "comment": {
                "text": "The security label applied to this object.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_seclabel stores security labels on database objects. Security labels can be manipulated with the SECURITY LABEL command. For an easier way to view security labels, see Section 52.84.\\nhttps://www.postgresql.org/docs/current/catalog-pg-seclabel.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_seclabels",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the object this security label pertains to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog this object appears in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objtype",
              "type": "text",
              "comment": {
                "text": "The type of object to which this label applies, as text.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace for this object, if applicable; otherwise NULL.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objname",
              "type": "text",
              "comment": {
                "text": "The name of the object to which this label applies, as text.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "provider",
              "type": "text",
              "comment": {
                "text": "The label provider associated with this label.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "label",
              "type": "text",
              "comment": {
                "text": "The security label applied to this object.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_seclabels provides information about security labels. It as an easier-to-query version of the pg_seclabel catalog.\\nhttps://www.postgresql.org/docs/current/view-pg-seclabels.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_sequence",
          "columns": [
            {
              "name": "seqrelid",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_class entry for this sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqtypid",
              "type": "oid",
              "comment": {
                "text": "Data type of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqstart",
              "type": "int8",
              "comment": {
                "text": "Start value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqincrement",
              "type": "int8",
              "comment": {
                "text": "Increment value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqmax",
              "type": "int8",
              "comment": {
                "text": "Maximum value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqmin",
              "type": "int8",
              "comment": {
                "text": "Minimum value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqcache",
              "type": "int8",
              "comment": {
                "text": "Cache size of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "seqcycle",
              "type": "bool",
              "comment": {
                "text": "Whether the sequence cycles",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_sequence contains information about sequences. Some of the information about sequences, such as the name and the schema, is in pg_class\\nhttps://www.postgresql.org/docs/current/catalog-pg-sequence.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_sequences",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequencename",
              "type": "name",
              "comment": {
                "text": "Name of sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "sequenceowner",
              "type": "name",
              "comment": {
                "text": "Name of sequence's owner",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "data_type",
              "type": "regtype",
              "comment": {
                "text": "Data type of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "start_value",
              "type": "int8",
              "comment": {
                "text": "Start value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "min_value",
              "type": "int8",
              "comment": {
                "text": "Minimum value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "max_value",
              "type": "int8",
              "comment": {
                "text": "Maximum value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "increment_by",
              "type": "int8",
              "comment": {
                "text": "Increment value of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cycle",
              "type": "bool",
              "comment": {
                "text": "Whether the sequence cycles",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cache_size",
              "type": "int8",
              "comment": {
                "text": "Cache size of the sequence",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "last_value",
              "type": "int8",
              "comment": {
                "text": "The last sequence value written to disk. If caching is used, this value can be greater than the last value handed out from the sequence. Null if the sequence has not been read from yet. Also, if the current user does not have USAGE or SELECT privilege on the sequence, the value is null.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_sequences provides access to useful information about each sequence in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-sequences.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_settings",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "Run-time configuration parameter name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "setting",
              "type": "text",
              "comment": {
                "text": "Current value of the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "unit",
              "type": "text",
              "comment": {
                "text": "Implicit unit of the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "category",
              "type": "text",
              "comment": {
                "text": "Logical group of the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "short_desc",
              "type": "text",
              "comment": {
                "text": "A brief description of the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "extra_desc",
              "type": "text",
              "comment": {
                "text": "Additional, more detailed, description of the parameter",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "context",
              "type": "text",
              "comment": {
                "text": "Context required to set the parameter's value (see below)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "vartype",
              "type": "text",
              "comment": {
                "text": "Parameter type (bool, enum, integer, real, or string)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "source",
              "type": "text",
              "comment": {
                "text": "Source of the current parameter value",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "min_val",
              "type": "text",
              "comment": {
                "text": "Minimum allowed value of the parameter (null for non-numeric values)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "max_val",
              "type": "text",
              "comment": {
                "text": "Maximum allowed value of the parameter (null for non-numeric values)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "enumvals",
              "type": "text[]",
              "comment": {
                "text": "Allowed values of an enum parameter (null for non-enum values)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "boot_val",
              "type": "text",
              "comment": {
                "text": "Parameter value assumed at server startup if the parameter is not otherwise set",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "reset_val",
              "type": "text",
              "comment": {
                "text": "Value that RESET would reset the parameter to in the current session",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "sourcefile",
              "type": "text",
              "comment": {
                "text": "Configuration file the current value was set in (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings); helpful when using include directives in configuration files",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "sourceline",
              "type": "int4",
              "comment": {
                "text": "Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings).",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "pending_restart",
              "type": "bool",
              "comment": {
                "text": "true if the value has been changed in the configuration file but needs a restart; or false otherwise.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_settings provides access to run-time parameters of the server. It is essentially an alternative interface to the SHOW and SET commands. It also provides access to some facts about each parameter that are not directly available from SHOW, such as minimum and maximum values.\\nhttps://www.postgresql.org/docs/current/view-pg-settings.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shadow",
          "columns": [
            {
              "name": "usename",
              "type": "name",
              "comment": {
                "text": "User name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "oid",
              "comment": {
                "text": "ID of this user",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usecreatedb",
              "type": "bool",
              "comment": {
                "text": "User can create databases",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usesuper",
              "type": "bool",
              "comment": {
                "text": "User is a superuser",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "userepl",
              "type": "bool",
              "comment": {
                "text": "User can initiate streaming replication and put the system in and out of backup mode.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usebypassrls",
              "type": "bool",
              "comment": {
                "text": "User bypasses every row-level security policy, see Section 5.8 for more information.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "passwd",
              "type": "text",
              "comment": {
                "text": "Password (possibly encrypted); null if none. See pg_authid for details of how encrypted passwords are stored.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "valuntil",
              "type": "timestamptz",
              "comment": {
                "text": "Password expiry time (only used for password authentication)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "useconfig",
              "type": "text[]",
              "comment": {
                "text": "Session defaults for run-time configuration variables",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_shadow exists for backwards compatibility: it emulates a catalog that existed in PostgreSQL before version 8.1. It shows properties of all roles that are marked as rolcanlogin in pg_authid.\\nhttps://www.postgresql.org/docs/current/view-pg-shadow.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shdepend",
          "columns": [
            {
              "name": "dbid",
              "type": "oid",
              "comment": {
                "text": "The OID of the database the dependent object is in, or zero for a shared object or a SHARED_DEPENDENCY_PIN entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog the dependent object is in, or zero for a SHARED_DEPENDENCY_PIN entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objid",
              "type": "oid",
              "comment": {
                "text": "The OID of the specific dependent object, or zero for a SHARED_DEPENDENCY_PIN entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "objsubid",
              "type": "int4",
              "comment": {
                "text": "For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "refclassid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog the referenced object is in (must be a shared catalog)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "refobjid",
              "type": "oid",
              "comment": {
                "text": "The OID of the specific referenced object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "deptype",
              "type": "char",
              "comment": {
                "text": "A code defining the specific semantics of this dependency relationship; see text",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_shdepend records the dependency relationships between database objects and shared objects, such as roles. This information allows PostgreSQL to ensure that those objects are unreferenced before attempting to delete them.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shdepend.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shdescription",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the object this description pertains to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog this object appears in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "description",
              "type": "text",
              "comment": {
                "text": "Arbitrary text that serves as the description of this object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_shdescription stores optional descriptions (comments) for shared database objects. Descriptions can be manipulated with the COMMENT command and viewed with psql's \\d commands.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shdescription.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shmem_allocations",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "The name of the shared memory allocation. NULL for unused memory and <anonymous> for anonymous allocations.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "off",
              "type": "int8",
              "comment": {
                "text": "The offset at which the allocation starts. NULL for anonymous allocations, since details related to them are not known.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "size",
              "type": "int8",
              "comment": {
                "text": "Size of the allocation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "allocated_size",
              "type": "int8",
              "comment": {
                "text": "Size of the allocation including padding. For anonymous allocations, no information about padding is available, so the size and allocated_size columns will always be equal. Padding is not meaningful for free memory, so the columns will be equal in that case also.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_shmem_allocations view shows allocations made from the server's main shared memory segment. This includes both memory allocated by postgres itself and memory allocated by extensions using the mechanisms detailed in Section 38.10.10.\\nhttps://www.postgresql.org/docs/current/view-pg-shmem-allocations.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_shseclabel",
          "columns": [
            {
              "name": "objoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the object this security label pertains to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "classoid",
              "type": "oid",
              "comment": {
                "text": "The OID of the system catalog this object appears in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "provider",
              "type": "text",
              "comment": {
                "text": "The label provider associated with this label.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "label",
              "type": "text",
              "comment": {
                "text": "The security label applied to this object.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_shseclabel stores security labels on shared database objects. Security labels can be manipulated with the SECURITY LABEL command. For an easier way to view security labels, see Section 52.84.\\nhttps://www.postgresql.org/docs/current/catalog-pg-shseclabel.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic",
          "columns": [
            {
              "name": "starelid",
              "type": "oid",
              "comment": {
                "text": "The table or index that the described column belongs to",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "staattnum",
              "type": "int2",
              "comment": {
                "text": "The number of the described column",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stainherit",
              "type": "bool",
              "comment": {
                "text": "If true, the stats include inheritance child columns, not just the values in the specified relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stanullfrac",
              "type": "float4",
              "comment": {
                "text": "The fraction of the column's entries that are null",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stawidth",
              "type": "int4",
              "comment": {
                "text": "The average stored width, in bytes, of nonnull entries",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stadistinct",
              "type": "float4",
              "comment": {
                "text": "The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a multiplier for the number of rows in the table; for example, a column in which about 80% of the values are nonnull and each nonnull value appears about twice on average could be represented by stadistinct = -0.4. A zero value means the number of distinct values is unknown.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stakindN",
              "type": "int2",
              "comment": {
                "text": "A code number indicating the kind of statistics stored in the Nth “slot” of the pg_statistic row.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "staopN",
              "type": "oid",
              "comment": {
                "text": "An operator used to derive the statistics stored in the Nth “slot”. For example, a histogram slot would show the < operator that defines the sort order of the data. Zero if the statistics kind does not require an operator.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stacollN",
              "type": "oid",
              "comment": {
                "text": "The collation used to derive the statistics stored in the Nth “slot”. For example, a histogram slot for a collatable column would show the collation that defines the sort order of the data. Zero for noncollatable data.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stanumbersN",
              "type": "float4[]",
              "comment": {
                "text": "Numerical statistics of the appropriate kind for the Nth “slot”, or null if the slot kind does not involve numerical values",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stavaluesN",
              "type": "anyarray",
              "comment": {
                "text": "Column data values of the appropriate kind for the Nth “slot”, or null if the slot kind does not store any data values. Each array's element values are actually of the specific column's data type, or a related type such as an array's element type, so there is no way to define these columns' type more specifically than anyarray.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_statistic stores statistical data about the contents of the database. Entries are created by ANALYZE and subsequently used by the query planner. Note that all the statistical data is inherently approximate, even assuming that it is up-to-date.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic_ext",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxrelid",
              "type": "oid",
              "comment": {
                "text": "Table containing the columns described by this object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxname",
              "type": "name",
              "comment": {
                "text": "Name of the statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxstattarget",
              "type": "int4",
              "comment": {
                "text": "stxstattarget controls the level of detail of statistics accumulated for this statistics object by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the maximum of the statistics targets of the referenced columns, if set, or the system default statistics target. Positive values of stxstattarget determine the target number of “most common values” to collect.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxkeys",
              "type": "int2vector",
              "comment": {
                "text": "An array of attribute numbers, indicating which table columns are covered by this statistics object; for example a value of 1 3 would mean that the first and the third table columns are covered",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxkind",
              "type": "char[]",
              "comment": {
                "text": "An array containing codes for the enabled statistics kinds; valid values are: d for n-distinct statistics, f for functional dependency statistics, m for most common values (MCV) list statistics, and e for expression statistics",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxexprs",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression trees (in nodeToString() representation) for statistics object attributes that are not simple column references. This is a list with one element per expression. Null if all statistics object attributes are simple references.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_statistic_ext holds definitions of extended planner statistics. Each row in this catalog corresponds to a statistics object created with CREATE STATISTICS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic-ext.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_statistic_ext_data",
          "columns": [
            {
              "name": "stxoid",
              "type": "oid",
              "comment": {
                "text": "Extended statistics object containing the definition for this data",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxdndistinct",
              "type": "pg_ndistinct",
              "comment": {
                "text": "N-distinct counts, serialized as pg_ndistinct type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxddependencies",
              "type": "pg_dependencies",
              "comment": {
                "text": "Functional dependency statistics, serialized as pg_dependencies type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxdmcv",
              "type": "pg_mcv_list",
              "comment": {
                "text": "MCV (most-common values) list statistics, serialized as pg_mcv_list type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "stxdexpr",
              "type": "pg_statistic[]",
              "comment": {
                "text": "Per-expression statistics, serialized as an array of pg_statistic type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_statistic_ext_data holds data for extended planner statistics defined in pg_statistic_ext. Each row in this catalog corresponds to a statistics object created with CREATE STATISTICS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-statistic-ext-data.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stats",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attname",
              "type": "name",
              "comment": {
                "text": "Name of column described by this row",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "inherited",
              "type": "bool",
              "comment": {
                "text": "If true, this row includes inheritance child columns, not just the values in the specified table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "null_frac",
              "type": "float4",
              "comment": {
                "text": "Fraction of column entries that are null",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "avg_width",
              "type": "int4",
              "comment": {
                "text": "Average width in bytes of column's entries",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "n_distinct",
              "type": "float4",
              "comment": {
                "text": "If greater than zero, the estimated number of distinct values in the column. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique column in which the number of distinct values is the same as the number of rows.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_vals",
              "type": "anyarray",
              "comment": {
                "text": "A list of the most common values in the column. (Null if no values seem to be more common than any others.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_freqs",
              "type": "float4[]",
              "comment": {
                "text": "A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "histogram_bounds",
              "type": "anyarray",
              "comment": {
                "text": "A list of values that divide the column's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This column is null if the column data type does not have a < operator or if the most_common_vals list accounts for the entire population.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "correlation",
              "type": "float4",
              "comment": {
                "text": "Statistical correlation between physical row ordering and logical ordering of the column values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the column will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This column is null if the column data type does not have a < operator.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_elems",
              "type": "anyarray",
              "comment": {
                "text": "A list of non-null element values most often appearing within values of the column. (Null for scalar types.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_elem_freqs",
              "type": "float4[]",
              "comment": {
                "text": "A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "elem_count_histogram",
              "type": "float4[]",
              "comment": {
                "text": "A histogram of the counts of distinct non-null element values within the values of the column, followed by the average number of distinct non-null elements. (Null for scalar types.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_stats provides access to the information stored in the pg_statistic catalog. This view allows access only to rows of pg_statistic that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stats_ext",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_name",
              "type": "name",
              "comment": {
                "text": "Name of extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_owner",
              "type": "name",
              "comment": {
                "text": "Owner of the extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "attnames",
              "type": "name[]",
              "comment": {
                "text": "Names of the columns included in the extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "exprs",
              "type": "text[]",
              "comment": {
                "text": "Expressions included in the extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "kinds",
              "type": "char[]",
              "comment": {
                "text": "Types of extended statistics object enabled for this record",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "n_distinct",
              "type": "pg_ndistinct",
              "comment": {
                "text": "N-distinct counts for combinations of column values. If greater than zero, the estimated number of distinct values in the combination. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique combination of columns in which the number of distinct combinations is the same as the number of rows.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dependencies",
              "type": "pg_dependencies",
              "comment": {
                "text": "Functional dependency statistics",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_vals",
              "type": "text[]",
              "comment": {
                "text": "A list of the most common combinations of values in the columns. (Null if no combinations seem to be more common than any others.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_val_nulls",
              "type": "bool[]",
              "comment": {
                "text": "A list of NULL flags for the most common combinations of values. (Null when most_common_vals is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_freqs",
              "type": "float8[]",
              "comment": {
                "text": "A list of the frequencies of the most common combinations, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_base_freqs",
              "type": "float8[]",
              "comment": {
                "text": "A list of the base frequencies of the most common combinations, i.e., product of per-value frequencies. (Null when most_common_vals is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_stats_ext provides access to information about each extended statistics object in the database, combining information stored in the pg_statistic_ext and pg_statistic_ext_data catalogs. This view allows access only to rows of pg_statistic_ext and pg_statistic_ext_data that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats-ext.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_stats_ext_exprs",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table the statistics object is defined on",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_name",
              "type": "name",
              "comment": {
                "text": "Name of extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "statistics_owner",
              "type": "name",
              "comment": {
                "text": "Owner of the extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "expr",
              "type": "text",
              "comment": {
                "text": "Expression included in the extended statistics object",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "null_frac",
              "type": "float4",
              "comment": {
                "text": "Fraction of expression entries that are null",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "avg_width",
              "type": "int4",
              "comment": {
                "text": "Average width in bytes of expression's entries",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "n_distinct",
              "type": "float4",
              "comment": {
                "text": "If greater than zero, the estimated number of distinct values in the expression. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the expression seems to have a fixed number of possible values.) For example, -1 indicates a unique expression in which the number of distinct values is the same as the number of rows.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_vals",
              "type": "anyarray",
              "comment": {
                "text": "A list of the most common values in the expression. (Null if no values seem to be more common than any others.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_freqs",
              "type": "float4[]",
              "comment": {
                "text": "A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "histogram_bounds",
              "type": "anyarray",
              "comment": {
                "text": "A list of values that divide the expression's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This expression is null if the expression data type does not have a < operator or if the most_common_vals list accounts for the entire population.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "correlation",
              "type": "float4",
              "comment": {
                "text": "Statistical correlation between physical row ordering and logical ordering of the expression values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the expression will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This expression is null if the expression's data type does not have a < operator.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_elems",
              "type": "anyarray",
              "comment": {
                "text": "A list of non-null element values most often appearing within values of the expression. (Null for scalar types.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "most_common_elem_freqs",
              "type": "float4[]",
              "comment": {
                "text": "A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "elem_count_histogram",
              "type": "float4[]",
              "comment": {
                "text": "A histogram of the counts of distinct non-null element values within the values of the expression, followed by the average number of distinct non-null elements. (Null for scalar types.)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_stats_ext_exprs provides access to information about all expressions included in extended statistics objects, combining information stored in the pg_statistic_ext and pg_statistic_ext_data catalogs. This view allows access only to rows of pg_statistic_ext and pg_statistic_ext_data that correspond to tables the user has permission to read, and therefore it is safe to allow public read access to this view.\\nhttps://www.postgresql.org/docs/current/view-pg-stats-ext-exprs.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_subscription",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subdbid",
              "type": "oid",
              "comment": {
                "text": "OID of the database that the subscription resides in",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subname",
              "type": "name",
              "comment": {
                "text": "Name of the subscription",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the subscription",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subenabled",
              "type": "bool",
              "comment": {
                "text": "If true, the subscription is enabled and should be replicating",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subbinary",
              "type": "bool",
              "comment": {
                "text": "If true, the subscription will request that the publisher send data in binary format",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "substream",
              "type": "bool",
              "comment": {
                "text": "If true, the subscription will allow streaming of in-progress transactions",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subconninfo",
              "type": "text",
              "comment": {
                "text": "Connection string to the upstream database",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subslotname",
              "type": "name",
              "comment": {
                "text": "Name of the replication slot in the upstream database (also used for the local replication origin name); null represents NONE",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subsynccommit",
              "type": "text",
              "comment": {
                "text": "The synchronous_commit setting for the subscription's workers to use",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "subpublications",
              "type": "text[]",
              "comment": {
                "text": "Array of subscribed publication names. These reference publications defined in the upstream database. For more on publications see Section 31.1.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_subscription contains all existing logical replication subscriptions. For more information about logical replication see Chapter 31.\\nhttps://www.postgresql.org/docs/current/catalog-pg-subscription.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_subscription_rel",
          "columns": [
            {
              "name": "srsubid",
              "type": "oid",
              "comment": {
                "text": "Reference to subscription",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srrelid",
              "type": "oid",
              "comment": {
                "text": "Reference to relation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srsubstate",
              "type": "char",
              "comment": {
                "text": "State code: i = initialize, d = data is being copied, f = finished table copy, s = synchronized, r = ready (normal replication)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srsublsn",
              "type": "pg_lsn",
              "comment": {
                "text": "Remote LSN of the state change used for synchronization coordination when in s or r states, otherwise null",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_subscription_rel contains the state for each replicated relation in each subscription. This is a many-to-many mapping.\\nhttps://www.postgresql.org/docs/current/catalog-pg-subscription-rel.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_tables",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablename",
              "type": "name",
              "comment": {
                "text": "Name of table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tableowner",
              "type": "name",
              "comment": {
                "text": "Name of table's owner",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tablespace",
              "type": "name",
              "comment": {
                "text": "Name of tablespace containing table (null if default for database)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "hasindexes",
              "type": "bool",
              "comment": {
                "text": "True if table has (or recently had) any indexes",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "hasrules",
              "type": "bool",
              "comment": {
                "text": "True if table has (or once had) rules",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "hastriggers",
              "type": "bool",
              "comment": {
                "text": "True if table has (or once had) triggers",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "rowsecurity",
              "type": "bool",
              "comment": {
                "text": "True if row security is enabled on the table",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_tables provides access to useful information about each table in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-tables.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_tablespace",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "spcname",
              "type": "name",
              "comment": {
                "text": "Tablespace name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "spcowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the tablespace, usually the user who created it",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "spcacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "spcoptions",
              "type": "text[]",
              "comment": {
                "text": "Tablespace-level options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_tablespace stores information about the available tablespaces. Tables can be placed in particular tablespaces to aid administration of disk layout.\\nhttps://www.postgresql.org/docs/current/catalog-pg-tablespace.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_timezone_abbrevs",
          "columns": [
            {
              "name": "abbrev",
              "type": "text",
              "comment": {
                "text": "Time zone abbreviation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "utc_offset",
              "type": "interval",
              "comment": {
                "text": "Offset from UTC (positive means east of Greenwich)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_dst",
              "type": "bool",
              "comment": {
                "text": "True if this is a daylight-savings abbreviation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_timezone_abbrevs provides a list of time zone abbreviations that are currently recognized by the datetime input routines. The contents of this view change when the timezone_abbreviations run-time parameter is modified.\\nhttps://www.postgresql.org/docs/current/view-pg-timezone-abbrevs.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_timezone_names",
          "columns": [
            {
              "name": "name",
              "type": "text",
              "comment": {
                "text": "Time zone name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "abbrev",
              "type": "text",
              "comment": {
                "text": "Time zone abbreviation",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "utc_offset",
              "type": "interval",
              "comment": {
                "text": "Offset from UTC (positive means east of Greenwich)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "is_dst",
              "type": "bool",
              "comment": {
                "text": "True if currently observing daylight savings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_timezone_names provides a list of time zone names that are recognized by SET TIMEZONE, along with their associated abbreviations, UTC offsets, and daylight-savings status. (Technically, PostgreSQL does not use UTC because leap seconds are not handled.) Unlike the abbreviations shown in pg_timezone_abbrevs, many of these names imply a set of daylight-savings transition date rules. Therefore, the associated information changes across local DST boundaries. The displayed information is computed based on the current value of CURRENT_TIMESTAMP.\\nhttps://www.postgresql.org/docs/current/view-pg-timezone-names.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_transform",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "trftype",
              "type": "oid",
              "comment": {
                "text": "OID of the data type this transform is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "trflang",
              "type": "oid",
              "comment": {
                "text": "OID of the language this transform is for",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "trffromsql",
              "type": "regproc",
              "comment": {
                "text": "The OID of the function to use when converting the data type for input to the procedural language (e.g., function parameters). Zero is stored if the default behavior should be used.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "trftosql",
              "type": "regproc",
              "comment": {
                "text": "The OID of the function to use when converting output from the procedural language (e.g., return values) to the data type. Zero is stored if the default behavior should be used.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_transform stores information about transforms, which are a mechanism to adapt data types to procedural languages. See CREATE TRANSFORM for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-transform.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_trigger",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgrelid",
              "type": "oid",
              "comment": {
                "text": "The table this trigger is on",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgparentid",
              "type": "oid",
              "comment": {
                "text": "Parent trigger that this trigger is cloned from (this happens when partitions are created or attached to a partitioned table); zero if not a clone",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgname",
              "type": "name",
              "comment": {
                "text": "Trigger name (must be unique among triggers of same table)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgfoid",
              "type": "oid",
              "comment": {
                "text": "The function to be called",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgtype",
              "type": "int2",
              "comment": {
                "text": "Bit mask identifying trigger firing conditions",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgenabled",
              "type": "char",
              "comment": {
                "text": "Controls in which session_replication_role modes the trigger fires. O = trigger fires in “origin” and “local” modes, D = trigger is disabled, R = trigger fires in “replica” mode, A = trigger fires always.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgisinternal",
              "type": "bool",
              "comment": {
                "text": "True if trigger is internally generated (usually, to enforce the constraint identified by tgconstraint)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgconstrrelid",
              "type": "oid",
              "comment": {
                "text": "The table referenced by a referential integrity constraint (zero if trigger is not for a referential integrity constraint)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgconstrindid",
              "type": "oid",
              "comment": {
                "text": "The index supporting a unique, primary key, referential integrity, or exclusion constraint (zero if trigger is not for one of these types of constraint)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgconstraint",
              "type": "oid",
              "comment": {
                "text": "The pg_constraint entry associated with the trigger (zero if trigger is not for a constraint)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgdeferrable",
              "type": "bool",
              "comment": {
                "text": "True if constraint trigger is deferrable",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tginitdeferred",
              "type": "bool",
              "comment": {
                "text": "True if constraint trigger is initially deferred",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgnargs",
              "type": "int2",
              "comment": {
                "text": "Number of argument strings passed to trigger function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgattr",
              "type": "int2vector",
              "comment": {
                "text": "Column numbers, if trigger is column-specific; otherwise an empty array",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgargs",
              "type": "bytea",
              "comment": {
                "text": "Argument strings to pass to trigger, each NULL-terminated",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgqual",
              "type": "pg_node_tree",
              "comment": {
                "text": "Expression tree (in nodeToString() representation) for the trigger's WHEN condition, or null if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgoldtable",
              "type": "name",
              "comment": {
                "text": "REFERENCING clause name for OLD TABLE, or null if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tgnewtable",
              "type": "name",
              "comment": {
                "text": "REFERENCING clause name for NEW TABLE, or null if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_trigger stores triggers on tables and views. See CREATE TRIGGER for more information.\\nhttps://www.postgresql.org/docs/current/catalog-pg-trigger.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_config",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cfgname",
              "type": "name",
              "comment": {
                "text": "Text search configuration name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cfgnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this configuration",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cfgowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the configuration",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "cfgparser",
              "type": "oid",
              "comment": {
                "text": "The OID of the text search parser for this configuration",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_ts_config catalog contains entries representing text search configurations. A configuration specifies a particular text search parser and a list of dictionaries to use for each of the parser's output token types. The parser is shown in the pg_ts_config entry, but the token-to-dictionary mapping is defined by subsidiary entries in pg_ts_config_map.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-config.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_config_map",
          "columns": [
            {
              "name": "mapcfg",
              "type": "oid",
              "comment": {
                "text": "The OID of the pg_ts_config entry owning this map entry",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "maptokentype",
              "type": "int4",
              "comment": {
                "text": "A token type emitted by the configuration's parser",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "mapseqno",
              "type": "int4",
              "comment": {
                "text": "Order in which to consult this entry (lower mapseqnos first)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "mapdict",
              "type": "oid",
              "comment": {
                "text": "The OID of the text search dictionary to consult",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_ts_config_map catalog contains entries showing which text search dictionaries should be consulted, and in what order, for each output token type of each text search configuration's parser.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-config-map.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_dict",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dictname",
              "type": "name",
              "comment": {
                "text": "Text search dictionary name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dictnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this dictionary",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dictowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the dictionary",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dicttemplate",
              "type": "oid",
              "comment": {
                "text": "The OID of the text search template for this dictionary",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "dictinitoption",
              "type": "text",
              "comment": {
                "text": "Initialization option string for the template",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_ts_dict catalog contains entries defining text search dictionaries. A dictionary depends on a text search template, which specifies all the implementation functions needed; the dictionary itself provides values for the user-settable parameters supported by the template. This division of labor allows dictionaries to be created by unprivileged users. The parameters are specified by a text string dictinitoption, whose format and meaning vary depending on the template.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-dict.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_parser",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prsname",
              "type": "name",
              "comment": {
                "text": "Text search parser name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prsnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this parser",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prsstart",
              "type": "regproc",
              "comment": {
                "text": "OID of the parser's startup function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prstoken",
              "type": "regproc",
              "comment": {
                "text": "OID of the parser's next-token function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prsend",
              "type": "regproc",
              "comment": {
                "text": "OID of the parser's shutdown function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prsheadline",
              "type": "regproc",
              "comment": {
                "text": "OID of the parser's headline function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "prslextype",
              "type": "regproc",
              "comment": {
                "text": "OID of the parser's lextype function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_ts_parser catalog contains entries defining text search parsers. A parser is responsible for splitting input text into lexemes and assigning a token type to each lexeme. Since a parser must be implemented by C-language-level functions, creation of new parsers is restricted to database superusers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-parser.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_ts_template",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tmplname",
              "type": "name",
              "comment": {
                "text": "Text search template name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tmplnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this template",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tmplinit",
              "type": "regproc",
              "comment": {
                "text": "OID of the template's initialization function (zero if none)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "tmpllexize",
              "type": "regproc",
              "comment": {
                "text": "OID of the template's lexize function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The pg_ts_template catalog contains entries defining text search templates. A template is the implementation skeleton for a class of text search dictionaries. Since a template must be implemented by C-language-level functions, creation of new templates is restricted to database superusers.\\nhttps://www.postgresql.org/docs/current/catalog-pg-ts-template.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_type",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typname",
              "type": "name",
              "comment": {
                "text": "Data type name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typnamespace",
              "type": "oid",
              "comment": {
                "text": "The OID of the namespace that contains this type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typowner",
              "type": "oid",
              "comment": {
                "text": "Owner of the type",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typlen",
              "type": "int2",
              "comment": {
                "text": "For a fixed-size type, typlen is the number of bytes in the internal representation of the type. But for a variable-length type, typlen is negative. -1 indicates a “varlena” type (one that has a length word), -2 indicates a null-terminated C string.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typbyval",
              "type": "bool",
              "comment": {
                "text": "typbyval determines whether internal routines pass a value of this type by value or by reference. typbyval had better be false if typlen is not 1, 2, or 4 (or 8 on machines where Datum is 8 bytes). Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typtype",
              "type": "char",
              "comment": {
                "text": "typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, e for an enum type, p for a pseudo-type, r for a range type, or m for a multirange type. See also typrelid and typbasetype.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typcategory",
              "type": "char",
              "comment": {
                "text": "typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be “preferred”. See Table 52.63.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typispreferred",
              "type": "bool",
              "comment": {
                "text": "True if the type is a preferred cast target within its typcategory",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typisdefined",
              "type": "bool",
              "comment": {
                "text": "True if the type is defined, false if this is a placeholder entry for a not-yet-defined type. When typisdefined is false, nothing except the type name, namespace, and OID can be relied on.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typdelim",
              "type": "char",
              "comment": {
                "text": "Character that separates two values of this type when parsing array input. Note that the delimiter is associated with the array element data type, not the array data type.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typrelid",
              "type": "oid",
              "comment": {
                "text": "If this is a composite type (see typtype), then this column points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for non-composite types.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typsubscript",
              "type": "regproc",
              "comment": {
                "text": "Subscripting handler function's OID, or zero if this type doesn't support subscripting. Types that are “true” array types have typsubscript = array_subscript_handler, but other types may have other handler functions to implement specialized subscripting behavior.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typelem",
              "type": "oid",
              "comment": {
                "text": "If typelem is not zero then it identifies another row in pg_type, defining the type yielded by subscripting. This should be zero if typsubscript is zero. However, it can be zero when typsubscript isn't zero, if the handler doesn't need typelem to determine the subscripting result type. Note that a typelem dependency is considered to imply physical containment of the element type in this type; so DDL changes on the element type might be restricted by the presence of this type.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typarray",
              "type": "oid",
              "comment": {
                "text": "If typarray is not zero then it identifies another row in pg_type, which is the “true” array type having this type as element",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typinput",
              "type": "regproc",
              "comment": {
                "text": "Input conversion function (text format)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typoutput",
              "type": "regproc",
              "comment": {
                "text": "Output conversion function (text format)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typreceive",
              "type": "regproc",
              "comment": {
                "text": "Input conversion function (binary format), or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typsend",
              "type": "regproc",
              "comment": {
                "text": "Output conversion function (binary format), or zero if none",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typmodin",
              "type": "regproc",
              "comment": {
                "text": "Type modifier input function, or zero if type does not support modifiers",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typmodout",
              "type": "regproc",
              "comment": {
                "text": "Type modifier output function, or zero to use the standard format",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typanalyze",
              "type": "regproc",
              "comment": {
                "text": "Custom ANALYZE function, or zero to use the standard function",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typalign",
              "type": "char",
              "comment": {
                "text": "typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are:",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typstorage",
              "type": "char",
              "comment": {
                "text": "typstorage tells for varlena types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are:",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typnotnull",
              "type": "bool",
              "comment": {
                "text": "typnotnull represents a not-null constraint on a type. Used for domains only.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typbasetype",
              "type": "oid",
              "comment": {
                "text": "If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if this type is not a domain.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typtypmod",
              "type": "int4",
              "comment": {
                "text": "Domains use typtypmod to record the typmod to be applied to their base type (-1 if base type does not use a typmod). -1 if this type is not a domain.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typndims",
              "type": "int4",
              "comment": {
                "text": "typndims is the number of array dimensions for a domain over an array (that is, typbasetype is an array type). Zero for types other than domains over array types.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typcollation",
              "type": "oid",
              "comment": {
                "text": "typcollation specifies the collation of the type. If the type does not support collations, this will be zero. A base type that supports collations will have a nonzero value here, typically DEFAULT_COLLATION_OID. A domain over a collatable type can have a collation OID different from its base type's, if one was specified for the domain.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typdefaultbin",
              "type": "pg_node_tree",
              "comment": {
                "text": "If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typdefault",
              "type": "text",
              "comment": {
                "text": "typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which can be fed to the type's input converter to produce a constant.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "typacl",
              "type": "aclitem[]",
              "comment": {
                "text": "Access privileges; see Section 5.7 for details",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_type stores information about data types. Base types and enum types (scalar types) are created with CREATE TYPE, and domains with CREATE DOMAIN. A composite type is automatically created for each table in the database, to represent the row structure of the table. It is also possible to create composite types with CREATE TYPE AS.\\nhttps://www.postgresql.org/docs/current/catalog-pg-type.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user",
          "columns": [
            {
              "name": "usename",
              "type": "name",
              "comment": {
                "text": "User name",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usesysid",
              "type": "oid",
              "comment": {
                "text": "ID of this user",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usecreatedb",
              "type": "bool",
              "comment": {
                "text": "User can create databases",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usesuper",
              "type": "bool",
              "comment": {
                "text": "User is a superuser",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "userepl",
              "type": "bool",
              "comment": {
                "text": "User can initiate streaming replication and put the system in and out of backup mode.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usebypassrls",
              "type": "bool",
              "comment": {
                "text": "User bypasses every row-level security policy, see Section 5.8 for more information.",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "passwd",
              "type": "text",
              "comment": {
                "text": "Not the password (always reads as ********)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "valuntil",
              "type": "timestamptz",
              "comment": {
                "text": "Password expiry time (only used for password authentication)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "useconfig",
              "type": "text[]",
              "comment": {
                "text": "Session defaults for run-time configuration variables",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_user provides access to information about database users. This is simply a publicly readable view of pg_shadow that blanks out the password field.\\nhttps://www.postgresql.org/docs/current/view-pg-user.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user_mapping",
          "columns": [
            {
              "name": "oid",
              "type": "oid",
              "comment": {
                "text": "Row identifier",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "umuser",
              "type": "oid",
              "comment": {
                "text": "OID of the local role being mapped, or zero if the user mapping is public",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "umserver",
              "type": "oid",
              "comment": {
                "text": "The OID of the foreign server that contains this mapping",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "umoptions",
              "type": "text[]",
              "comment": {
                "text": "User mapping specific options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The catalog pg_user_mapping stores the mappings from local user to remote. Access to this catalog is restricted from normal users, use the view pg_user_mappings instead.\\nhttps://www.postgresql.org/docs/current/catalog-pg-user-mapping.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_user_mappings",
          "columns": [
            {
              "name": "umid",
              "type": "oid",
              "comment": {
                "text": "OID of the user mapping",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvid",
              "type": "oid",
              "comment": {
                "text": "The OID of the foreign server that contains this mapping",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "srvname",
              "type": "name",
              "comment": {
                "text": "Name of the foreign server",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "umuser",
              "type": "oid",
              "comment": {
                "text": "OID of the local role being mapped, or zero if the user mapping is public",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "usename",
              "type": "name",
              "comment": {
                "text": "Name of the local user to be mapped",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "umoptions",
              "type": "text[]",
              "comment": {
                "text": "User mapping specific options, as “keyword=value” strings",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_user_mappings provides access to information about user mappings. This is essentially a publicly readable view of pg_user_mapping that leaves out the options field if the user has no rights to use it.\\nhttps://www.postgresql.org/docs/current/view-pg-user-mappings.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "schema": "pg_catalog",
          "table": "pg_views",
          "columns": [
            {
              "name": "schemaname",
              "type": "name",
              "comment": {
                "text": "Name of schema containing view",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "viewname",
              "type": "name",
              "comment": {
                "text": "Name of view",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "viewowner",
              "type": "name",
              "comment": {
                "text": "Name of view's owner",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            },
            {
              "name": "definition",
              "type": "text",
              "comment": {
                "text": "View definition (a reconstructed SELECT query)",
                "origins": [
                  {
                    "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                    "lines": []
                  }
                ]
              },
              "origins": [
                {
                  "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                  "lines": []
                }
              ]
            }
          ],
          "comment": {
            "text": "The view pg_views provides access to useful information about each view in the database.\\nhttps://www.postgresql.org/docs/current/view-pg-views.html",
            "origins": [
              {
                "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
                "lines": []
              }
            ]
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        }
      ],
      "relations": [
        {
          "name": "pg_aggregate_aggfnoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggfnoid"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggtransfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggtransfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggfinalfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggfinalfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggcombinefn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggcombinefn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggserialfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggserialfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggdeserialfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggdeserialfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggmtransfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggmtransfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggminvtransfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggminvtransfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggmfinalfn_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggmfinalfn"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggsortop_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggsortop"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggtranstype_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggtranstype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_aggregate_aggmtranstype_fk_az",
          "src": {
            "table": "pg_catalog.pg_aggregate",
            "column": "aggmtranstype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_am_amhandler_fk_az",
          "src": {
            "table": "pg_catalog.pg_am",
            "column": "amhandler"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amopfamily_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amopfamily"
          },
          "ref": {
            "table": "pg_catalog.pg_opfamily",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amoplefttype_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amoplefttype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amoprighttype_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amoprighttype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amopopr_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amopopr"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amopmethod_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amopmethod"
          },
          "ref": {
            "table": "pg_catalog.pg_am",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amop_amopsortfamily_fk_az",
          "src": {
            "table": "pg_catalog.pg_amop",
            "column": "amopsortfamily"
          },
          "ref": {
            "table": "pg_catalog.pg_opfamily",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amproc_amprocfamily_fk_az",
          "src": {
            "table": "pg_catalog.pg_amproc",
            "column": "amprocfamily"
          },
          "ref": {
            "table": "pg_catalog.pg_opfamily",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amproc_amproclefttype_fk_az",
          "src": {
            "table": "pg_catalog.pg_amproc",
            "column": "amproclefttype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amproc_amprocrighttype_fk_az",
          "src": {
            "table": "pg_catalog.pg_amproc",
            "column": "amprocrighttype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_amproc_amproc_fk_az",
          "src": {
            "table": "pg_catalog.pg_amproc",
            "column": "amproc"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_attrdef_adrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_attrdef",
            "column": "adrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_attrdef_adnum_fk_az",
          "src": {
            "table": "pg_catalog.pg_attrdef",
            "column": "adnum"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_attribute_attrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_attribute",
            "column": "attrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_attribute_atttypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_attribute",
            "column": "atttypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_attribute_attcollation_fk_az",
          "src": {
            "table": "pg_catalog.pg_attribute",
            "column": "attcollation"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_auth_members_roleid_fk_az",
          "src": {
            "table": "pg_catalog.pg_auth_members",
            "column": "roleid"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_auth_members_member_fk_az",
          "src": {
            "table": "pg_catalog.pg_auth_members",
            "column": "member"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_auth_members_grantor_fk_az",
          "src": {
            "table": "pg_catalog.pg_auth_members",
            "column": "grantor"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_cast_castsource_fk_az",
          "src": {
            "table": "pg_catalog.pg_cast",
            "column": "castsource"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_cast_casttarget_fk_az",
          "src": {
            "table": "pg_catalog.pg_cast",
            "column": "casttarget"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_cast_castfunc_fk_az",
          "src": {
            "table": "pg_catalog.pg_cast",
            "column": "castfunc"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_relnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "relnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_reltype_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "reltype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_reloftype_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "reloftype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_relowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "relowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_relam_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "relam"
          },
          "ref": {
            "table": "pg_catalog.pg_am",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_reltablespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "reltablespace"
          },
          "ref": {
            "table": "pg_catalog.pg_tablespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_reltoastrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "reltoastrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_class_relrewrite_fk_az",
          "src": {
            "table": "pg_catalog.pg_class",
            "column": "relrewrite"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_collation_collnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_collation",
            "column": "collnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_collation_collowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_collation",
            "column": "collowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_connamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "connamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_contypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "contypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conindid_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conindid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conparentid_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conparentid"
          },
          "ref": {
            "table": "pg_catalog.pg_constraint",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_confrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "confrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conkey_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conkey"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_confkey_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "confkey"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conpfeqop_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conpfeqop"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conppeqop_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conppeqop"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conffeqop_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conffeqop"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_constraint_conexclop_fk_az",
          "src": {
            "table": "pg_catalog.pg_constraint",
            "column": "conexclop"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_conversion_connamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_conversion",
            "column": "connamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_conversion_conowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_conversion",
            "column": "conowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_conversion_conproc_fk_az",
          "src": {
            "table": "pg_catalog.pg_conversion",
            "column": "conproc"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_database_datdba_fk_az",
          "src": {
            "table": "pg_catalog.pg_database",
            "column": "datdba"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_database_dattablespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_database",
            "column": "dattablespace"
          },
          "ref": {
            "table": "pg_catalog.pg_tablespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_db_role_setting_setdatabase_fk_az",
          "src": {
            "table": "pg_catalog.pg_db_role_setting",
            "column": "setdatabase"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_db_role_setting_setrole_fk_az",
          "src": {
            "table": "pg_catalog.pg_db_role_setting",
            "column": "setrole"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_default_acl_defaclrole_fk_az",
          "src": {
            "table": "pg_catalog.pg_default_acl",
            "column": "defaclrole"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_default_acl_defaclnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_default_acl",
            "column": "defaclnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_depend_classid_fk_az",
          "src": {
            "table": "pg_catalog.pg_depend",
            "column": "classid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_depend_refclassid_fk_az",
          "src": {
            "table": "pg_catalog.pg_depend",
            "column": "refclassid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_description_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_description",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_enum_enumtypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_enum",
            "column": "enumtypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_event_trigger_evtowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_event_trigger",
            "column": "evtowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_event_trigger_evtfoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_event_trigger",
            "column": "evtfoid"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_extension_extowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_extension",
            "column": "extowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_extension_extnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_extension",
            "column": "extnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_extension_extconfig_fk_az",
          "src": {
            "table": "pg_catalog.pg_extension",
            "column": "extconfig"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_data_wrapper_fdwowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_data_wrapper",
            "column": "fdwowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_data_wrapper_fdwhandler_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_data_wrapper",
            "column": "fdwhandler"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_data_wrapper_fdwvalidator_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_data_wrapper",
            "column": "fdwvalidator"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_server_srvowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "srvowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_server_srvfdw_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "srvfdw"
          },
          "ref": {
            "table": "pg_catalog.pg_foreign_data_wrapper",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_table_ftrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_table",
            "column": "ftrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_foreign_table_ftserver_fk_az",
          "src": {
            "table": "pg_catalog.pg_foreign_table",
            "column": "ftserver"
          },
          "ref": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_index_indexrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_index",
            "column": "indexrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_index_indrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_index",
            "column": "indrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_index_indkey_fk_az",
          "src": {
            "table": "pg_catalog.pg_index",
            "column": "indkey"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_index_indcollation_fk_az",
          "src": {
            "table": "pg_catalog.pg_index",
            "column": "indcollation"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_index_indclass_fk_az",
          "src": {
            "table": "pg_catalog.pg_index",
            "column": "indclass"
          },
          "ref": {
            "table": "pg_catalog.pg_opclass",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_inherits_inhrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_inherits",
            "column": "inhrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_inherits_inhparent_fk_az",
          "src": {
            "table": "pg_catalog.pg_inherits",
            "column": "inhparent"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_init_privs_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_init_privs",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_language_lanowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_language",
            "column": "lanowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_language_lanplcallfoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_language",
            "column": "lanplcallfoid"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_language_laninline_fk_az",
          "src": {
            "table": "pg_catalog.pg_language",
            "column": "laninline"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_language_lanvalidator_fk_az",
          "src": {
            "table": "pg_catalog.pg_language",
            "column": "lanvalidator"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_largeobject_loid_fk_az",
          "src": {
            "table": "pg_catalog.pg_largeobject",
            "column": "loid"
          },
          "ref": {
            "table": "pg_catalog.pg_largeobject_metadata",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_largeobject_metadata_lomowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_largeobject_metadata",
            "column": "lomowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_namespace_nspowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opcmethod_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opcmethod"
          },
          "ref": {
            "table": "pg_catalog.pg_am",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opcnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opcnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opcowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opcowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opcfamily_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opcfamily"
          },
          "ref": {
            "table": "pg_catalog.pg_opfamily",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opcintype_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opcintype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opclass_opckeytype_fk_az",
          "src": {
            "table": "pg_catalog.pg_opclass",
            "column": "opckeytype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprleft_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprleft"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprright_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprright"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprresult_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprresult"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprcom_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprcom"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprnegate_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprnegate"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprcode_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprcode"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprrest_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprrest"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_operator_oprjoin_fk_az",
          "src": {
            "table": "pg_catalog.pg_operator",
            "column": "oprjoin"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opfamily_opfmethod_fk_az",
          "src": {
            "table": "pg_catalog.pg_opfamily",
            "column": "opfmethod"
          },
          "ref": {
            "table": "pg_catalog.pg_am",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opfamily_opfnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_opfamily",
            "column": "opfnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_opfamily_opfowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_opfamily",
            "column": "opfowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_partitioned_table_partrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_partitioned_table",
            "column": "partrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_partitioned_table_partdefid_fk_az",
          "src": {
            "table": "pg_catalog.pg_partitioned_table",
            "column": "partdefid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_partitioned_table_partattrs_fk_az",
          "src": {
            "table": "pg_catalog.pg_partitioned_table",
            "column": "partattrs"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_partitioned_table_partclass_fk_az",
          "src": {
            "table": "pg_catalog.pg_partitioned_table",
            "column": "partclass"
          },
          "ref": {
            "table": "pg_catalog.pg_opclass",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_partitioned_table_partcollation_fk_az",
          "src": {
            "table": "pg_catalog.pg_partitioned_table",
            "column": "partcollation"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_policy_polrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_policy",
            "column": "polrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_policy_polroles_fk_az",
          "src": {
            "table": "pg_catalog.pg_policy",
            "column": "polroles"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_pronamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "pronamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_proowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "proowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_prolang_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "prolang"
          },
          "ref": {
            "table": "pg_catalog.pg_language",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_provariadic_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "provariadic"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_prosupport_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "prosupport"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_prorettype_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "prorettype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_proargtypes_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "proargtypes"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_proallargtypes_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "proallargtypes"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_proc_protrftypes_fk_az",
          "src": {
            "table": "pg_catalog.pg_proc",
            "column": "protrftypes"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_pubowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication",
            "column": "pubowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_rel_prpubid_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication_rel",
            "column": "prpubid"
          },
          "ref": {
            "table": "pg_catalog.pg_publication",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_rel_prrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication_rel",
            "column": "prrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngtypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngtypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngsubtype_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngsubtype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngmultitypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngmultitypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngcollation_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngcollation"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngsubopc_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngsubopc"
          },
          "ref": {
            "table": "pg_catalog.pg_opclass",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngcanonical_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngcanonical"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_range_rngsubdiff_fk_az",
          "src": {
            "table": "pg_catalog.pg_range",
            "column": "rngsubdiff"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_rewrite_ev_class_fk_az",
          "src": {
            "table": "pg_catalog.pg_rewrite",
            "column": "ev_class"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_seclabel_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_seclabel",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequence_seqrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequence",
            "column": "seqrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequence_seqtypid_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequence",
            "column": "seqtypid"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shdepend_dbid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shdepend",
            "column": "dbid"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shdepend_classid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shdepend",
            "column": "classid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shdepend_refclassid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shdepend",
            "column": "refclassid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shdescription_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shdescription",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shseclabel_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shseclabel",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_starelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic",
            "column": "starelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_staattnum_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic",
            "column": "staattnum"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_staopN_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic",
            "column": "staopN"
          },
          "ref": {
            "table": "pg_catalog.pg_operator",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_stacollN_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic",
            "column": "stacollN"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_ext_stxrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_ext_stxnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_ext_stxowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_ext_stxkeys_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxkeys"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_statistic_ext_data_stxoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_statistic_ext_data",
            "column": "stxoid"
          },
          "ref": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_subscription_subdbid_fk_az",
          "src": {
            "table": "pg_catalog.pg_subscription",
            "column": "subdbid"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_subscription_subowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_subscription",
            "column": "subowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_subscription_rel_srsubid_fk_az",
          "src": {
            "table": "pg_catalog.pg_subscription_rel",
            "column": "srsubid"
          },
          "ref": {
            "table": "pg_catalog.pg_subscription",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_subscription_rel_srrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_subscription_rel",
            "column": "srrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tablespace_spcowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_tablespace",
            "column": "spcowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_transform_trftype_fk_az",
          "src": {
            "table": "pg_catalog.pg_transform",
            "column": "trftype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_transform_trflang_fk_az",
          "src": {
            "table": "pg_catalog.pg_transform",
            "column": "trflang"
          },
          "ref": {
            "table": "pg_catalog.pg_language",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_transform_trffromsql_fk_az",
          "src": {
            "table": "pg_catalog.pg_transform",
            "column": "trffromsql"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_transform_trftosql_fk_az",
          "src": {
            "table": "pg_catalog.pg_transform",
            "column": "trftosql"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgparentid_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgparentid"
          },
          "ref": {
            "table": "pg_catalog.pg_trigger",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgfoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgfoid"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgconstrrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgconstrrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgconstrindid_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgconstrindid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgconstraint_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgconstraint"
          },
          "ref": {
            "table": "pg_catalog.pg_constraint",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_trigger_tgattr_fk_az",
          "src": {
            "table": "pg_catalog.pg_trigger",
            "column": "tgattr"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attnum"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_config_cfgnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_config",
            "column": "cfgnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_config_cfgowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_config",
            "column": "cfgowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_config_cfgparser_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_config",
            "column": "cfgparser"
          },
          "ref": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_config_map_mapcfg_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_config_map",
            "column": "mapcfg"
          },
          "ref": {
            "table": "pg_catalog.pg_ts_config",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_config_map_mapdict_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_config_map",
            "column": "mapdict"
          },
          "ref": {
            "table": "pg_catalog.pg_ts_dict",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_dict_dictnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_dict",
            "column": "dictnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_dict_dictowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_dict",
            "column": "dictowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_dict_dicttemplate_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_dict",
            "column": "dicttemplate"
          },
          "ref": {
            "table": "pg_catalog.pg_ts_template",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prsnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prsnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prsstart_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prsstart"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prstoken_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prstoken"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prsend_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prsend"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prsheadline_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prsheadline"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_parser_prslextype_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_parser",
            "column": "prslextype"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_template_tmplnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_template",
            "column": "tmplnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_template_tmplinit_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_template",
            "column": "tmplinit"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_ts_template_tmpllexize_fk_az",
          "src": {
            "table": "pg_catalog.pg_ts_template",
            "column": "tmpllexize"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typrelid_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typrelid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typsubscript_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typsubscript"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typelem_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typelem"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typarray_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typarray"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typinput_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typinput"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typoutput_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typoutput"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typreceive_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typreceive"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typsend_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typsend"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typmodin_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typmodin"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typmodout_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typmodout"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typanalyze_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typanalyze"
          },
          "ref": {
            "table": "pg_catalog.pg_proc",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typbasetype_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typbasetype"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_type_typcollation_fk_az",
          "src": {
            "table": "pg_catalog.pg_type",
            "column": "typcollation"
          },
          "ref": {
            "table": "pg_catalog.pg_collation",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mapping_umuser_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mapping",
            "column": "umuser"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mapping_umserver_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mapping",
            "column": "umserver"
          },
          "ref": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_group_groname_fk_az",
          "src": {
            "table": "pg_catalog.pg_group",
            "column": "groname"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_group_grosysid_fk_az",
          "src": {
            "table": "pg_catalog.pg_group",
            "column": "grosysid"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_group_grolist_fk_az",
          "src": {
            "table": "pg_catalog.pg_group",
            "column": "grolist"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_indexes_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_indexes",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_indexes_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_indexes",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_indexes_indexname_fk_az",
          "src": {
            "table": "pg_catalog.pg_indexes",
            "column": "indexname"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_indexes_tablespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_indexes",
            "column": "tablespace"
          },
          "ref": {
            "table": "pg_catalog.pg_tablespace",
            "column": "spcname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_locks_database_fk_az",
          "src": {
            "table": "pg_catalog.pg_locks",
            "column": "database"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_locks_relation_fk_az",
          "src": {
            "table": "pg_catalog.pg_locks",
            "column": "relation"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_locks_classid_fk_az",
          "src": {
            "table": "pg_catalog.pg_locks",
            "column": "classid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_matviews_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_matviews",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_matviews_matviewname_fk_az",
          "src": {
            "table": "pg_catalog.pg_matviews",
            "column": "matviewname"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_matviews_matviewowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_matviews",
            "column": "matviewowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_matviews_tablespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_matviews",
            "column": "tablespace"
          },
          "ref": {
            "table": "pg_catalog.pg_tablespace",
            "column": "spcname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_policies_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_policies",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_policies_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_policies",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_policies_policyname_fk_az",
          "src": {
            "table": "pg_catalog.pg_policies",
            "column": "policyname"
          },
          "ref": {
            "table": "pg_catalog.pg_policy",
            "column": "polname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_prepared_xacts_owner_fk_az",
          "src": {
            "table": "pg_catalog.pg_prepared_xacts",
            "column": "owner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_prepared_xacts_database_fk_az",
          "src": {
            "table": "pg_catalog.pg_prepared_xacts",
            "column": "database"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "datname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_tables_pubname_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication_tables",
            "column": "pubname"
          },
          "ref": {
            "table": "pg_catalog.pg_publication",
            "column": "pubname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_tables_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication_tables",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_publication_tables_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_publication_tables",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_replication_origin_status_local_id_fk_az",
          "src": {
            "table": "pg_catalog.pg_replication_origin_status",
            "column": "local_id"
          },
          "ref": {
            "table": "pg_catalog.pg_replication_origin",
            "column": "roident"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_replication_origin_status_external_id_fk_az",
          "src": {
            "table": "pg_catalog.pg_replication_origin_status",
            "column": "external_id"
          },
          "ref": {
            "table": "pg_catalog.pg_replication_origin",
            "column": "roname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_replication_slots_datoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_replication_slots",
            "column": "datoid"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_replication_slots_database_fk_az",
          "src": {
            "table": "pg_catalog.pg_replication_slots",
            "column": "database"
          },
          "ref": {
            "table": "pg_catalog.pg_database",
            "column": "datname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_roles_oid_fk_az",
          "src": {
            "table": "pg_catalog.pg_roles",
            "column": "oid"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_rules_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_rules",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_rules_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_rules",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_rules_rulename_fk_az",
          "src": {
            "table": "pg_catalog.pg_rules",
            "column": "rulename"
          },
          "ref": {
            "table": "pg_catalog.pg_rewrite",
            "column": "rulename"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_seclabels_classoid_fk_az",
          "src": {
            "table": "pg_catalog.pg_seclabels",
            "column": "classoid"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_seclabels_objnamespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_seclabels",
            "column": "objnamespace"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_seclabels_provider_fk_az",
          "src": {
            "table": "pg_catalog.pg_seclabels",
            "column": "provider"
          },
          "ref": {
            "table": "pg_catalog.pg_seclabel",
            "column": "provider"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_seclabels_label_fk_az",
          "src": {
            "table": "pg_catalog.pg_seclabels",
            "column": "label"
          },
          "ref": {
            "table": "pg_catalog.pg_seclabel",
            "column": "label"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequences_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequences",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequences_sequencename_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequences",
            "column": "sequencename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequences_sequenceowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequences",
            "column": "sequenceowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_sequences_data_type_fk_az",
          "src": {
            "table": "pg_catalog.pg_sequences",
            "column": "data_type"
          },
          "ref": {
            "table": "pg_catalog.pg_type",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shadow_usename_fk_az",
          "src": {
            "table": "pg_catalog.pg_shadow",
            "column": "usename"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_shadow_usesysid_fk_az",
          "src": {
            "table": "pg_catalog.pg_shadow",
            "column": "usesysid"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_attname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats",
            "column": "attname"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_statistics_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "statistics_schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_statistics_name_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "statistics_name"
          },
          "ref": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_statistics_owner_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "statistics_owner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_attnames_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext",
            "column": "attnames"
          },
          "ref": {
            "table": "pg_catalog.pg_attribute",
            "column": "attname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_exprs_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext_exprs",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_exprs_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext_exprs",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_exprs_statistics_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext_exprs",
            "column": "statistics_schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_exprs_statistics_name_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext_exprs",
            "column": "statistics_name"
          },
          "ref": {
            "table": "pg_catalog.pg_statistic_ext",
            "column": "stxname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_stats_ext_exprs_statistics_owner_fk_az",
          "src": {
            "table": "pg_catalog.pg_stats_ext_exprs",
            "column": "statistics_owner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_tablename_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "tablename"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_tableowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "tableowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_tablespace_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "tablespace"
          },
          "ref": {
            "table": "pg_catalog.pg_tablespace",
            "column": "spcname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_hasindexes_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "hasindexes"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relhasindex"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_hasrules_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "hasrules"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relhasrules"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_hastriggers_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "hastriggers"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relhastriggers"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_tables_rowsecurity_fk_az",
          "src": {
            "table": "pg_catalog.pg_tables",
            "column": "rowsecurity"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relrowsecurity"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mappings_umid_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mappings",
            "column": "umid"
          },
          "ref": {
            "table": "pg_catalog.pg_user_mapping",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mappings_srvid_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mappings",
            "column": "srvid"
          },
          "ref": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mappings_srvname_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mappings",
            "column": "srvname"
          },
          "ref": {
            "table": "pg_catalog.pg_foreign_server",
            "column": "srvname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_user_mappings_umuser_fk_az",
          "src": {
            "table": "pg_catalog.pg_user_mappings",
            "column": "umuser"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "oid"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_views_schemaname_fk_az",
          "src": {
            "table": "pg_catalog.pg_views",
            "column": "schemaname"
          },
          "ref": {
            "table": "pg_catalog.pg_namespace",
            "column": "nspname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_views_viewname_fk_az",
          "src": {
            "table": "pg_catalog.pg_views",
            "column": "viewname"
          },
          "ref": {
            "table": "pg_catalog.pg_class",
            "column": "relname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        },
        {
          "name": "pg_views_viewowner_fk_az",
          "src": {
            "table": "pg_catalog.pg_views",
            "column": "viewowner"
          },
          "ref": {
            "table": "pg_catalog.pg_authid",
            "column": "rolname"
          },
          "origins": [
            {
              "id": "1f09b0dc-d622-4018-9fae-f0be83a0ce7e",
              "lines": []
            }
          ]
        }
      ],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    }
  ],
  "usedLayout": "extract schema tables",
  "layouts": {
    "extract schema tables": {
      "canvas": {
        "position": {
          "left": -223,
          "top": -128
        },
        "zoom": 1
      },
      "tables": [
        {
          "id": "pg_catalog.pg_type",
          "position": {
            "left": 1410,
            "top": 230
          },
          "size": {
            "width": 194.71665954589844,
            "height": 215.5
          },
          "color": "emerald",
          "columns": [
            "oid",
            "typnamespace",
            "typname",
            "typtype",
            "typrelid",
            "typelem"
          ]
        },
        {
          "id": "pg_catalog.pg_description",
          "position": {
            "left": 720,
            "top": 220
          },
          "size": {
            "width": 199.31666564941406,
            "height": 143.5
          },
          "color": "emerald",
          "columns": [
            "objoid",
            "objsubid",
            "description"
          ]
        },
        {
          "id": "pg_catalog.pg_index",
          "position": {
            "left": 1120,
            "top": 190
          },
          "size": {
            "width": 190.06666564941406,
            "height": 191.5
          },
          "color": "emerald",
          "columns": [
            "indexrelid",
            "indrelid",
            "indkey",
            "indisprimary",
            "indisunique"
          ]
        },
        {
          "id": "pg_catalog.pg_constraint",
          "position": {
            "left": 1390,
            "top": 460
          },
          "size": {
            "width": 189.18333435058594,
            "height": 239.5
          },
          "color": "emerald",
          "columns": [
            "oid",
            "contype",
            "conname",
            "conrelid",
            "confrelid",
            "conkey",
            "confkey"
          ]
        },
        {
          "id": "pg_catalog.pg_attrdef",
          "position": {
            "left": 800,
            "top": 650
          },
          "size": {
            "width": 208.78334045410156,
            "height": 143.5
          },
          "color": "emerald",
          "columns": [
            "adrelid",
            "adnum",
            "adbin"
          ]
        },
        {
          "id": "pg_catalog.pg_namespace",
          "position": {
            "left": 300,
            "top": 300
          },
          "size": {
            "width": 199.11666870117188,
            "height": 119.5
          },
          "color": "emerald",
          "columns": [
            "oid",
            "nspname"
          ]
        },
        {
          "id": "pg_catalog.pg_class",
          "position": {
            "left": 560,
            "top": 430
          },
          "size": {
            "width": 190.4166717529297,
            "height": 167.5
          },
          "color": "emerald",
          "columns": [
            "oid",
            "relnamespace",
            "relname",
            "relkind"
          ]
        },
        {
          "id": "pg_catalog.pg_attribute",
          "position": {
            "left": 1070,
            "top": 610
          },
          "size": {
            "width": 178.75,
            "height": 215.5
          },
          "color": "emerald",
          "columns": [
            "attrelid",
            "attnum",
            "attname",
            "atttypid",
            "atttypmod",
            "attnotnull"
          ]
        }
      ],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    },
    "initial layout": {
      "canvas": {
        "position": {
          "left": 0,
          "top": 0
        },
        "zoom": 1
      },
      "tables": [],
      "createdAt": 1649492400000,
      "updatedAt": 1649492400000
    }
  },
  "settings": {
    "defaultSchema": "pg_catalog"
  },
  "createdAt": 1649492400000,
  "updatedAt": 1649492400000,
  "version": 2
}
