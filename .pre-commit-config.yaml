repos:
- repo: local
  hooks:
    - id: libs-utils
      name: 'libs/utils'
      language: system
      entry: bash -c 'cd libs/utils && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/utils/.*\.ts*$

    - id: libs-models
      name: 'libs/models'
      language: system
      entry: bash -c 'cd libs/models && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/models/.*\.ts*$

    - id: libs-connector-bigquery
      name: 'libs/connector-bigquery'
      language: system
      entry: bash -c 'cd libs/connector-bigquery && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-bigquery/.*\.ts*$

    - id: libs-connector-couchbase
      name: 'libs/connector-couchbase'
      language: system
      entry: bash -c 'cd libs/connector-couchbase && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-couchbase/.*\.ts*$

    - id: libs-connector-mariadb
      name: 'libs/connector-mariadb'
      language: system
      entry: bash -c 'cd libs/connector-mariadb && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-mariadb/.*\.ts*$

    - id: libs-connector-mongodb
      name: 'libs/connector-mongodb'
      language: system
      entry: bash -c 'cd libs/connector-mongodb && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-mongodb/.*\.ts*$

    - id: libs-connector-mysql
      name: 'libs/connector-mysql'
      language: system
      entry: bash -c 'cd libs/connector-mysql && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-mysql/.*\.ts*$

    - id: libs-connector-oracle
      name: 'libs/connector-oracle'
      language: system
      entry: bash -c 'cd libs/connector-oracle && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-oracle/.*\.ts*$

    - id: libs-connector-postgres
      name: 'libs/connector-postgres'
      language: system
      entry: bash -c 'cd libs/connector-postgres && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-postgres/.*\.ts*$

    - id: libs-connector-snowflake
      name: 'libs/connector-snowflake'
      language: system
      entry: bash -c 'cd libs/connector-snowflake && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-snowflake/.*\.ts*$

    - id: libs-connector-sqlserver
      name: 'libs/connector-sqlserver'
      language: system
      entry: bash -c 'cd libs/connector-sqlserver && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/connector-sqlserver/.*\.ts*$

    - id: libs-serde-aml
      name: 'libs/serde-aml'
      language: system
      entry: bash -c 'cd libs/serde-aml && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/serde-aml/.*\.ts*$

    - id: libs-serde-dbml
      name: 'libs/serde-dbml'
      language: system
      entry: bash -c 'cd libs/serde-dbml && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/serde-dbml/.*\.ts*$

    - id: libs-serde-prisma
      name: 'libs/serde-prisma'
      language: system
      entry: bash -c 'cd libs/serde-prisma && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/serde-prisma/.*\.ts*$

    - id: libs-serde-sql
      name: 'libs/serde-sql'
      language: system
      entry: bash -c 'cd libs/serde-sql && exec npm run build && exec npm test'
      pass_filenames: false
      files: libs/serde-sql/.*\.ts*$

    - id: mix-format
      name: 'Elixir format'
      language: system
      entry: bash -c 'cd backend && exec mix format --check-formatted && exec mix format'
      files: \.exs*$

    - id: mix-build
      name: 'Elixir build'
      language: system
      entry: bash -c 'cd backend && exec mix compile --force'
      pass_filenames: false
      files: \.ex$

    - id: mix-lint
      name: 'Elixir lint'
      language: system
      entry: bash -c 'cd backend && exec mix credo --strict'
      pass_filenames: false
      files: \.exs*$

    - id: mix-test
      name: 'Elixir test'
      language: system
      entry: bash -c 'cd backend && exec mix test'
      pass_filenames: false
      files: \.exs*$

    - id: elm-format
      name: 'Elm format'
      language: system
      entry: bash -c 'cd frontend && exec npm run elm:format'
      pass_filenames: false
      files: \.elm*$

    - id: elm-build
      name: 'Elm build'
      language: system
      entry: bash -c 'cd frontend && exec npm run elm:build'
      pass_filenames: false
      files: \.elm*$

    - id: elm-lint
      name: 'Elm lint'
      language: system
      entry: bash -c 'cd frontend && exec npm run elm:lint'
      pass_filenames: false
      files: \.elm*$

    - id: elm-test
      name: 'Elm test'
      language: system
      entry: bash -c 'cd frontend && exec npm run elm:test'
      pass_filenames: false
      files: \.elm*$

    - id: frontend-build
      name: 'Frontend TS build'
      language: system
      entry: bash -c 'cd frontend && exec npm run ts:lint'
      pass_filenames: false
      files: frontend/.*\.ts*$

    - id: frontend-test
      name: 'Frontend TS test'
      language: system
      entry: bash -c 'cd frontend && exec npm run ts:test'
      pass_filenames: false
      files: frontend/.*\.ts*$

    - id: gateway
      name: 'Gateway'
      language: system
      entry: bash -c 'cd gateway && exec npm run lint && exec npm run check:types && exec npm test'
      pass_filenames: false
      files: gateway/.*\.ts*$

    - id: cli
      name: 'CLI'
      language: system
      entry: bash -c 'cd cli && exec npm run build && exec npm test'
      pass_filenames: false
      files: cli/.*\.ts*$

    # No test or build for browser-extension
    # No test or build for desktop

- repo: https://github.com/commitizen-tools/commitizen
  rev: v2.32.2
  hooks:
    - id: commitizen
    - id: commitizen-branch
      stages: [push]

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
    - id: trailing-whitespace
      exclude_types: [markdown]
    - id: check-merge-conflict
    - id: check-yaml
    - id: end-of-file-fixer
